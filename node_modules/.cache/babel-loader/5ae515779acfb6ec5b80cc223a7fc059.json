{"ast":null,"code":"import firebase from '@firebase/app';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, base64, stringToByteArray, Sha1, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, createMockUserToken, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { __spreadArray, __read, __values, __extends, __awaiter, __generator, __assign } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\nvar name = \"@firebase/database\";\nvar version = \"0.11.0\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\nvar SDK_VERSION = ''; // SDK_VERSION should be set before any database instance is created\n\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\n\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param key - The key to save the value under\r\n   * @param value - The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  };\n  /**\r\n   * @returns The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  };\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function (domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\n\n\nvar sha1 = function (str) {\n  var utf8Bytes = stringToByteArray(str);\n  var sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nvar buildLogMessage_ = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < varArgs.length; i++) {\n    var arg = varArgs[i];\n\n    if (Array.isArray(arg) || arg && typeof arg === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof arg.length === 'number') {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function (logger_, persistent) {\n  assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nvar log = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nvar logWrapper = function (prefix) {\n  return function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\n  };\n};\n\nvar error = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.error(message);\n};\n\nvar fatal = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.error(message);\n  throw new Error(message);\n};\n\nvar warn = function () {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\n\n\nvar isInvalidJSONNumber = function (data) {\n  return typeof data === 'number' && (data !== data || // NaN\n  data === Number.POSITIVE_INFINITY || data === Number.NEGATIVE_INFINITY);\n};\n\nvar executeWhenDOMReady = function (fn) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (document.attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') {\n          wrappedFn_1();\n        }\n      }); // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\n\nvar nameCompare = function (a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @returns {!number} comparison result.\r\n */\n\n\nvar stringCompare = function (a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nvar requireKey = function (key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\n  }\n};\n\nvar ObjectToUniqueKey = function (obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  var keys = []; // eslint-disable-next-line guard-for-in\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function (str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\n\n\nvar doubleToIEEE754String = function (v) {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1;\n  var s, e, f, ln, i; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  var bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  var str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\n\n\nvar isChromeExtensionContentScript = function () {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\n\n\nvar isWindowsStoreApp = function () {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\n\n\nfunction errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query._path.toString() + ': ' + reason); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  error.code = code.toUpperCase();\n  return error;\n}\n/**\r\n * Used to test for integer-looking strings\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MIN = -2147483648;\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MAX = 2147483647;\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\n\nvar tryParseInt = function (str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\n\n\nvar exceptionGuard = function (fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function () {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function (fn, time) {\n  var timeout = setTimeout(fn, time); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */\n\n\nvar AppCheckTokenProvider =\n/** @class */\nfunction () {\n  function AppCheckTokenProvider(appName_, appCheckProvider) {\n    var _this = this;\n\n    this.appName_ = appName_;\n    this.appCheckProvider = appCheckProvider;\n    this.appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({\n      optional: true\n    });\n\n    if (!this.appCheck) {\n      appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(function (appCheck) {\n        return _this.appCheck = appCheck;\n      });\n    }\n  }\n\n  AppCheckTokenProvider.prototype.getToken = function (forceRefresh) {\n    var _this = this;\n\n    if (!this.appCheck) {\n      return new Promise(function (resolve, reject) {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(function () {\n          if (_this.appCheck) {\n            _this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.appCheck.getToken(forceRefresh);\n  };\n\n  AppCheckTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    var _a;\n\n    (_a = this.appCheckProvider) === null || _a === void 0 ? void 0 : _a.get().then(function (appCheck) {\n      return appCheck.addTokenListener(listener);\n    });\n  };\n\n  AppCheckTokenProvider.prototype.notifyForInvalidToken = function () {\n    warn(\"Provided AppCheck credentials for the app named \\\"\" + this.appName_ + \"\\\" \" + 'are invalid. This usually indicates your app was not initialized correctly.');\n  };\n\n  return AppCheckTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\n\nvar FirebaseAuthTokenProvider =\n/** @class */\nfunction () {\n  function FirebaseAuthTokenProvider(appName_, firebaseOptions_, authProvider_) {\n    var _this = this;\n\n    this.appName_ = appName_;\n    this.firebaseOptions_ = firebaseOptions_;\n    this.authProvider_ = authProvider_;\n    this.auth_ = null;\n    this.auth_ = authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth_) {\n      authProvider_.onInit(function (auth) {\n        return _this.auth_ = auth;\n      });\n    }\n  }\n\n  FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    var _this = this;\n\n    if (!this.auth_) {\n      return new Promise(function (resolve, reject) {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(function () {\n          if (_this.auth_) {\n            _this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_.get().then(function (auth) {\n        return auth.addAuthTokenListener(listener);\n      });\n    }\n  };\n\n  FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.authProvider_.get().then(function (auth) {\n      return auth.removeAuthTokenListener(listener);\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.appName_ + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return FirebaseAuthTokenProvider;\n}();\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\n\n\nvar EmulatorTokenProvider =\n/** @class */\nfunction () {\n  function EmulatorTokenProvider(accessToken) {\n    this.accessToken = accessToken;\n  }\n\n  EmulatorTokenProvider.prototype.getToken = function (forceRefresh) {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  };\n\n  EmulatorTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  };\n\n  EmulatorTokenProvider.prototype.removeTokenChangeListener = function (listener) {};\n\n  EmulatorTokenProvider.prototype.notifyForInvalidToken = function () {};\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n\n\n  EmulatorTokenProvider.OWNER = 'owner';\n  return EmulatorTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f'; // Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\n\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\nvar LAST_SESSION_PARAM = 'ls';\nvar APPLICATION_ID_PARAM = 'p';\nvar APP_CHECK_TOKEN_PARAM = 'ac';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param host - Hostname portion of the url for the repo\r\n   * @param secure - Whether or not this repo is accessed over ssl\r\n   * @param namespace - The namespace represented by the repo\r\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n   * @param persistenceKey - Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\n    if (nodeAdmin === void 0) {\n      nodeAdmin = false;\n    }\n\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.nodeAdmin = nodeAdmin;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this._host;\n  }\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this._domain !== 'firebaseio.com' && this._domain !== 'firebaseio-demo.com';\n  };\n\n  Object.defineProperty(RepoInfo.prototype, \"host\", {\n    get: function () {\n      return this._host;\n    },\n    set: function (newHost) {\n      if (newHost !== this.internalHost) {\n        this.internalHost = newHost;\n\n        if (this.isCacheableHost()) {\n          PersistentStorage.set('host:' + this._host, this.internalHost);\n        }\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n\n  RepoInfo.prototype.toURLString = function () {\n    var protocol = this.secure ? 'https://' : 'http://';\n    var query = this.includeNamespaceInQueryParams ? \"?ns=\" + this.namespace : '';\n    return \"\" + protocol + this.host + \"/\" + query;\n  };\n\n  return RepoInfo;\n}();\n\nfunction repoInfoNeedsQueryParam(repoInfo) {\n  return repoInfo.host !== repoInfo.internalHost || repoInfo.isCustomHost() || repoInfo.includeNamespaceInQueryParams;\n}\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\n\n\nfunction repoInfoConnectionURL(repoInfo, type, params) {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n  var connURL;\n\n  if (type === WEBSOCKET) {\n    connURL = (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL = (repoInfo.secure ? 'https://' : 'http://') + repoInfo.internalHost + '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  var pairs = [];\n  each(params, function (key, value) {\n    pairs.push(key + '=' + value);\n  });\n  return connURL + pairs.join('&');\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar collections = {};\nvar reporters = {};\n\nfunction statsManagerGetCollection(repoInfo) {\n  var hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\n  var hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString];\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function () {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function (i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId An identifier for this connection, used for logging\r\n   * @param repoInfo The info for the endpoint to send data to.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param appCheckToken The AppCheck token for this client.\r\n   * @param authToken The AuthToken to use for this connection.\r\n   * @param transportSessionId Optional transportSessionid if we are\r\n   * reconnecting for an existing transport session\r\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n   * already created a connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\n    var _this = this;\n\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.applicationId = applicationId;\n    this.appCheckToken = appCheckToken;\n    this.authToken = authToken;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      // Always add the token if we have one.\n      if (_this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\n      }\n\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n  /**\r\n   * @param onMessage - Callback when messages arrive\r\n   * @param onDisconnect - Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) {\n        return;\n      } //Set up a callback that gets triggered once a connection is set up.\n\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 5),\n            command = _a[0],\n            arg1 = _a[1],\n            arg2 = _a[2];\n\n        _a[3];\n        _a[4];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) {\n          return; // we closed the connection.\n        }\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command === FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 2),\n            pN = _a[0],\n            data = _a[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (_this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\n      }\n\n      if (_this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\n      }\n\n      if (typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param data - The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (isNodeSdk()) {\n      return;\n    }\n\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    this.outstandingRequests = new Set(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (iframe.document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param id - The ID of this connection\r\n   * @param pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param url - The URL of the script tag.\r\n   * @param serial - The serial number of the request.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial);\n\n    var doNewRequest = function () {\n      _this.outstandingRequests.delete(serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function () {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param url - The URL for the script tag source.\r\n   * @param loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) {\n            return;\n          }\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId identifier for this transport\r\n   * @param repoInfo The info for the websocket endpoint.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param appCheckToken The App Check Token for this client.\r\n   * @param authToken The Auth Token for this client.\r\n   * @param transportSessionId Optional transportSessionId if this is connecting\r\n   * to an existing transport session\r\n   * @param lastSessionId Optional lastSessionId if there was a previous\r\n   * connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.applicationId = applicationId;\n    this.appCheckToken = appCheckToken;\n    this.authToken = authToken;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken);\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n  /**\r\n   * @param repoInfo - The info for the websocket endpoint.\r\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n   * @returns connection url\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId, appCheckToken) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!isNodeSdk() && typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  };\n  /**\r\n   * @param onMessage - Callback when messages arrive\r\n   * @param onDisconnect - Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        var device = this.nodeAdmin ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        }; // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n\n        if (this.authToken) {\n          options.headers['Authorization'] = \"Bearer \" + this.authToken;\n        }\n\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        } // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') === 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        var options = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || '',\n            'X-Firebase-AppCheck': this.appCheckToken || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length === this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param frameCount - The number of frames we are expecting from the server\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @returns Any remaining data to be process, or null if there is none\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess - The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param data - The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param str - String to send.\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param repoInfo - Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    get: function () {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n\n      try {\n        for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @returns The constructor for the initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @returns The constructor for the next transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param id - an id for this connection\r\n   * @param repoInfo_ - the info for the endpoint to connect to\r\n   * @param applicationId_ - the Firebase App ID for this project\r\n   * @param appCheckToken_ - The App Check Token for this device.\r\n   * @param authToken_ - The auth token for this session.\r\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, applicationId_, appCheckToken_, authToken_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.applicationId_ = applicationId_;\n    this.appCheckToken_ = appCheckToken_;\n    this.authToken_ = authToken_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, null, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeoutMS = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      }, Math.floor(healthyTimeoutMS));\n    }\n  };\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ !== 2\n      /* DISCONNECTED */\n      ) {\n        if (conn === _this.rx_) {\n          _this.onPrimaryMessageReceived_(message);\n        } else if (conn === _this.secondaryConn_) {\n          _this.onSecondaryMessageReceived_(message);\n        } else {\n          _this.log_('message on old connection');\n        }\n      }\n    };\n  };\n  /**\r\n   * @param dataMsg - An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onControl_(data);\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   * @param handshake - The handshake data returned from the server\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host; // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ === 0\n    /* CONNECTING */\n    ) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n      this.tryStartUpgrade_();\n    }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host; // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n      this.log_('sending ping on primary.');\n      this.sendData_({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n      this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  };\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n      this.log_('Closing realtime connection.');\n      this.state_ = 2\n      /* DISCONNECTED */\n      ;\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param token - The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n  /**\r\n   * Refreshes the app check token for the current connection.\r\n   * @param token The app check token\r\n   */\n\n\n  ServerActions.prototype.refreshAppCheckToken = function (token) {};\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var varArgs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      varArgs[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = __spreadArray([], __read(this.listeners_[eventType]));\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  __extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Maximum key depth. */\n\n\nvar MAX_PATH_DEPTH = 32;\n/** Maximum number of (UTF8) bytes in a Firebase path. */\n\nvar MAX_PATH_LENGTH_BYTES = 768;\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param pathOrString - Path string to parse, or another path, or the raw\r\n   * tokens array\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  };\n\n  return Path;\n}();\n\nfunction newEmptyPath() {\n  return new Path('');\n}\n\nfunction pathGetFront(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n/**\r\n * @returns The number of segments in this path\r\n */\n\n\nfunction pathGetLength(path) {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nfunction pathPopFront(path) {\n  var pieceNum = path.pieceNum_;\n\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n\n  return new Path(path.pieces_, pieceNum);\n}\n\nfunction pathGetBack(path) {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nfunction pathToUrlEncodedString(path) {\n  var pathString = '';\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\n\n\nfunction pathSlice(path, begin) {\n  if (begin === void 0) {\n    begin = 0;\n  }\n\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nfunction pathParent(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nfunction pathChild(path, childPathObj) {\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    var childPieces = childPathObj.split('/');\n\n    for (var i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n/**\r\n * @returns True if there are no segments in this path\r\n */\n\n\nfunction pathIsEmpty(path) {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\n\n\nfunction newRelativePath(outerPath, innerPath) {\n  var outer = pathGetFront(outerPath),\n      inner = pathGetFront(innerPath);\n\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n  }\n}\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\n\n\nfunction pathCompare(left, right) {\n  var leftKeys = pathSlice(left, 0);\n  var rightKeys = pathSlice(right, 0);\n\n  for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n/**\r\n * @returns true if paths are the same.\r\n */\n\n\nfunction pathEquals(path, other) {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\n\n\nfunction pathContains(path, other) {\n  var i = path.pieceNum_;\n  var j = other.pieceNum_;\n\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n\n    ++i;\n    ++j;\n  }\n\n  return true;\n}\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param path - Initial Path.\r\n   * @param errorPrefix_ - Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n\n    validationPathCheckValid(this);\n  }\n\n  return ValidationPath;\n}();\n\nfunction validationPathPush(validationPath, child) {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nfunction validationPathPop(validationPath) {\n  var last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last); // Un-count the previous '/'\n\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath) {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(validationPath.errorPrefix_ + 'has a key path longer than ' + MAX_PATH_LENGTH_BYTES + ' bytes (' + validationPath.byteLength_ + ').');\n  }\n\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(validationPath.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + MAX_PATH_DEPTH + ') or object contains a cycle ' + validationPathToErrorString(validationPath));\n  }\n}\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\n\n\nfunction validationPathToErrorString(validationPath) {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  __extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  __extends(PersistentConnection, _super);\n  /**\r\n   * @param repoInfo_ - Data about the namespace we are connecting to\r\n   * @param applicationId_ - The Firebase App ID for this project\r\n   * @param onDataUpdate_ - A callback for new data from the server\r\n   */\n\n\n  function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, appCheckTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.applicationId_ = applicationId_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.appCheckTokenProvider_ = appCheckTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingGets_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.outstandingGetCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.appCheckToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.invalidAppCheckTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(stringify(msg));\n    assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n\n  PersistentConnection.prototype.get = function (query) {\n    var _this = this;\n\n    this.initConnection_();\n    var deferred = new Deferred();\n    var request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    var outstandingGet = {\n      action: 'g',\n      request: request,\n      onComplete: function (message) {\n        var payload = message['d'];\n\n        if (message['s'] === 'ok') {\n          _this.onDataUpdate_(request['p'], payload,\n          /*isMerge*/\n          false,\n          /*tag*/\n          null);\n\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    var index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(function () {\n        var get = _this.outstandingGets_[index];\n\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n\n        delete _this.outstandingGets_[index];\n        _this.outstandingGetCount_--;\n\n        if (_this.outstandingGetCount_ === 0) {\n          _this.outstandingGets_ = [];\n        }\n\n        _this.log_('get ' + index + ' timed out on connection');\n\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  };\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    this.initConnection_();\n    var queryId = query._queryIdentifier;\n\n    var pathString = query._path.toString();\n\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n\n    assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\n    assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n\n  PersistentConnection.prototype.sendGet_ = function (index) {\n    var _this = this;\n\n    var get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, function (message) {\n      delete _this.outstandingGets_[index];\n      _this.outstandingGetCount_--;\n\n      if (_this.outstandingGetCount_ === 0) {\n        _this.outstandingGets_ = [];\n      }\n\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  };\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n\n    var pathString = query._path.toString();\n\n    var queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId); // only trigger actions if the listen hasn't been removed and readded\n\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var warnings = safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n\n        var indexPath = query._path.toString();\n\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n\n  PersistentConnection.prototype.refreshAppCheckToken = function (token) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, function () {});\n      }\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given token. If the authentication\r\n   * attempt fails, it's triggered like the token was revoked (the connection is\r\n   * closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAppCheck = function () {\n    var _this = this;\n\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest('appcheck', {\n        'token': this.appCheckToken_\n      }, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (status === 'ok') {\n          _this.invalidAppCheckTokenCount_ = 0;\n        } else {\n          _this.onAppCheckRevoked_(status, data);\n        }\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query._path.toString();\n\n    var queryId = query._queryIdentifier;\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    this.initConnection_();\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n\n    if (hash !== undefined) {\n      request[\n      /*hash*/\n      'h'] = hash;\n    } // TODO: Only keep track of the most recent put for a given path?\n\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(message[\n        /*status*/\n        's'], message[\n        /* data */\n        'd']);\n      }\n    });\n  };\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n\n    if (action === 'd') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge*/\n      false, body['t']);\n    } else if (action === 'm') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge=*/\n      true, body['t']);\n    } else if (action === 'c') {\n      this.onListenRevoked_(body[\n      /*path*/\n      'p'], body[\n      /*query*/\n      'q']);\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error('Unrecognized action received from server: ' + stringify(action) + '\\nAre you using the latest client?');\n    }\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(timeout));\n  };\n\n  PersistentConnection.prototype.initConnection_ = function () {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  };\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var onDataMessage, onReady, onDisconnect_1, connId, lastSessionId, canceled_1, connection_1, closeFn, sendRequestFn, forceRefresh, _a, authToken, appCheckToken, error_1;\n\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!this.shouldReconnect_()) return [3\n            /*break*/\n            , 4];\n            this.log_('Making a connection attempt');\n            this.lastConnectionAttemptTime_ = new Date().getTime();\n            this.lastConnectionEstablishedTime_ = null;\n            onDataMessage = this.onDataMessage_.bind(this);\n            onReady = this.onReady_.bind(this);\n            onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n            connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n            lastSessionId = this.lastSessionId;\n            canceled_1 = false;\n            connection_1 = null;\n\n            closeFn = function () {\n              if (connection_1) {\n                connection_1.close();\n              } else {\n                canceled_1 = true;\n                onDisconnect_1();\n              }\n            };\n\n            sendRequestFn = function (msg) {\n              assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n              connection_1.sendRequest(msg);\n            };\n\n            this.realtime_ = {\n              close: closeFn,\n              sendRequest: sendRequestFn\n            };\n            forceRefresh = this.forceTokenRefresh_;\n            this.forceTokenRefresh_ = false;\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , Promise.all([this.authTokenProvider_.getToken(forceRefresh), this.appCheckTokenProvider_.getToken(forceRefresh)])];\n\n          case 2:\n            _a = __read.apply(void 0, [_b.sent(), 2]), authToken = _a[0], appCheckToken = _a[1];\n\n            if (!canceled_1) {\n              log('getToken() completed. Creating connection.');\n              this.authToken_ = authToken && authToken.accessToken;\n              this.appCheckToken_ = appCheckToken && appCheckToken.token;\n              connection_1 = new Connection(connId, this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, onDataMessage, onReady, onDisconnect_1,\n              /* onKill= */\n              function (reason) {\n                warn(reason + ' (' + _this.repoInfo_.toString() + ')');\n\n                _this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n              }, lastSessionId);\n            } else {\n              log('getToken() completed but was canceled');\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_1 = _b.sent();\n            this.log_('Failed to get token: ' + error_1);\n\n            if (!canceled_1) {\n              if (this.repoInfo_.nodeAdmin) {\n                // This may be a critical error for the Admin Node.js SDK, so log a warning.\n                // But getToken() may also just have temporarily failed, so we still want to\n                // continue retrying.\n                warn(error_1);\n              }\n\n              closeFn();\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  };\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  };\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map.delete(queryId);\n\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onAppCheckRevoked_ = function (statusCode, explanation) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true; // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth();\n    this.tryAppCheck();\n\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n\n    for (var i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  };\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @returns A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   *\r\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @returns a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  __extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function () {\n      return __EMPTY_NODE;\n    },\n    set: function (val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n\n  KeyIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @param node - Node to iterate.\r\n   * @param isReverse_ - Whether or not to iterate in reverse\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_.pop();\n    var result;\n\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = {\n        key: node.key,\n        value: node.value\n      };\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param key - Key associated with this node.\r\n   * @param value - Value associated with this node.\r\n   * @param color - Whether this node is red.\r\n   * @param left - Left child.\r\n   * @param right - Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param key - New key for the node, or null.\r\n   * @param value - New value for the node, or null.\r\n   * @param color - New color for the node, or null.\r\n   * @param left - New left child for the node, or null.\r\n   * @param right - New right child for the node, or null.\r\n   * @returns The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @returns The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @returns True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @returns The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || !!action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @returns The minimum node in the tree.\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @returns The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @returns The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   * @param key - Key to insert.\r\n   * @param value - Value to insert.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @returns New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param key - The key of the item to remove.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @returns Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @returns New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @returns New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @returns Newt ree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @returns True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n\n  LLRBNode.prototype.check_ = function () {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    var blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @returns The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param key - Key to be added.\r\n   * @param value - Value to be added.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param key - The key to remove.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @returns The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @returns True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @returns Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @param comparator_ - Key comparator.\r\n   * @param root_ - Optional root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param key - Key to be added.\r\n   * @param value - Value to be added.\r\n   * @returns New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param key - The key to remove.\r\n   * @returns New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param key - The key to look up.\r\n   * @returns The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param key - The key to find the predecessor of\r\n   * @returns The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @returns True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @returns The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @returns The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @returns The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @returns The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @returns True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @returns The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_NODE$2;\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$2 = val;\n}\n\nvar priorityHashText = function (priority) {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\n\n\nvar validatePriorityNode = function (priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    assert(priorityNode === MAX_NODE$2 || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  assert(priorityNode === MAX_NODE$2 || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param value_ - The value to store in this leaf node. The object type is\r\n   * possible in the event of a deferred value\r\n   * @param priorityNode_ - The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function () {\n      return __childrenNodeConstructor;\n    },\n    set: function (val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n\n      if (!this.priorityNode_.isEmpty()) {\n        toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      }\n\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @returns The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n\n  LeafNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON$1;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON$1 = val;\n}\n\nfunction setMaxNode(val) {\n  MAX_NODE$1 = val;\n}\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  __extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n\n  PriorityIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar LOG_2 = Math.log(2);\n\nvar Base12Num =\n/** @class */\nfunction () {\n  function Base12Num(length) {\n    var logBase2 = function (num) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function (bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\n\n\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function (low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function (base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function (chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function (pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function () {\n      assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = safeGet(this.indexes_, indexKey);\n\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return contains(this.indexSet_, indexDefinition.toString());\n  };\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n\n    var newIndexSet = __assign({}, this.indexSet_);\n\n    newIndexSet[indexName] = indexDefinition;\n\n    var newIndexes = __assign({}, this.indexes_);\n\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\n      var index = safeGet(_this.indexSet_, indexName);\n      assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name !== namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param children_ - List of children of this node..\r\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function () {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      var newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = []; // eslint-disable-next-line guard-for-in\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n\n      if (!this.getPriority().isEmpty()) {\n        toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n\n        if (childHash !== '') {\n          toHash_1 += ':' + key + ':' + childHash;\n        }\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  __extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\n\n\nvar MAX_NODE = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode$1(MAX_NODE);\nsetMaxNode(MAX_NODE);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\n\nfunction nodeFromJSON(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON(child);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON(childData);\n\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node_1 = node_1.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  __extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  };\n\n  PathIndex.prototype.toString = function () {\n    return pathSlice(this.indexPath_, 0).join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  __extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n\n  ValueIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  ValueIndex.prototype.maxPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MAX;\n  };\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Modeled after base64 web-safe chars, but ordered by ASCII.\n\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nvar MIN_PUSH_CHAR = '-';\nvar MAX_PUSH_CHAR = 'z';\nvar MAX_KEY_LEN = 786;\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\nvar nextPushId = function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n\nvar successor = function (key) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i_1 = 0; i_1 < next.length; i_1++) {\n    next[i_1] = key.charAt(i_1);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  var i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  } // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n\n\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  var source = next[i];\n  var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n  return next.slice(0, i + 1).join('');\n}; // `key` is assumed to be non-empty.\n\n\nvar predecessor = function (key) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  } // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n\n\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n\n    delete next[next.length - 1];\n    return next.join('');\n  } // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n\n\n  next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction changeValue(snapshotNode) {\n  return {\n    type: \"value\"\n    /* VALUE */\n    ,\n    snapshotNode: snapshotNode\n  };\n}\n\nfunction changeChildAdded(childName, snapshotNode) {\n  return {\n    type: \"child_added\"\n    /* CHILD_ADDED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildRemoved(childName, snapshotNode) {\n  return {\n    type: \"child_removed\"\n    /* CHILD_REMOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\n  return {\n    type: \"child_changed\"\n    /* CHILD_CHANGED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName,\n    oldSnap: oldSnap\n  };\n}\n\nfunction changeChildMoved(childName, snapshotNode) {\n  return {\n    type: \"child_moved\"\n    /* CHILD_MOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\n        } else {\n          assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function (a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function (a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.startAfterSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.endBeforeSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n\n  QueryParams.prototype.hasStartAfter = function () {\n    return this.startAfterSet_;\n  };\n\n  QueryParams.prototype.hasEndBefore = function () {\n    return this.endBeforeSet_;\n  };\n  /**\r\n   * @returns True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === \"l\"\n      /* VIEW_FROM_LEFT */\n      ;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @returns True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  };\n\n  QueryParams.prototype.copy = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n\n  return QueryParams;\n}();\n\nfunction queryParamsGetNodeFilter(queryParams) {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"l\"\n  /* VIEW_FROM_LEFT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsLimitToLast(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"r\"\n  /* VIEW_FROM_RIGHT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsStartAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.startSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexStartValue_ = indexValue;\n\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    var childKey = void 0;\n\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n\n  params.startAfterSet_ = true;\n  return params;\n}\n\nfunction queryParamsEndAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.endSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexEndValue_ = indexValue;\n\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\n  var childKey;\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nfunction queryParamsOrderBy(queryParams, index) {\n  var newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\n\n\nfunction queryParamsToRestQueryStringParameters(queryParams) {\n  var qs = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  var orderBy;\n\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = \"$priority\"\n    /* PRIORITY_INDEX */\n    ;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = \"$value\"\n    /* VALUE_INDEX */\n    ;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = \"$key\"\n    /* KEY_INDEX */\n    ;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n\n  qs[\"orderBy\"\n  /* ORDER_BY */\n  ] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[\"startAt\"\n    /* START_AT */\n    ] = stringify(queryParams.indexStartValue_);\n\n    if (queryParams.startNameSet_) {\n      qs[\"startAt\"\n      /* START_AT */\n      ] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[\"endAt\"\n    /* END_AT */\n    ] = stringify(queryParams.indexEndValue_);\n\n    if (queryParams.endNameSet_) {\n      qs[\"endAt\"\n      /* END_AT */\n      ] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[\"limitToFirst\"\n      /* LIMIT_TO_FIRST */\n      ] = queryParams.limit_;\n    } else {\n      qs[\"limitToLast\"\n      /* LIMIT_TO_LAST */\n      ] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nfunction queryParamsGetQueryObject(queryParams) {\n  var obj = {};\n\n  if (queryParams.startSet_) {\n    obj[\"sp\"\n    /* INDEX_START_VALUE */\n    ] = queryParams.indexStartValue_;\n\n    if (queryParams.startNameSet_) {\n      obj[\"sn\"\n      /* INDEX_START_NAME */\n      ] = queryParams.indexStartName_;\n    }\n  }\n\n  if (queryParams.endSet_) {\n    obj[\"ep\"\n    /* INDEX_END_VALUE */\n    ] = queryParams.indexEndValue_;\n\n    if (queryParams.endNameSet_) {\n      obj[\"en\"\n      /* INDEX_END_NAME */\n      ] = queryParams.indexEndName_;\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    obj[\"l\"\n    /* LIMIT */\n    ] = queryParams.limit_;\n    var viewFrom = queryParams.viewFrom_;\n\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = \"l\"\n        /* VIEW_FROM_LEFT */\n        ;\n      } else {\n        viewFrom = \"r\"\n        /* VIEW_FROM_RIGHT */\n        ;\n      }\n    }\n\n    obj[\"vf\"\n    /* VIEW_FROM */\n    ] = viewFrom;\n  } // For now, priority index is the default, so we only specify if it's some other index\n\n\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[\"i\"\n    /* INDEX */\n    ] = queryParams.index_.toString();\n  }\n\n  return obj;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  __extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param repoInfo_ - Data about the namespace we are connecting to\r\n   * @param onDataUpdate_ - A callback for new data from the server\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_, appCheckTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.appCheckTokenProvider_ = appCheckTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\n      return query._path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query._path.toString();\n\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error === 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n\n  ReadonlyRestClient.prototype.get = function (query) {\n    var _this = this;\n\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\n\n    var pathString = query._path.toString();\n\n    var deferred = new Deferred();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false,\n        /*tag=*/\n        null);\n\n        deferred.resolve(data);\n      } else {\n        deferred.reject(new Error(data));\n      }\n    });\n    return deferred.promise;\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    return Promise.all([this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false), this.appCheckTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false)]).then(function (_a) {\n      var _b = __read(_a, 2),\n          authToken = _b[0],\n          appCheckToken = _b[1];\n\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newSparseSnapshotTree() {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\n\n\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    var childKey = pathGetFront(path);\n\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    var child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\n\n\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        var value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n        value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      var childKey = pathGetFront(path);\n      path = pathPopFront(path);\n\n      if (sparseSnapshotTree.children.has(childKey)) {\n        var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\n\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\n\n\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\n      var path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\n\n\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\n  sparseSnapshotTree.children.forEach(function (tree, key) {\n    func(key, tree);\n  });\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n\n    var delta = __assign({}, newStats);\n\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n\nfunction statsReporterIncludeStat(reporter, stat) {\n  reporter.statsToReport_[stat] = true;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n\nfunction newOperationSourceUser() {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServer() {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServerTaggedQuery(queryId) {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: queryId,\n    tagged: true\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n   */\n  function AckUserWrite(\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  affectedTree,\n  /** @inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = newOperationSourceUser();\n  }\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!pathIsEmpty(this.path)) {\n      assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /** @inheritDoc */\n  source,\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  };\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  };\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n\n  return EventGenerator;\n}();\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\n  var events = [];\n  var moves = [];\n  changes.forEach(function (change) {\n    if (change.type === \"child_changed\"\n    /* CHILD_CHANGED */\n    && eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\"\n  /* CHILD_REMOVED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\"\n  /* CHILD_ADDED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\"\n  /* CHILD_MOVED */\n  , moves, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\"\n  /* CHILD_CHANGED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\"\n  /* VALUE */\n  , changes, eventRegistrations, eventCache);\n  return events;\n}\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\n  var filteredChanges = changes.filter(function (change) {\n    return change.type === eventType;\n  });\n  filteredChanges.sort(function (a, b) {\n    return eventGeneratorCompareChanges(eventGenerator, a, b);\n  });\n  filteredChanges.forEach(function (change) {\n    var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\n    registrations.forEach(function (registration) {\n      if (registration.respondsTo(change.type)) {\n        events.push(registration.createEvent(materializedChange, eventGenerator.query_));\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n\n  var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newViewCache(eventCache, serverCache) {\n  return {\n    eventCache: eventCache,\n    serverCache: serverCache\n  };\n}\n\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\n  return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\n}\n\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\n  return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\n}\n\nfunction viewCacheGetCompleteEventSnap(viewCache) {\n  return viewCache.eventCache.isFullyInitialized() ? viewCache.eventCache.getNode() : null;\n}\n\nfunction viewCacheGetCompleteServerSnap(viewCache) {\n  return viewCache.serverCache.isFullyInitialized() ? viewCache.serverCache.getNode() : null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\n\nvar EmptyChildren = function () {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = new ImmutableTree(null);\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param relativePath - The remainder of the path\r\n   * @param predicate - The predicate to satisfy to return a node\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: newEmptyPath(),\n        value: this.value\n      };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        var front = pathGetFront(relativePath);\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @returns The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      var front = pathGetFront(relativePath);\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param relativePath - Path to set value at.\r\n   * @param toSet - Value to set.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.set(pathPopFront(relativePath), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param relativePath - Path to value to remove.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(pathPopFront(relativePath));\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param relativePath - Path to get value for.\r\n   * @returns Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param relativePath - Path to replace subtree for.\r\n   * @param newTree - New tree.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.setTree(pathPopFront(relativePath), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(newEmptyPath(), fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        var front = pathGetFront(pathToFollow);\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathGetFront(pathToFollow);\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param f - A function to be called with the path from the root of the tree to\r\n   * a node, and the value at that node. Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  };\n\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n\n  CompoundWrite.empty = function () {\n    return new CompoundWrite(new ImmutableTree(null));\n  };\n\n  return CompoundWrite;\n}();\n\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      var rootMostPath = rootmost.path;\n      var value = rootmost.value;\n      var relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\n    } else {\n      var subtree = new ImmutableTree(node);\n      var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\n  var newWrite = compoundWrite;\n  each(updates, function (childKey, node) {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\n\n\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\n    return new CompoundWrite(newWriteTree);\n  }\n}\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\n\n\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\n\n\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\n  var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n  if (rootmost != null) {\n    return compoundWrite.writeTree_.get(rootmost.path).getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\n\n\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\n  var children = [];\n  var node = compoundWrite.writeTree_.value;\n\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        children.push(new NamedNode(childName, childNode));\n      });\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value != null) {\n        children.push(new NamedNode(childName, childTree.value));\n      }\n    });\n  }\n\n  return children;\n}\n\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\n\n\nfunction compoundWriteIsEmpty(compoundWrite) {\n  return compoundWrite.writeTree_.isEmpty();\n}\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\n\n\nfunction compoundWriteApply(compoundWrite, node) {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\n      }\n    }); // If there was a priority write, we only apply it if the node is not empty\n\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\n    }\n\n    return node;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\n\n\nfunction writeTreeChildWrites(writeTree, path) {\n  return newWriteTreeRef(path, writeTree);\n}\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\n\n\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\n  assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\n\n  if (visible === undefined) {\n    visible = true;\n  }\n\n  writeTree.allWrites.push({\n    path: path,\n    snap: snap,\n    writeId: writeId,\n    visible: visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\n  }\n\n  writeTree.lastWriteId = writeId;\n}\n/**\r\n * Record a new merge from user code.\r\n */\n\n\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\n  assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\n  writeTree.allWrites.push({\n    path: path,\n    children: changedChildren,\n    writeId: writeId,\n    visible: true\n  });\n  writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\n  writeTree.lastWriteId = writeId;\n}\n\nfunction writeTreeGetWrite(writeTree, writeId) {\n  for (var i = 0; i < writeTree.allWrites.length; i++) {\n    var record = writeTree.allWrites[i];\n\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n\n  return null;\n}\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\n\n\nfunction writeTreeRemoveWrite(writeTree, writeId) {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n  var idx = writeTree.allWrites.findIndex(function (s) {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  var writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n  var removedWriteWasVisible = writeToRemove.visible;\n  var removedWriteOverlapsWithOtherWrites = false;\n  var i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    var currentWrite = writeTree.allWrites[i];\n\n    if (currentWrite.visible) {\n      if (i >= idx && writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\n    } else {\n      var children = writeToRemove.children;\n      each(children, function (childName) {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\n      });\n    }\n\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (var childName in writeRecord.children) {\n      if (writeRecord.children.hasOwnProperty(childName) && pathContains(pathChild(writeRecord.path, childName), path)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\n\n\nfunction writeTreeResetTree_(writeTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\n\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId = writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\n\n\nfunction writeTreeDefaultFilter_(write) {\n  return write.visible;\n}\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\n\n\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\n  var compoundWrite = CompoundWrite.empty();\n\n  for (var i = 0; i < writes.length; ++i) {\n    var write = writes[i]; // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n    if (filter(write)) {\n      var writePath = write.path;\n      var relativePath = void 0;\n\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\n        } else ;\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\n          } else {\n            var child = safeGet(write.children, pathGetFront(relativePath));\n\n            if (child) {\n              // There exists a child in this node that matches the root path\n              var deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\n            }\n          }\n        } else ;\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n\n  return compoundWrite;\n}\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\n\n\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (completeServerCache == null && !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (!includeHiddenWrites && completeServerCache == null && !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\n        return null;\n      } else {\n        var filter = function (write) {\n          return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (pathContains(write.path, treePath) || pathContains(treePath, write.path));\n        };\n\n        var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\n        var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\n\n\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\n  var completeChildren = ChildrenNode.EMPTY_NODE;\n  var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\n\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n        completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n      });\n    }\n\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\n      completeChildren = completeChildren.updateImmediateChild(childName, node);\n    }); // Add any complete children we have from the set\n\n    compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\n      completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\n      completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n    });\n    return completeChildren;\n  }\n}\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\n\n\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\n  assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n  var path = pathChild(treePath, childPath);\n\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\n\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\n    }\n  }\n}\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\n\n\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\n  var path = pathChild(treePath, childKey);\n  var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\n      return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\n    } else {\n      return null;\n    }\n  }\n}\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\n\n\nfunction writeTreeShadowingWrite(writeTree, path) {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\n\n\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\n  var toIterate;\n  var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n  var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n\n  toIterate = toIterate.withIndex(index);\n\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    var nodes = [];\n    var cmp = index.getCompare();\n    var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n    var next = iter.getNext();\n\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n\n      next = iter.getNext();\n    }\n\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nfunction newWriteTree() {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\n\n\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n  return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n}\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\n\n\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\n  return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\n}\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\n\n\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\n  return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\n}\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\n\n\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\n  return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\n}\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\n\n\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\n  return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\n}\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\n\n\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\n  return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\n}\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\n\n\nfunction writeTreeRefChild(writeTreeRef, childName) {\n  return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\n}\n\nfunction newWriteTreeRef(path, writeTree) {\n  return {\n    treePath: path,\n    writeTree: writeTree\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    assert(type === \"child_added\"\n    /* CHILD_ADDED */\n    || type === \"child_changed\"\n    /* CHILD_CHANGED */\n    || type === \"child_removed\"\n    /* CHILD_REMOVED */\n    , 'Only child changes supported for tracking');\n    assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type === \"child_added\"\n      /* CHILD_ADDED */\n      && oldType === \"child_removed\"\n      /* CHILD_REMOVED */\n      ) {\n        this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\n      } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n        this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\n      } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n        this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\n      } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n        this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\n      } else {\n        throw assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.eventCache;\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  };\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : viewCacheGetCompleteServerSnap(this.viewCache_);\n    var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newViewProcessor(filter) {\n  return {\n    filter: filter\n  };\n}\n\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\n  assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\n  assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\n}\n\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\n  var accumulator = new ChildChangeAccumulator();\n  var newViewCache, filterServerNode;\n\n  if (operation.type === OperationType.OVERWRITE) {\n    var overwrite = operation;\n\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n\n      filterServerNode = overwrite.source.tagged || oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path);\n      newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    var merge = operation;\n\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n      filterServerNode = merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    var ackUserWrite = operation;\n\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n\n  var changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return {\n    viewCache: newViewCache,\n    changes: changes\n  };\n}\n\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\n  var eventSnap = newViewCache.eventCache;\n\n  if (eventSnap.isFullyInitialized()) {\n    var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n\n    if (accumulator.length > 0 || !oldViewCache.eventCache.isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n      accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\n  var oldEventSnap = viewCache.eventCache;\n\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    var newEventCache = void 0,\n        serverNode = void 0;\n\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        var serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n        var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\n        newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\n      } else {\n        var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n        newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\n      }\n    } else {\n      var childKey = pathGetFront(changePath);\n\n      if (childKey === '.priority') {\n        assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\n        var oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode(); // we might have overwrites for this priority\n\n        var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\n\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        var childChangePath = pathPopFront(changePath); // update child\n\n        var newEventChild = void 0;\n\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\n\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\n        }\n\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n\n    return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n  var oldServerSnap = oldViewCache.serverCache;\n  var newServerCache;\n  var serverFilter = filterServerNode ? viewProcessor.filter : viewProcessor.filter.getIndexedFilter();\n\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n  } else {\n    var childKey = pathGetFront(changePath);\n\n    if (!oldServerSnap.isCompleteForPath(changePath) && pathGetLength(changePath) > 1) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n\n    var childChangePath = pathPopFront(changePath);\n    var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n    } else {\n      newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n    }\n  }\n\n  var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\n  var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n  return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\n}\n\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n  var oldEventSnap = oldViewCache.eventCache;\n  var newViewCache, newEventCache;\n  var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\n    newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\n  } else {\n    var childKey = pathGetFront(changePath);\n\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\n      newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n    } else {\n      var childChangePath = pathPopFront(changePath);\n      var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      var newChild = void 0;\n\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        var childNode = source.getCompleteChild(childKey);\n\n        if (childNode != null) {\n          if (pathGetBack(childChangePath) === '.priority' && childNode.getChild(pathParent(childChangePath)).isEmpty()) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n\n      if (!oldChild.equals(newChild)) {\n        var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  var curViewCache = viewCache;\n  changedChildren.foreach(function (relativePath, childNode) {\n    var writePath = pathChild(path, relativePath);\n\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n    }\n  });\n  changedChildren.foreach(function (relativePath, childNode) {\n    var writePath = pathChild(path, relativePath);\n\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n    }\n  });\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\n  merge.foreach(function (relativePath, childNode) {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (viewCache.serverCache.getNode().isEmpty() && !viewCache.serverCache.isFullyInitialized()) {\n    return viewCache;\n  } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n\n\n  var curViewCache = viewCache;\n  var viewMergeTree;\n\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\n  }\n\n  var serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n    if (serverNode.hasChild(childKey)) {\n      var serverChild = viewCache.serverCache.getNode().getImmediateChild(childKey);\n      var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\n      curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n    }\n  });\n  viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n    var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) && childMergeTree.value === undefined;\n\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      var serverChild = viewCache.serverCache.getNode().getImmediateChild(childKey);\n      var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\n      curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n    }\n  });\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  } // Only filter server node if it is currently filtered\n\n\n  var filterServerNode = viewCache.serverCache.isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n\n  var serverCache = viewCache.serverCache;\n\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (pathIsEmpty(ackPath) && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n      return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      var changedChildren_1 = new ImmutableTree(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n        changedChildren_1 = changedChildren_1.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    var changedChildren_2 = new ImmutableTree(null);\n    affectedTree.foreach(function (mergePath, value) {\n      var serverCachePath = pathChild(ackPath, mergePath);\n\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n      }\n    });\n    return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n  }\n}\n\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\n  var oldServerNode = viewCache.serverCache;\n  var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\n  return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n}\n\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\n  var complete;\n\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n    var oldEventCache = viewCache.eventCache.getNode();\n    var newEventCache = void 0;\n\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      var newNode = void 0;\n\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n      } else {\n        var serverChildren = viewCache.serverCache.getNode();\n        assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n        newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\n      }\n\n      newNode = newNode;\n      newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\n    } else {\n      var childKey = pathGetFront(path);\n      var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\n\n      if (newChild == null && viewCache.serverCache.isCompleteForChild(childKey)) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\n      } else {\n        newEventCache = oldEventCache;\n      }\n\n      if (newEventCache.isEmpty() && viewCache.serverCache.isFullyInitialized()) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\n        }\n      }\n    }\n\n    complete = viewCache.serverCache.isFullyInitialized() || writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_._queryParams;\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = queryParamsGetNodeFilter(params);\n    this.processor_ = newViewProcessor(filter);\n    var initialServerCache = initialViewCache.serverCache;\n    var initialEventCache = initialViewCache.eventCache; // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  Object.defineProperty(View.prototype, \"query\", {\n    get: function () {\n      return this.query_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return View;\n}();\n\nfunction viewGetServerCache(view) {\n  return view.viewCache_.serverCache.getNode();\n}\n\nfunction viewGetCompleteNode(view) {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nfunction viewGetCompleteServerCache(view, path) {\n  var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (view.query._queryParams.loadsAllData() || !pathIsEmpty(path) && !cache.getImmediateChild(pathGetFront(path)).isEmpty()) {\n      return cache.getChild(path);\n    }\n  }\n\n  return null;\n}\n\nfunction viewIsEmpty(view) {\n  return view.eventRegistrations_.length === 0;\n}\n\nfunction viewAddEventRegistration(view, eventRegistration) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\n\n\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\n  var cancelEvents = [];\n\n  if (cancelError) {\n    assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n    var path_1 = view.query._path;\n    view.eventRegistrations_.forEach(function (registration) {\n      var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    var remaining = [];\n\n    for (var i = 0; i < view.eventRegistrations_.length; ++i) {\n      var existing = view.eventRegistrations_[i];\n\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n\n  return cancelEvents;\n}\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\n\n\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\n  if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n    assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\n    assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\n  }\n\n  var oldViewCache = view.viewCache_;\n  var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n  assert(result.viewCache.serverCache.isFullyInitialized() || !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n  view.viewCache_ = result.viewCache;\n  return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\n}\n\nfunction viewGetInitialEvents(view, registration) {\n  var eventSnap = view.viewCache_.eventCache;\n  var initialChanges = [];\n\n  if (!eventSnap.getNode().isLeafNode()) {\n    var eventNode = eventSnap.getNode();\n    eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n\n  return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\n}\n\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\n  var registrations = eventRegistration ? [eventRegistration] : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar referenceConstructor$1;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n\n  return SyncPoint;\n}();\n\nfunction syncPointSetReferenceConstructor(val) {\n  assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\n  referenceConstructor$1 = val;\n}\n\nfunction syncPointGetReferenceConstructor() {\n  assert(referenceConstructor$1, 'Reference.ts has not been loaded');\n  return referenceConstructor$1;\n}\n\nfunction syncPointIsEmpty(syncPoint) {\n  return syncPoint.views.size === 0;\n}\n\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\n  var e_1, _a;\n\n  var queryId = operation.source.queryId;\n\n  if (queryId !== null) {\n    var view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\n  } else {\n    var events = [];\n\n    try {\n      for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return events;\n  }\n}\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\n  var queryId = query._queryIdentifier;\n  var view = syncPoint.views.get(queryId);\n\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\n    var eventCacheComplete = false;\n\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n\n    var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\n    return new View(query, viewCache);\n  }\n\n  return view;\n}\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n  var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\n\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  } // This is guaranteed to exist now, we just created anything that was missing\n\n\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\n\n\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\n  var e_2, _a;\n\n  var queryId = query._queryIdentifier;\n  var removed = [];\n  var cancelEvents = [];\n  var hadCompleteView = syncPointHasCompleteView(syncPoint);\n\n  if (queryId === 'default') {\n    try {\n      // When you do ref.off(...), we search all views for the registration to remove.\n      for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n            viewQueryId = _d[0],\n            view = _d[1];\n\n        cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\n\n        if (viewIsEmpty(view)) {\n          syncPoint.views.delete(viewQueryId); // We'll deal with complete views later.\n\n          if (!view.query._queryParams.loadsAllData()) {\n            removed.push(view.query);\n          }\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    var view = syncPoint.views.get(queryId);\n\n    if (view) {\n      cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\n\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId); // We'll deal with complete views later.\n\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\n  }\n\n  return {\n    removed: removed,\n    events: cancelEvents\n  };\n}\n\nfunction syncPointGetQueryViews(syncPoint) {\n  var e_3, _a;\n\n  var result = [];\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n\n      if (!view.query._queryParams.loadsAllData()) {\n        result.push(view);\n      }\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n\n  return result;\n}\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\n\n\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\n  var e_4, _a;\n\n  var serverCache = null;\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n      serverCache = serverCache || viewGetCompleteServerCache(view, path);\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n\n  return serverCache;\n}\n\nfunction syncPointViewForQuery(syncPoint, query) {\n  var params = query._queryParams;\n\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    var queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nfunction syncPointViewExistsForQuery(syncPoint, query) {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nfunction syncPointHasCompleteView(syncPoint) {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nfunction syncPointGetCompleteView(syncPoint) {\n  var e_5, _a;\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n\n      if (view.query._queryParams.loadsAllData()) {\n        return view;\n      }\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar referenceConstructor;\n\nfunction syncTreeSetReferenceConstructor(val) {\n  assert(!referenceConstructor, '__referenceConstructor has already been defined');\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor() {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n/**\r\n * Static tracker for next query tag.\r\n */\n\n\nvar syncTreeNextQueryTag_ = 1;\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n\n    this.syncPointTree_ = new ImmutableTree(null);\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n\n    this.pendingWriteTree_ = newWriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n\n  return SyncTree;\n}();\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\n  // Record pending write.\n  writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\n  }\n}\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n  var changeTree = ImmutableTree.fromObject(changedChildren);\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\n}\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\n  if (revert === void 0) {\n    revert = false;\n  }\n\n  var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\n\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    var affectedTree_1 = new ImmutableTree(null);\n\n    if (write.snap != null) {\n      // overwrite\n      affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\n    } else {\n      each(write.children, function (pathString) {\n        affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\n      });\n    }\n\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\n  }\n}\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\n}\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\n  var changeTree = ImmutableTree.fromObject(changedChildren);\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\n}\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyListenComplete(syncTree, path) {\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\n}\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\n\n\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  var path = query._path;\n  var maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n\n  if (maybeSyncPoint && (query._queryIdentifier === 'default' || syncPointViewExistsForQuery(maybeSyncPoint, query))) {\n    var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\n\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    var removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n    // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n    // properly set up.\n    //\n    // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n    // queryId === 'default'\n\n    var removingDefault = -1 !== removed.findIndex(function (query) {\n      return query._queryParams.loadsAllData();\n    });\n    var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n      return syncPointHasCompleteView(parentSyncPoint);\n    });\n\n    if (removingDefault && !covered) {\n      var subtree = syncTree.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n      // removal\n\n      if (!subtree.isEmpty()) {\n        // We need to fold over our subtree and collect the listeners to send\n        var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n        for (var i = 0; i < newViews.length; ++i) {\n          var view = newViews[i],\n              newQuery = view.query;\n          var listener = syncTreeCreateListenerForView_(syncTree, view);\n          syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\n        }\n      }\n    } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n    // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n    // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n    if (!covered && removed.length > 0 && !cancelError) {\n      // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n      // default. Otherwise, we need to iterate through and cancel each individual query\n      if (removingDefault) {\n        // We don't tag default listeners\n        var defaultTag = null;\n        syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\n      } else {\n        removed.forEach(function (queryToRemove) {\n          var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\n          syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\n        });\n      }\n    } // Now, clear all of the tags we're tracking for the removed listens\n\n\n    syncTreeRemoveTags_(syncTree, removed);\n  }\n\n  return cancelEvents;\n}\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey != null) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\n  var path = query._path;\n  var serverCache = null;\n  var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n  syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n    var relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache = serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView = foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  var syncPoint = syncTree.syncPointTree_.get(path);\n\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView = foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache = serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var serverCacheComplete;\n\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    var subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild(function (childName, childSyncPoint) {\n      var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\n\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(childName, completeCache);\n      }\n    });\n  }\n\n  var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    var queryKey = syncTreeMakeQueryKey_(query);\n    assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n    var tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n  if (!viewAlreadyExists && !foundAncestorDefaultView) {\n    var view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n\n  return events;\n}\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\n\n\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\n  var includeHiddenSets = true;\n  var writeTree = syncTree.pendingWriteTree_;\n  var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n    var relativePath = newRelativePath(pathSoFar, path);\n    var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\n\n    if (serverCache) {\n      return serverCache;\n    }\n  });\n  return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\n}\n\nfunction syncTreeGetServerValue(syncTree, query) {\n  var path = query._path;\n  var serverCache = null; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n  syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n    var relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache = serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  var syncPoint = syncTree.syncPointTree_.get(path);\n\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache = serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var serverCacheComplete = serverCache != null;\n  var serverCacheNode = serverCacheComplete ? new CacheNode(serverCache, true, false) : null;\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\n  var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\n  return viewGetCompleteNode(view);\n}\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\n\n\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\n  return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_,\n  /*serverCache=*/\n  null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\n}\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\n\n\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n  } else {\n    var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    var events = [];\n    var childName = pathGetFront(operation.path);\n    var childOperation = operation.operationForChild(childName);\n    var childTree = syncPointTree.children.get(childName);\n\n    if (childTree && childOperation) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n    }\n\n    if (syncPoint) {\n      events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\n    }\n\n    return events;\n  }\n}\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\n\n\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\n  var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var events = [];\n  syncPointTree.children.inorderTraversal(function (childName, childTree) {\n    var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n    var childWritesCache = writeTreeRefChild(writesCache, childName);\n    var childOperation = operation.operationForChild(childName);\n\n    if (childOperation) {\n      events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(syncTree, view) {\n  var query = view.query;\n  var tag = syncTreeTagForQuery_(syncTree, query);\n  return {\n    hashFn: function () {\n      var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: function (status) {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        var error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(syncTree, query,\n        /*eventRegistration*/\n        null, error);\n      }\n    }\n  };\n}\n/**\r\n * Return the tag associated with the given query.\r\n */\n\n\nfunction syncTreeTagForQuery_(syncTree, query) {\n  var queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\n\n\nfunction syncTreeMakeQueryKey_(query) {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\n\n\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\n  return syncTree.tagToQueryMap.get(tag);\n}\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\n\n\nfunction syncTreeParseQueryKey_(queryKey) {\n  var splitIndex = queryKey.indexOf('$');\n  assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n/**\r\n * A helper method to apply tagged operations\r\n */\n\n\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\n  var syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\n\n\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\n  return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      var views_1 = [];\n\n      if (maybeChildSyncPoint) {\n        views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n\n      each(childMap, function (_key, childViews) {\n        views_1 = views_1.concat(childViews);\n      });\n      return views_1;\n    }\n  });\n}\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\n\n\nfunction syncTreeQueryForListening_(query) {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree, queries) {\n  for (var j = 0; j < queries.length; ++j) {\n    var removedQuery = queries[j];\n\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n/**\r\n * Static accessor for query tags.\r\n */\n\n\nfunction syncTreeGetNextQueryTag_() {\n  return syncTreeNextQueryTag_++;\n}\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\n\n\nfunction syncTreeSetupListener_(syncTree, query, view) {\n  var path = query._path;\n  var tag = syncTreeTagForQuery_(syncTree, query);\n  var listener = syncTreeCreateListenerForView_(syncTree, view);\n  var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\n  var subtree = syncTree.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n\n  if (tag) {\n    assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (!pathIsEmpty(relativePath) && maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n        return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n      } else {\n        // No default listener here, flatten any deeper queries into an array\n        var queries_1 = [];\n\n        if (maybeChildSyncPoint) {\n          queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) {\n            return view.query;\n          }));\n        }\n\n        each(childMap, function (_key, childQueries) {\n          queries_1 = queries_1.concat(childQueries);\n        });\n        return queries_1;\n      }\n    });\n\n    for (var i = 0; i < queriesToStop.length; ++i) {\n      var queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\n    }\n  }\n\n  return events;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ExistingValueProvider =\n/** @class */\nfunction () {\n  function ExistingValueProvider(node_) {\n    this.node_ = node_;\n  }\n\n  ExistingValueProvider.prototype.getImmediateChild = function (childName) {\n    var child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  };\n\n  ExistingValueProvider.prototype.node = function () {\n    return this.node_;\n  };\n\n  return ExistingValueProvider;\n}();\n\nvar DeferredValueProvider =\n/** @class */\nfunction () {\n  function DeferredValueProvider(syncTree, path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  DeferredValueProvider.prototype.getImmediateChild = function (childName) {\n    var childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  };\n\n  DeferredValueProvider.prototype.node = function () {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  };\n\n  return DeferredValueProvider;\n}();\n/**\r\n * Generate placeholders for deferred values.\r\n */\n\n\nvar generateWithValues = function (values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\n\n\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nvar resolveComplexDeferredValue = function (op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n\n  var delta = op['increment'];\n\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  var existingNode = existing.node();\n  assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls'); // Incrementing a non-number sets the value to the incremented amount\n\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  var leaf = existingNode;\n  var existingVal = leaf.getValue();\n\n  if (typeof existingVal !== 'number') {\n    return delta;\n  } // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n\n\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\n\n\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\n  return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\n\n\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\n  return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\n};\n\nfunction resolveDeferredValue(node, existingVal, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @param name - Optional name of the node.\r\n   * @param parent - Optional parent node.\r\n   * @param node - Optional node to wrap.\r\n   */\n  function Tree(name, parent, node) {\n    if (name === void 0) {\n      name = '';\n    }\n\n    if (parent === void 0) {\n      parent = null;\n    }\n\n    if (node === void 0) {\n      node = {\n        children: {},\n        childCount: 0\n      };\n    }\n\n    this.name = name;\n    this.parent = parent;\n    this.node = node;\n  }\n\n  return Tree;\n}();\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\n\n\nfunction treeSubTree(tree, pathObj) {\n  // TODO: Require pathObj to be Path?\n  var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  var child = tree,\n      next = pathGetFront(path);\n\n  while (next !== null) {\n    var childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\n\n\nfunction treeGetValue(tree) {\n  return tree.node.value;\n}\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\n\n\nfunction treeSetValue(tree, value) {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n/**\r\n * @returns Whether the tree has any children.\r\n */\n\n\nfunction treeHasChildren(tree) {\n  return tree.node.childCount > 0;\n}\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\n\n\nfunction treeIsEmpty(tree) {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\n\n\nfunction treeForEachChild(tree, action) {\n  each(tree.node.children, function (child, childTree) {\n    action(new Tree(child, tree, childTree));\n  });\n}\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\n\n\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, function (child) {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\n\n\nfunction treeForEachAncestor(tree, action, includeSelf) {\n  var node = includeSelf ? tree : tree.parent;\n\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n\n    node = node.parent;\n  }\n\n  return false;\n}\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\n\n\nfunction treeGetPath(tree) {\n  return new Path(tree.parent === null ? tree.name : treeGetPath(tree.parent) + '/' + tree.name);\n}\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\n\n\nfunction treeUpdateParents(tree) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\n\n\nfunction treeUpdateChild(tree, childName, child) {\n  var childEmpty = treeIsEmpty(child);\n  var childExists = contains(tree.node.children, childName);\n\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nvar isValidKey = function (key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n\nvar isValidPathString = function (pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n\nvar isValidRootPathString = function (pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nvar isValidPriority = function (priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\n\n\nvar validateFirebaseDataArg = function (fnName, value, path, optional) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\n\n\nvar validateFirebaseData = function (errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + validationPathToErrorString(path) + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + validationPathToErrorString(path));\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + validationPathToErrorString(path) + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + validationPathToErrorString(path) + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + validationPathToErrorString(path) + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\n\n\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = pathSlice(curPath);\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(pathCompare);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\n\n\nvar validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  var errorPrefix$1 = errorPrefix(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\n\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix$1 + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix$1, mergePaths);\n};\n\nvar validatePriority = function (fnName, priority, optional) {\n  if (optional && priority === undefined) {\n    return;\n  }\n\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(errorPrefix(fnName, 'priority') + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n  } // Special case to allow importing data with a .sv.\n\n\n  if (!isValidPriority(priority)) {\n    throw new Error(errorPrefix(fnName, 'priority') + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n  }\n};\n\nvar validateEventType = function (fnName, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(errorPrefix(fnName, 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function (fnName, argumentName, key, optional) {\n  if (optional && key === undefined) {\n    return;\n  }\n\n  if (!isValidKey(key)) {\n    throw new Error(errorPrefix(fnName, argumentName) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n  }\n};\n\nvar validatePathString = function (fnName, argumentName, pathString, optional) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentName) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n  }\n};\n\nvar validateRootPathString = function (fnName, argumentName, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\nvar validateWritablePath = function (fnName, path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function (fnName, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, 'url') + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function (fnName, argumentName, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n\n  if (typeof bool !== 'boolean') {\n    throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n\n  return EventQueue;\n}();\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\n\n\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  var currList = null;\n\n  for (var i = 0; i < eventDataList.length; i++) {\n    var data = eventDataList[i];\n    var path = data.getPath();\n\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = {\n        events: [],\n        path: path\n      };\n    }\n\n    currList.events.push(data);\n  }\n\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\n\n\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathEquals(eventPath, path);\n  });\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\n\n\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathContains(eventPath, changedPath) || pathContains(changedPath, eventPath);\n  });\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\n  eventQueue.recursionDepth_++;\n  var sentAll = true;\n\n  for (var i = 0; i < eventQueue.eventLists_.length; i++) {\n    var eventList = eventQueue.eventLists_[i];\n\n    if (eventList) {\n      var eventPath = eventList.path;\n\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n/**\r\n * Iterates through the list and raises each event\r\n */\n\n\nfunction eventListRaise(eventList) {\n  for (var i = 0; i < eventList.events.length; i++) {\n    var eventData = eventList.events[i];\n\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      var eventFn = eventData.getEventRunner();\n\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n\n      exceptionGuard(eventFn);\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\n\nvar MAX_TRANSACTION_RETRIES = 25;\n/**\r\n * A connection to a single data repository.\r\n */\n\nvar Repo =\n/** @class */\nfunction () {\n  function Repo(repoInfo_, forceRestClient_, authTokenProvider_, appCheckProvider_) {\n    this.repoInfo_ = repoInfo_;\n    this.forceRestClient_ = forceRestClient_;\n    this.authTokenProvider_ = authTokenProvider_;\n    this.appCheckProvider_ = appCheckProvider_;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n\n    this.onDisconnect_ = newSparseSnapshotTree();\n    /** Stores queues of outstanding transactions for Firebase locations. */\n\n    this.transactionQueueTree_ = new Tree(); // TODO: This should be @private but it's used by test_access.js and internal.js\n\n    this.persistentConnection_ = null; // This key is intentionally not updated if RepoInfo is later changed or replaced\n\n    this.key = this.repoInfo_.toURLString();\n  }\n  /**\r\n   * @returns The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n\n  return Repo;\n}();\n\nfunction repoStart(repo, appId, authOverride) {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\n      repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n    }, repo.authTokenProvider_, repo.appCheckProvider_); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n    setTimeout(function () {\n      return repoOnConnectStatus(repo,\n      /* connectStatus= */\n      true);\n    }, 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n      }\n\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, function (pathString, data, isMerge, tag) {\n      repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n    }, function (connectStatus) {\n      repoOnConnectStatus(repo, connectStatus);\n    }, function (updates) {\n      repoOnServerInfoUpdate(repo, updates);\n    }, repo.authTokenProvider_, repo.appCheckProvider_, authOverride);\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(function (token) {\n    repo.server_.refreshAuthToken(token);\n  });\n  repo.appCheckProvider_.addTokenChangeListener(function (result) {\n    repo.server_.refreshAppCheckToken(result.token);\n  }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () {\n    return new StatsReporter(repo.stats_, repo.server_);\n  }); // Used for .info.\n\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: function (query, tag, currentHashFn, onComplete) {\n      var infoEvents = [];\n      var node = repo.infoData_.getNode(query._path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\n        setTimeout(function () {\n          onComplete('ok');\n        }, 0);\n      }\n\n      return infoEvents;\n    },\n    stopListening: function () {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: function (query, tag, currentHashFn, onComplete) {\n      repo.server_.listen(query, currentHashFn, tag, function (status, data) {\n        var events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\n      }); // No synchronous events for network-backed sync trees\n\n      return [];\n    },\n    stopListening: function (query, tag) {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\n\n\nfunction repoServerTime(repo) {\n  var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  var offset = offsetNode.val() || 0;\n  return new Date().getTime() + offset;\n}\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\n\n\nfunction repoGenerateServerValues(repo) {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\n\n\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\n  // For testing.\n  repo.dataUpdateCount++;\n  var path = new Path(pathString);\n  data = repo.interceptServerDataCallback_ ? repo.interceptServerDataCallback_(pathString, data) : data;\n  var events = [];\n\n  if (tag) {\n    if (isMerge) {\n      var taggedChildren = map(data, function (raw) {\n        return nodeFromJSON(raw);\n      });\n      events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\n    } else {\n      var taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\n    }\n  } else if (isMerge) {\n    var changedChildren = map(data, function (raw) {\n      return nodeFromJSON(raw);\n    });\n    events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\n  } else {\n    var snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n\n  var affectedPath = path;\n\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n} // TODO: This should be @private but it's used by test_access.js and internal.js\n\n\nfunction repoInterceptServerData(repo, callback) {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo, connectStatus) {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo, updates) {\n  each(updates, function (key, value) {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo, pathString, value) {\n  var path = new Path('/.info/' + pathString);\n  var newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo) {\n  return repo.nextWriteId_++;\n}\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\n\n\nfunction repoGetValue(repo, query) {\n  // Only active queries are cached. There is no persisted cache.\n  var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n\n  return repo.server_.get(query).then(function (payload) {\n    var node = nodeFromJSON(payload).withIndex(query._queryParams.getIndex());\n    var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n    return Promise.resolve(node);\n  }, function (err) {\n    repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n    return Promise.reject(new Error(err));\n  });\n}\n\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n\n  var serverValues = repoGenerateServerValues(repo);\n  var newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n  var writeId = repoGetNextWriteId(repo);\n  var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(path.toString(), newNodeUnresolved.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    var success = status === 'ok';\n\n    if (!success) {\n      warn('set at ' + path + ' failed: ' + status);\n    }\n\n    var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n  var affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath); // We queued the events above, so just flush the queue here\n\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\n  repoLog(repo, 'update', {\n    path: path.toString(),\n    value: childrenToMerge\n  }); // Start with our existing data and merge each child into it.\n\n  var empty = true;\n  var serverValues = repoGenerateServerValues(repo);\n  var changedChildren = {};\n  each(childrenToMerge, function (changedKey, changedValue) {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON(changedValue), repo.serverSyncTree_, serverValues);\n  });\n\n  if (!empty) {\n    var writeId_1 = repoGetNextWriteId(repo);\n    var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('update at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\n      var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    });\n    each(childrenToMerge, function (changedPath) {\n      var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\n      repoRerunTransactions(repo, affectedPath);\n    }); // We queued the events above, so just flush the queue here\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\n\n\nfunction repoRunOnDisconnectEvents(repo) {\n  repoLog(repo, 'onDisconnectEvents');\n  var serverValues = repoGenerateServerValues(repo);\n  var resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\n    var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\n    sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n  });\n  var events = [];\n  sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\n    events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\n    var affectedPath = repoAbortTransactions(repo, path);\n    repoRerunTransactions(repo, affectedPath);\n  });\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\n  repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\n  var newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(path.toString(), newNode.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\n  var newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(path.toString(), newNode.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n    if (status === 'ok') {\n      each(childrenToMerge, function (childName, childNode) {\n        var newChildNode = nodeFromJSON(childNode);\n        sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\n      });\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\n  var events;\n\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\n  } else {\n    events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\n  }\n\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  var events;\n\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\n  } else {\n    events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\n  }\n\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nfunction repoInterrupt(repo) {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nfunction repoResume(repo) {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nfunction repoStats(repo, showDelta) {\n  if (showDelta === void 0) {\n    showDelta = false;\n  }\n\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  var stats;\n\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n    return Math.max(currentValue.length, previousValue);\n  }, 0);\n  each(stats, function (stat, value) {\n    var paddedStat = stat; // pad stat names to be the same length (plus 2 extra spaces).\n\n    for (var i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n\n    console.log(paddedStat + value);\n  });\n}\n\nfunction repoStatsIncrementCounter(repo, metric) {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo) {\n  var varArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    varArgs[_i - 1] = arguments[_i];\n  }\n\n  var prefix = '';\n\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n\n  log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\n}\n\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\n  if (callback) {\n    exceptionGuard(function () {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        var code = (status || 'error').toUpperCase();\n        var message = code;\n\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        var error = new Error(message); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        error.code = code;\n        callback(error);\n      }\n    });\n  }\n}\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\n\n\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\n  repoLog(repo, 'transaction on ' + path); // Initialize transaction.\n\n  var transaction = {\n    path: path,\n    update: transactionUpdate,\n    onComplete: onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally: applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher: unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  }; // Run transaction initially.\n\n  var currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  var newVal = transaction.update(currentState.val());\n\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n    transaction.status = 0\n    /* RUN */\n    ;\n    var queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    var nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n    treeSetValue(queueNode, nodeQueue); // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n\n    var priorityForNode = void 0;\n\n    if (typeof newVal === 'object' && newVal !== null && contains(newVal, '.priority')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal, '.priority');\n      assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n    } else {\n      var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) || ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    var serverValues = repoGenerateServerValues(repo);\n    var newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\n\n\nfunction repoGetLatestState(repo, path, excludeSets) {\n  return syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) || ChildrenNode.EMPTY_NODE;\n}\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\n\n\nfunction repoSendReadyTransactions(repo, node) {\n  if (node === void 0) {\n    node = repo.transactionQueueTree_;\n  } // Before recursing, make sure any completed transactions are removed.\n\n\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    var queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n    var allRun = queue.every(function (transaction) {\n      return transaction.status === 0\n      /* RUN */\n      ;\n    }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, function (childNode) {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\n\n\nfunction repoSendTransactionQueue(repo, path, queue) {\n  // Mark transactions as sent and increment retry count!\n  var setsToIgnore = queue.map(function (txn) {\n    return txn.currentWriteId;\n  });\n  var latestState = repoGetLatestState(repo, path, setsToIgnore);\n  var snapToSend = latestState;\n  var latestHash = latestState.hash();\n\n  for (var i = 0; i < queue.length; i++) {\n    var txn = queue[i];\n    assert(txn.status === 0\n    /* RUN */\n    , 'tryToSendTransactionQueue_: items in queue should all be run.');\n    txn.status = 1\n    /* SENT */\n    ;\n    txn.retryCount++;\n    var relativePath = newRelativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n    snapToSend = snapToSend.updateChild(relativePath\n    /** @type {!Node} */\n    , txn.currentOutputSnapshotRaw);\n  }\n\n  var dataToSend = snapToSend.val(true);\n  var pathToSend = path; // Send the put.\n\n  repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\n    repoLog(repo, 'transaction put response', {\n      path: pathToSend.toString(),\n      status: status\n    });\n    var events = [];\n\n    if (status === 'ok') {\n      // Queue up the callbacks and fire them after cleaning up all of our\n      // transaction state, since the callback could trigger more\n      // transactions or sets.\n      var callbacks = [];\n\n      var _loop_1 = function (i) {\n        queue[i].status = 2\n        /* COMPLETED */\n        ;\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\n\n        if (queue[i].onComplete) {\n          // We never unset the output snapshot, and given that this\n          // transaction is complete, it should be set\n          callbacks.push(function () {\n            return queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved);\n          });\n        }\n\n        queue[i].unwatcher();\n      };\n\n      for (var i = 0; i < queue.length; i++) {\n        _loop_1(i);\n      } // Now remove the completed transactions.\n\n\n      repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path)); // There may be pending transactions that we can now send.\n\n      repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events); // Finally, trigger onComplete callbacks.\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    } else {\n      // transactions are no longer sent.  Update their status appropriately.\n      if (status === 'datastale') {\n        for (var i = 0; i < queue.length; i++) {\n          if (queue[i].status === 3\n          /* SENT_NEEDS_ABORT */\n          ) {\n            queue[i].status = 4\n            /* NEEDS_ABORT */\n            ;\n          } else {\n            queue[i].status = 0\n            /* RUN */\n            ;\n          }\n        }\n      } else {\n        warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = 4\n          /* NEEDS_ABORT */\n          ;\n          queue[i].abortReason = status;\n        }\n      }\n\n      repoRerunTransactions(repo, path);\n    }\n  }, latestHash);\n}\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\n\n\nfunction repoRerunTransactions(repo, changedPath) {\n  var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\n  var path = treeGetPath(rootMostTransactionNode);\n  var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n  return path;\n}\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\n\n\nfunction repoRerunTransactionQueue(repo, queue, path) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  } // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n\n\n  var callbacks = [];\n  var events = []; // Ignore all of the sets we're going to re-run.\n\n  var txnsToRerun = queue.filter(function (q) {\n    return q.status === 0\n    /* RUN */\n    ;\n  });\n  var setsToIgnore = txnsToRerun.map(function (q) {\n    return q.currentWriteId;\n  });\n\n  var _loop_2 = function (i) {\n    var transaction = queue[i];\n    var relativePath = newRelativePath(path, transaction.path);\n    var abortTransaction = false,\n        abortReason;\n    assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n    if (transaction.status === 4\n    /* NEEDS_ABORT */\n    ) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n    } else if (transaction.status === 0\n    /* RUN */\n    ) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n      } else {\n        // This code reruns a transaction\n        var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\n        transaction.currentInputSnapshot = currentNode;\n        var newData = queue[i].update(currentNode.val());\n\n        if (newData !== undefined) {\n          validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n          var newDataNode = nodeFromJSON(newData);\n          var hasExplicitPriority = typeof newData === 'object' && newData != null && contains(newData, '.priority');\n\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          var oldWriteId = transaction.currentWriteId;\n          var serverValues = repoGenerateServerValues(repo);\n          var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo); // Mutates setsToIgnore in place\n\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n          events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n        }\n      }\n    }\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = 2\n      /* COMPLETED */\n      ; // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(function () {\n            return queue[i].onComplete(null, false, queue[i].currentInputSnapshot);\n          });\n        } else {\n          callbacks.push(function () {\n            return queue[i].onComplete(new Error(abortReason), false, null);\n          });\n        }\n      }\n    }\n  };\n\n  for (var i = 0; i < queue.length; i++) {\n    _loop_2(i);\n  } // Clean up completed transactions.\n\n\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n  for (var i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  } // Try to send the transaction result to the server.\n\n\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\n\n\nfunction repoGetAncestorTransactionNode(repo, path) {\n  var front; // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n\n  var transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\n\n\nfunction repoBuildTransactionQueue(repo, transactionNode) {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  var transactionQueue = [];\n  repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n  transactionQueue.sort(function (a, b) {\n    return a.order - b.order;\n  });\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\n  var nodeQueue = treeGetValue(node);\n\n  if (nodeQueue) {\n    for (var i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, function (child) {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\n\n\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\n  var queue = treeGetValue(node);\n\n  if (queue) {\n    var to = 0;\n\n    for (var from = 0; from < queue.length; from++) {\n      if (queue[from].status !== 2\n      /* COMPLETED */\n      ) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, function (childNode) {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\n\n\nfunction repoAbortTransactions(repo, path) {\n  var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n  var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n  treeForEachAncestor(transactionNode, function (node) {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n  repoAbortTransactionsOnNode(repo, transactionNode);\n  treeForEachDescendant(transactionNode, function (node) {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n  return affectedPath;\n}\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\n\n\nfunction repoAbortTransactionsOnNode(repo, node) {\n  var queue = treeGetValue(node);\n\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n\n    var events = [];\n    var lastSent = -1;\n\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].status === 3\n      /* SENT_NEEDS_ABORT */\n      ) ;else if (queue[i].status === 1\n      /* SENT */\n      ) {\n        assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n        lastSent = i; // Mark transaction for abort when it comes back.\n\n        queue[i].status = 3\n        /* SENT_NEEDS_ABORT */\n        ;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(queue[i].status === 0\n        /* RUN */\n        , 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n        queue[i].unwatcher();\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\n\n        if (queue[i].onComplete) {\n          callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\n        }\n      }\n    }\n\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    } // Now fire the callbacks.\n\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @returns key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  try {\n    for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n\n      if (segment.length === 0) {\n        continue;\n      }\n\n      var kv = segment.split('=');\n\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return results;\n}\n\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n      namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace === 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly,\n    /*persistenceKey=*/\n    '',\n    /*includeNamespaceInQueryParams=*/\n    namespace !== parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nvar parseDatabaseURL = function (dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = '',\n      namespace = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    var hostWithoutPort = host.slice(0, colonInd);\n\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      var dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1); // Normalize namespaces to lowercase to share storage / connection.\n\n      namespace = subdomain;\n    } // Always treat the value of the `ns` as the namespace name if it is present.\n\n\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param eventRegistration - The function to call to with the event data. User provided\r\n   * @param snapshot - The data backing the event\r\n   * @param prevName - Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.ref;\n\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  };\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\n\n\nvar CallbackContext =\n/** @class */\nfunction () {\n  function CallbackContext(snapshotCallback, cancelCallback) {\n    this.snapshotCallback = snapshotCallback;\n    this.cancelCallback = cancelCallback;\n  }\n\n  CallbackContext.prototype.onValue = function (expDataSnapshot, previousChildName) {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  };\n\n  CallbackContext.prototype.onCancel = function (error) {\n    assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\n    return this.cancelCallback.call(null, error);\n  };\n\n  Object.defineProperty(CallbackContext.prototype, \"hasCancelCallback\", {\n    get: function () {\n      return !!this.cancelCallback;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CallbackContext.prototype.matches = function (other) {\n    return this.snapshotCallback === other.snapshotCallback || this.snapshotCallback.userCallback !== undefined && this.snapshotCallback.userCallback === other.snapshotCallback.userCallback && this.snapshotCallback.context === other.snapshotCallback.context;\n  };\n\n  return CallbackContext;\n}();\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\n\n\nvar OnDisconnect$1 =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function OnDisconnect(_repo, _path) {\n    this._repo = _repo;\n    this._path = _path;\n  }\n  /**\r\n   * Cancels all previously queued `onDisconnect()` set or update events for this\r\n   * location and all children.\r\n   *\r\n   * If a write has been queued for this location via a `set()` or `update()` at a\r\n   * parent location, the write at this location will be canceled, though writes\r\n   * to sibling locations will still occur.\r\n   *\r\n   * @returns Resolves when synchronization to the server is complete.\r\n   */\n\n\n  OnDisconnect.prototype.cancel = function () {\n    var deferred = new Deferred();\n    repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is deleted when the client is disconnected\r\n   * (due to closing the browser, navigating to a new page, or network issues).\r\n   *\r\n   * @returns Resolves when synchronization to the server is complete.\r\n   */\n\n\n  OnDisconnect.prototype.remove = function () {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    var deferred = new Deferred();\n    repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is set to the specified value when the\r\n   * client is disconnected (due to closing the browser, navigating to a new page,\r\n   * or network issues).\r\n   *\r\n   * `set()` is especially useful for implementing \"presence\" systems, where a\r\n   * value should be changed or cleared when a user disconnects so that they\r\n   * appear \"offline\" to other users. See\r\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n   * for more information.\r\n   *\r\n   * Note that `onDisconnect` operations are only triggered once. If you want an\r\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n   * the `onDisconnect` operations each time.\r\n   *\r\n   * @param value - The value to be written to this location on disconnect (can\r\n   * be an object, array, string, number, boolean, or null).\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.set = function (value) {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    var deferred = new Deferred();\n    repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is set to the specified value and priority\r\n   * when the client is disconnected (due to closing the browser, navigating to a\r\n   * new page, or network issues).\r\n   *\r\n   * @param value - The value to be written to this location on disconnect (can\r\n   * be an object, array, string, number, boolean, or null).\r\n   * @param priority - The priority to be written (string, number, or null).\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority) {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n    var deferred = new Deferred();\n    repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Writes multiple values at this location when the client is disconnected (due\r\n   * to closing the browser, navigating to a new page, or network issues).\r\n   *\r\n   * The `values` argument contains multiple property-value pairs that will be\r\n   * written to the Database together. Each child property can either be a simple\r\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n   * from the current location to the data to update.\r\n   *\r\n   * As opposed to the `set()` method, `update()` can be use to selectively update\r\n   * only the referenced properties at the current location (instead of replacing\r\n   * all the child properties at the current location).\r\n   *\r\n   * @param values - Object containing multiple values.\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.update = function (values) {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\n    var deferred = new Deferred();\n    repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @internal\r\n */\n\n\nvar QueryImpl =\n/** @class */\nfunction () {\n  /**\r\n   * @hideconstructor\r\n   */\n  function QueryImpl(_repo, _path, _queryParams, _orderByCalled) {\n    this._repo = _repo;\n    this._path = _path;\n    this._queryParams = _queryParams;\n    this._orderByCalled = _orderByCalled;\n  }\n\n  Object.defineProperty(QueryImpl.prototype, \"key\", {\n    get: function () {\n      if (pathIsEmpty(this._path)) {\n        return null;\n      } else {\n        return pathGetBack(this._path);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"ref\", {\n    get: function () {\n      return new ReferenceImpl(this._repo, this._path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"_queryIdentifier\", {\n    get: function () {\n      var obj = queryParamsGetQueryObject(this._queryParams);\n      var id = ObjectToUniqueKey(obj);\n      return id === '{}' ? 'default' : id;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"_queryObject\", {\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     */\n    get: function () {\n      return queryParamsGetQueryObject(this._queryParams);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  QueryImpl.prototype.isEqual = function (other) {\n    other = getModularInstance(other);\n\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    var sameRepo = this._repo === other._repo;\n    var samePath = pathEquals(this._path, other._path);\n    var sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n\n  QueryImpl.prototype.toJSON = function () {\n    return this.toString();\n  };\n\n  QueryImpl.prototype.toString = function () {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  };\n\n  return QueryImpl;\n}();\n/**\r\n * Validates that no other order by call has been made\r\n */\n\n\nfunction validateNoPreviousOrderByCall(query, fnName) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n/**\r\n * Validates start/end values for queries.\r\n */\n\n\nfunction validateQueryEndpoints(params) {\n  var startNode = null;\n  var endNode = null;\n\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n    var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' + 'endAt(), endBefore(), or equalTo() must be a string.';\n\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n      throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' + '(null, a number, or a string).');\n    }\n  } else {\n    assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n    if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n      throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' + 'equalTo() cannot be an object.');\n    }\n  }\n}\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\n\n\nfunction validateLimit(params) {\n  if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n    throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" + 'limitToFirst() or limitToLast() instead.');\n  }\n}\n/**\r\n * @internal\r\n */\n\n\nvar ReferenceImpl =\n/** @class */\nfunction (_super) {\n  __extends(ReferenceImpl, _super);\n  /** @hideconstructor */\n\n\n  function ReferenceImpl(repo, path) {\n    return _super.call(this, repo, path, new QueryParams(), false) || this;\n  }\n\n  Object.defineProperty(ReferenceImpl.prototype, \"parent\", {\n    get: function () {\n      var parentPath = pathParent(this._path);\n      return parentPath === null ? null : new ReferenceImpl(this._repo, parentPath);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceImpl.prototype, \"root\", {\n    get: function () {\n      var ref = this;\n\n      while (ref.parent !== null) {\n        ref = ref.parent;\n      }\n\n      return ref;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ReferenceImpl;\n}(QueryImpl);\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\n\n\nvar DataSnapshot$1 =\n/** @class */\nfunction () {\n  /**\r\n   * @param _node - A SnapshotNode to wrap.\r\n   * @param ref - The location this snapshot came from.\r\n   * @param _index - The iteration order for this snapshot\r\n   * @hideconstructor\r\n   */\n  function DataSnapshot(_node,\n  /**\r\n   * The location of this DataSnapshot.\r\n   */\n  ref, _index) {\n    this._node = _node;\n    this.ref = ref;\n    this._index = _index;\n  }\n\n  Object.defineProperty(DataSnapshot.prototype, \"priority\", {\n    /**\r\n     * Gets the priority value of the data in this `DataSnapshot`.\r\n     *\r\n     * Applications need not use priority but can order collections by\r\n     * ordinary properties (see\r\n     * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n     * ).\r\n     */\n    get: function () {\n      // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n      return this._node.getPriority().val();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    /**\r\n     * The key (last part of the path) of the location of this `DataSnapshot`.\r\n     *\r\n     * The last token in a Database location is considered its key. For example,\r\n     * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n     * `DataSnapshot` will return the key for the location that generated it.\r\n     * However, accessing the key on the root URL of a Database will return\r\n     * `null`.\r\n     */\n    get: function () {\n      return this.ref.key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataSnapshot.prototype, \"size\", {\n    /** Returns the number of child properties of this `DataSnapshot`. */\n    get: function () {\n      return this._node.numChildren();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Gets another `DataSnapshot` for the location at the specified relative path.\r\n   *\r\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n   * another `DataSnapshot` for the location at the specified relative path. The\r\n   * relative path can either be a simple child name (for example, \"ada\") or a\r\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n   * whose value is `null`) is returned.\r\n   *\r\n   * @param path - A relative path to the location of child data.\r\n   */\n\n  DataSnapshot.prototype.child = function (path) {\n    var childPath = new Path(path);\n    var childRef = child(this.ref, path);\n    return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n   * efficient than using `snapshot.val() !== null`.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    return !this._node.isEmpty();\n  };\n  /**\r\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n   *\r\n   * The `exportVal()` method is similar to `val()`, except priority information\r\n   * is included (if available), making it suitable for backing up your data.\r\n   *\r\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n   *   Array, string, number, boolean, or `null`).\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    return this._node.val(true);\n  };\n  /**\r\n   * Enumerates the top-level children in the `DataSnapshot`.\r\n   *\r\n   * Because of the way JavaScript objects work, the ordering of data in the\r\n   * JavaScript object returned by `val()` is not guaranteed to match the\r\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n   * where `forEach()` comes in handy. It guarantees the children of a\r\n   * `DataSnapshot` will be iterated in their query order.\r\n   *\r\n   * If no explicit `orderBy*()` method is used, results are returned\r\n   * ordered by key (unless priorities are used, in which case, results are\r\n   * returned by priority).\r\n   *\r\n   * @param action - A function that will be called for each child DataSnapshot.\r\n   * The callback can return true to cancel further enumeration.\r\n   * @returns true if enumeration was canceled due to your callback returning\r\n   * true.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    var childrenNode = this._node; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this._index, function (key, node) {\n      return action(new DataSnapshot(node, child(_this.ref, key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns true if the specified child path has (non-null) data.\r\n   *\r\n   * @param path - A relative path to the location of a potential child.\r\n   * @returns `true` if data exists at the specified child path; else\r\n   *  `false`.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (path) {\n    var childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n   * properties.\r\n   *\r\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n   * children. If it does, you can enumerate them using `forEach()`. If it\r\n   * doesn't, then either this snapshot contains a primitive value (which can be\r\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n   * `null`).\r\n   *\r\n   * @returns true if this snapshot has any children; else false.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  };\n  /**\r\n   * Returns a JSON-serializable representation of this object.\r\n   */\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    return this.exportVal();\n  };\n  /**\r\n   * Extracts a JavaScript value from a `DataSnapshot`.\r\n   *\r\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n   * scalar type (string, number, or boolean), an array, or an object. It may\r\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n   * data).\r\n   *\r\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n   *   Array, string, number, boolean, or `null`).\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  DataSnapshot.prototype.val = function () {\n    return this._node.val();\n  };\n\n  return DataSnapshot;\n}();\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\n\n\nfunction ref(db, path) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('ref');\n\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\n\n\nfunction refFromURL(db, url) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('refFromURL');\n\n  var parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n  var repoInfo = parsedURL.repoInfo;\n\n  if (!db._repo.repoInfo_.isCustomHost() && repoInfo.host !== db._repo.repoInfo_.host) {\n    fatal('refFromURL' + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + db._repo.repoInfo_.host + ')');\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\n\n\nfunction child(parent, path) {\n  parent = getModularInstance(parent);\n\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\n\n\nfunction push(parent, value) {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  var now = repoServerTime(parent._repo);\n  var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n\n  var thennablePushRef = child(parent, name);\n  var pushRef = child(parent, name);\n  var promise;\n\n  if (value != null) {\n    promise = set(pushRef, value).then(function () {\n      return pushRef;\n    });\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef;\n}\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\n\n\nfunction remove(ref) {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction set(ref, value) {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, ref._path, value,\n  /*priority=*/\n  null, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction setPriority(ref, priority) {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction setWithPriority(ref, value, priority) {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\n\n\nfunction update(ref, values) {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  var deferred = new Deferred();\n  repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\n\n\nfunction get(query) {\n  query = getModularInstance(query);\n  return repoGetValue(query._repo, query).then(function (node) {\n    return new DataSnapshot$1(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\n  });\n}\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  function ValueEventRegistration(callbackContext) {\n    this.callbackContext = callbackContext;\n  }\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query._queryParams.getIndex();\n\n    return new DataEvent('value', this, new DataSnapshot$1(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\n  };\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var _this = this;\n\n    if (eventData.getEventType() === 'cancel') {\n      return function () {\n        return _this.callbackContext.onCancel(eventData.error);\n      };\n    } else {\n      return function () {\n        return _this.callbackContext.onValue(eventData.snapshot, null);\n      };\n    }\n  };\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  };\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbackContext !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of a child_x event.\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  function ChildEventRegistration(eventType, callbackContext) {\n    this.eventType = eventType;\n    this.callbackContext = callbackContext;\n  }\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  };\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    assert(change.childName != null, 'Child events should have a childName.');\n    var childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\n\n    var index = query._queryParams.getIndex();\n\n    return new DataEvent(change.type, this, new DataSnapshot$1(change.snapshotNode, childRef, index), change.prevName);\n  };\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    var _this = this;\n\n    if (eventData.getEventType() === 'cancel') {\n      return function () {\n        return _this.callbackContext.onCancel(eventData.error);\n      };\n    } else {\n      return function () {\n        return _this.callbackContext.onValue(eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    if (other instanceof ChildEventRegistration) {\n      return this.eventType === other.eventType && (!this.callbackContext || !other.callbackContext || this.callbackContext.matches(other.callbackContext));\n    }\n\n    return false;\n  };\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return !!this.callbackContext;\n  };\n\n  return ChildEventRegistration;\n}();\n\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\n  var cancelCallback;\n\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    var userCallback_1 = callback;\n\n    var onceCallback = function (dataSnapshot, previousChildName) {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback_1(dataSnapshot, previousChildName);\n    };\n\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  var callbackContext = new CallbackContext(callback, cancelCallback || undefined);\n  var container = eventType === 'value' ? new ValueEventRegistration(callbackContext) : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return function () {\n    return repoRemoveEventCallbackForQuery(query._repo, query, container);\n  };\n}\n\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\n}\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\n\n\nfunction off(query, eventType, callback) {\n  var container = null;\n  var expCallback = callback ? new CallbackContext(callback) : null;\n\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\n\n\nvar QueryConstraint =\n/** @class */\nfunction () {\n  function QueryConstraint() {}\n\n  return QueryConstraint;\n}();\n\nvar QueryEndAtConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEndAtConstraint, _super);\n\n  function QueryEndAtConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEndAtConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    var newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('endAt: Starting point was already set (by another call to endAt, ' + 'endBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryEndAtConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\n\n\nfunction endAt(value, key) {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nvar QueryEndBeforeConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEndBeforeConstraint, _super);\n\n  function QueryEndBeforeConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEndBeforeConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    var newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('endBefore: Starting point was already set (by another call to endAt, ' + 'endBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryEndBeforeConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\n\n\nfunction endBefore(value, key) {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nvar QueryStartAtConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryStartAtConstraint, _super);\n\n  function QueryStartAtConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryStartAtConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    var newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('startAt: Starting point was already set (by another call to startAt, ' + 'startBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryStartAtConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\n\n\nfunction startAt(value, key) {\n  if (value === void 0) {\n    value = null;\n  }\n\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nvar QueryStartAfterConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryStartAfterConstraint, _super);\n\n  function QueryStartAfterConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryStartAfterConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    var newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('startAfter: Starting point was already set (by another call to startAt, ' + 'startAfter, or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryStartAfterConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\n\n\nfunction startAfter(value, key) {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nvar QueryLimitToFirstConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryLimitToFirstConstraint, _super);\n\n  function QueryLimitToFirstConstraint(_limit) {\n    var _this = _super.call(this) || this;\n\n    _this._limit = _limit;\n    return _this;\n  }\n\n  QueryLimitToFirstConstraint.prototype._apply = function (query) {\n    if (query._queryParams.hasLimit()) {\n      throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' + 'or limitToLast).');\n    }\n\n    return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\n  };\n\n  return QueryLimitToFirstConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\n\n\nfunction limitToFirst(limit) {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nvar QueryLimitToLastConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryLimitToLastConstraint, _super);\n\n  function QueryLimitToLastConstraint(_limit) {\n    var _this = _super.call(this) || this;\n\n    _this._limit = _limit;\n    return _this;\n  }\n\n  QueryLimitToLastConstraint.prototype._apply = function (query) {\n    if (query._queryParams.hasLimit()) {\n      throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' + 'or limitToLast).');\n    }\n\n    return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\n  };\n\n  return QueryLimitToLastConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\n\n\nfunction limitToLast(limit) {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nvar QueryOrderByChildConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByChildConstraint, _super);\n\n  function QueryOrderByChildConstraint(_path) {\n    var _this = _super.call(this) || this;\n\n    _this._path = _path;\n    return _this;\n  }\n\n  QueryOrderByChildConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    var parsedPath = new Path(this._path);\n\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByChildConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\n\n\nfunction orderByChild(path) {\n  if (path === '$key') {\n    throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\n  } else if (path === '$priority') {\n    throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\n  } else if (path === '$value') {\n    throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\n  }\n\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nvar QueryOrderByKeyConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByKeyConstraint, _super);\n\n  function QueryOrderByKeyConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByKeyConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    var newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByKeyConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\n\n\nfunction orderByKey() {\n  return new QueryOrderByKeyConstraint();\n}\n\nvar QueryOrderByPriorityConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByPriorityConstraint, _super);\n\n  function QueryOrderByPriorityConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByPriorityConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    var newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByPriorityConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\n\n\nfunction orderByPriority() {\n  return new QueryOrderByPriorityConstraint();\n}\n\nvar QueryOrderByValueConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByValueConstraint, _super);\n\n  function QueryOrderByValueConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByValueConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    var newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByValueConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\n\n\nfunction orderByValue() {\n  return new QueryOrderByValueConstraint();\n}\n\nvar QueryEqualToValueConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEqualToValueConstraint, _super);\n\n  function QueryEqualToValueConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEqualToValueConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' + 'equalTo).');\n    }\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' + 'equalTo).');\n    }\n\n    return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\n  };\n\n  return QueryEqualToValueConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\n\n\nfunction equalTo(value, key) {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\n\n\nfunction query(query) {\n  var e_1, _a;\n\n  var queryConstraints = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    queryConstraints[_i - 1] = arguments[_i];\n  }\n\n  var queryImpl = getModularInstance(query);\n\n  try {\n    for (var queryConstraints_1 = __values(queryConstraints), queryConstraints_1_1 = queryConstraints_1.next(); !queryConstraints_1_1.done; queryConstraints_1_1 = queryConstraints_1.next()) {\n      var constraint = queryConstraints_1_1.value;\n      queryImpl = constraint._apply(queryImpl);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (queryConstraints_1_1 && !queryConstraints_1_1.done && (_a = queryConstraints_1.return)) _a.call(queryConstraints_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return queryImpl;\n}\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\n\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n/**\r\n * Creates and caches Repo instances.\r\n */\n\nvar repos = {};\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\n\nvar useRestClient = false;\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\n\nfunction repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider) {\n  repo.repoInfo_ = new RepoInfo(host + \":\" + port,\n  /* secure= */\n  false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\n\n\nfunction repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin) {\n  var dbUrl = url || app.options.databaseURL;\n\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\"Can't determine Firebase Database URL. Be sure to include \" + ' a Project ID when calling firebase.initializeApp().');\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\n  }\n\n  var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  var repoInfo = parsedUrl.repoInfo;\n  var isEmulator;\n  var dbEmulatorHost = undefined;\n\n  if (typeof process !== 'undefined') {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  var authTokenProvider = nodeAdmin && isEmulator ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER) : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n  }\n\n  var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider, new AppCheckTokenProvider(app.name, appCheckProvider));\n  return new Database$1(repo, app);\n}\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\n\n\nfunction repoManagerDeleteRepo(repo, appName) {\n  var appRepos = repos[appName]; // This should never happen...\n\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(\"Database \" + appName + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n  }\n\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\n\n\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider, appCheckProvider) {\n  var appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  var repo = appRepos[repoInfo.toURLString()];\n\n  if (repo) {\n    fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n  }\n\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n  return repo;\n}\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\n\n\nfunction repoManagerForceRestClient(forceRestClient) {\n  useRestClient = forceRestClient;\n}\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\n\n\nvar Database$1 =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function Database(_repoInternal,\n  /** The FirebaseApp associated with this Realtime Database instance. */\n  app) {\n    this._repoInternal = _repoInternal;\n    this.app = app;\n    /** Represents a database instance. */\n\n    this['type'] = 'database';\n    /** Track if the instance has been used (root or repo accessed) */\n\n    this._instanceStarted = false;\n  }\n\n  Object.defineProperty(Database.prototype, \"_repo\", {\n    get: function () {\n      if (!this._instanceStarted) {\n        repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\n        this._instanceStarted = true;\n      }\n\n      return this._repoInternal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Database.prototype, \"_root\", {\n    get: function () {\n      if (!this._rootInternal) {\n        this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n      }\n\n      return this._rootInternal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Database.prototype._delete = function () {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n\n    return Promise.resolve();\n  };\n\n  Database.prototype._checkNotDeleted = function (apiName) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  };\n\n  return Database;\n}();\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */\n\n\nfunction connectDatabaseEmulator(db, host, port, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('useEmulator');\n\n  if (db._instanceStarted) {\n    fatal('Cannot call useEmulator() after instance has already been initialized.');\n  }\n\n  var repo = db._repoInternal;\n  var tokenProvider = undefined;\n\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');\n    }\n\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    var token = typeof options.mockUserToken === 'string' ? options.mockUserToken : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  } // Modify the repo to apply emulator settings\n\n\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\n\n\nfunction goOffline(db) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('goOffline');\n\n  repoInterrupt(db._repo);\n}\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\n\n\nfunction goOnline(db) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('goOnline');\n\n  repoResume(db._repo);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\n\nfunction serverTimestamp() {\n  return SERVER_TIMESTAMP;\n}\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\n\n\nfunction increment(delta) {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A type for the resolve value of Firebase.transaction.\r\n */\n\n\nvar TransactionResult$1 =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function TransactionResult(\n  /** Whether the transaction was successfully committed. */\n  committed,\n  /** The resulting data snapshot. */\n  snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  }\n  /** Returns a JSON-serializable representation of this object. */\n\n\n  TransactionResult.prototype.toJSON = function () {\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */\n\n\nfunction runTransaction(ref, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ntransactionUpdate, options) {\n  var _a;\n\n  ref = getModularInstance(ref);\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'Reference.transaction failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  var applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\n  var deferred = new Deferred();\n\n  var promiseComplete = function (error, committed, node) {\n    var dataSnapshot = null;\n\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot$1(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\n      deferred.resolve(new TransactionResult$1(committed, dataSnapshot));\n    }\n  }; // Add a watch to make sure we get server updates.\n\n\n  var unwatcher = onValue(ref, function () {});\n  repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\n  return deferred.promise;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  function OnDisconnect(_delegate) {\n    this._delegate = _delegate;\n  }\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\n\n    var result = this._delegate.cancel();\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\n\n    var result = this._delegate.remove();\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\n\n    var result = this._delegate.set(value);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\n\n    var result = this._delegate.setWithPriority(value, priority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\n\n    var result = this._delegate.update(objectToMerge);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  function DataSnapshot(_database, _delegate) {\n    this._database = _database;\n    this._delegate = _delegate;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this._delegate.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this._delegate.exportVal();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @returns Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return this._delegate.exists();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param path - Path to a child.\r\n   * @returns DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (path) {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    path = String(path);\n    validatePathString('DataSnapshot.child', 'path', path, false);\n    return new DataSnapshot(this._database, this._delegate.child(path));\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param path - Path to a child.\r\n   * @returns Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (path) {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 'path', path, false);\n    return this._delegate.hasChild(path);\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @returns The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n    return this._delegate.priority;\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each child.\r\n   * @returns True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 'action', action, false);\n    return this._delegate.forEach(function (expDataSnapshot) {\n      return action(new DataSnapshot(_this._database, expDataSnapshot));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n    return this._delegate.hasChildren();\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function () {\n      return this._delegate.key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @returns The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this._delegate.size;\n  };\n  /**\r\n   * @returns The Firebase reference for the location this snapshot's data came\r\n   * from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return new Reference(this._database, this._delegate.ref);\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function () {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(database, _delegate) {\n    this.database = database;\n    this._delegate = _delegate;\n  }\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    var _this = this;\n\n    var _a;\n\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateCallback('Query.on', 'callback', callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    var valueCallback = function (expSnapshot, previousChildName) {\n      callback.call(ret.context, new DataSnapshot(_this.database, expSnapshot), previousChildName);\n    };\n\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n    var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\n\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      default:\n        throw new Error(errorPrefix('Query.on', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n  };\n\n  Query.prototype.off = function (eventType, callback, context) {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', eventType, true);\n    validateCallback('Query.off', 'callback', callback, true);\n    validateContextObject('Query.off', 'context', context, true);\n\n    if (callback) {\n      var valueCallback = function () {};\n\n      valueCallback.userCallback = callback;\n      valueCallback.context = context;\n      off(this._delegate, eventType, valueCallback);\n    } else {\n      off(this._delegate, eventType);\n    }\n  };\n  /**\r\n   * Get the server-value for this query, or return a cached value if not connected.\r\n   */\n\n\n  Query.prototype.get = function () {\n    var _this = this;\n\n    return get(this._delegate).then(function (expSnapshot) {\n      return new DataSnapshot(_this.database, expSnapshot);\n    });\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   */\n\n\n  Query.prototype.once = function (eventType, callback, failureCallbackOrContext, context) {\n    var _this = this;\n\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateCallback('Query.once', 'callback', callback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\n    var deferred = new Deferred();\n\n    var valueCallback = function (expSnapshot, previousChildName) {\n      var result = new DataSnapshot(_this.database, expSnapshot);\n\n      if (callback) {\n        callback.call(ret.context, result, previousChildName);\n      }\n\n      deferred.resolve(result);\n    };\n\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n\n    var cancelCallback = function (error) {\n      if (ret.cancel) {\n        ret.cancel.call(ret.context, error);\n      }\n\n      deferred.reject(error);\n    };\n\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      default:\n        throw new Error(errorPrefix('Query.once', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToFirst(limit)));\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToLast(limit)));\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByChild(path)));\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByKey()));\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByPriority()));\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByValue()));\n  };\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, startAt(value, name)));\n  };\n\n  Query.prototype.startAfter = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, startAfter(value, name)));\n  };\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endAt(value, name)));\n  };\n\n  Query.prototype.endBefore = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endBefore(value, name)));\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, equalTo(value, name)));\n  };\n  /**\r\n   * @returns URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this._delegate.toString();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    return this._delegate.isEqual(other._delegate);\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param fnName - The function name (on or once)\r\n   *\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: undefined,\n      context: undefined\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      validateCallback(fnName, 'cancel', ret.cancel, true);\n      ret.context = context;\n      validateContextObject(fnName, 'context', ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(errorPrefix(fnName, 'cancelOrContext') + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function () {\n      return new Reference(this.database, new ReferenceImpl(this._delegate._repo, this._delegate._path));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Query;\n}();\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  __extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   */\n\n\n  function Reference(database, _delegate) {\n    var _this = _super.call(this, database, new QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)) || this;\n\n    _this.database = database;\n    _this._delegate = _delegate;\n    return _this;\n  }\n  /** @returns {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n    return this._delegate.key;\n  };\n\n  Reference.prototype.child = function (pathString) {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    }\n\n    return new Reference(this.database, child(this._delegate, pathString));\n  };\n  /** @returns {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parent = this._delegate.parent;\n    return parent ? new Reference(this.database, parent) : null;\n  };\n  /** @returns {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n    return new Reference(this.database, this._delegate.root);\n  };\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateCallback('Reference.set', 'onComplete', onComplete, true);\n    var result = set(this._delegate, newVal);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.update = function (values, onComplete) {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n\n    if (Array.isArray(values)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < values.length; ++i) {\n        newObjectToMerge['' + i] = values[i];\n      }\n\n      values = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateWritablePath('Reference.update', this._delegate._path);\n    validateCallback('Reference.update', 'onComplete', onComplete, true);\n    var result = update(this._delegate, values);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\n    var result = setWithPriority(this._delegate, newVal, newPriority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.remove = function (onComplete) {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateCallback('Reference.remove', 'onComplete', onComplete, true);\n    var result = remove(this._delegate);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    var _this = this;\n\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\n    validateCallback('Reference.transaction', 'onComplete', onComplete, true);\n    validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\n    var result = runTransaction(this._delegate, transactionUpdate, {\n      applyLocally: applyLocally\n    }).then(function (transactionResult) {\n      return new TransactionResult(transactionResult.committed, new DataSnapshot(_this.database, transactionResult.snapshot));\n    });\n\n    if (onComplete) {\n      result.then(function (transactionResult) {\n        return onComplete(null, transactionResult.committed, transactionResult.snapshot);\n      }, function (error) {\n        return onComplete(error, false, null);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\n    var result = setPriority(this._delegate, priority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.push = function (value, onComplete) {\n    var _this = this;\n\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateCallback('Reference.push', 'onComplete', onComplete, true);\n    var expPromise = push(this._delegate, value);\n    var promise = expPromise.then(function (expRef) {\n      return new Reference(_this.database, expRef);\n    });\n\n    if (onComplete) {\n      promise.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    var result = new Reference(this.database, expPromise);\n    result.then = promise.then.bind(promise);\n    result.catch = promise.catch.bind(promise, undefined);\n    return result;\n  };\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this._delegate._path);\n    return new OnDisconnect(new OnDisconnect$1(this._delegate._repo, this._delegate._path));\n  };\n\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function () {\n      return this.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function () {\n      return this.getParent();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function () {\n      return this.getRoot();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   */\n  function Database(_delegate, app) {\n    var _this = this;\n\n    this._delegate = _delegate;\n    this.app = app;\n    this.INTERNAL = {\n      delete: function () {\n        return _this._delegate._delete();\n      }\n    };\n  }\n  /**\r\n   * Modify this instance to communicate with the Realtime Database emulator.\r\n   *\r\n   * <p>Note: This method must be called before performing any other operation.\r\n   *\r\n   * @param host - the emulator host (ex: localhost)\r\n   * @param port - the emulator port (ex: 8080)\r\n   * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n   */\n\n\n  Database.prototype.useEmulator = function (host, port, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    connectDatabaseEmulator(this._delegate, host, port, options);\n  };\n\n  Database.prototype.ref = function (path) {\n    validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      var childRef = refFromURL(this._delegate, path.toString());\n      return new Reference(this, childRef);\n    } else {\n      var childRef = ref(this._delegate, path);\n      return new Reference(this, childRef);\n    }\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @returns Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    var apiName = 'database.refFromURL';\n    validateArgCount(apiName, 1, 1, arguments.length);\n    var childRef = refFromURL(this._delegate, url);\n    return new Reference(this, childRef);\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    return goOffline(this._delegate);\n  };\n\n  Database.prototype.goOnline = function () {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    return goOnline(this._delegate);\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: serverTimestamp(),\n    increment: function (delta) {\n      return increment(delta);\n    }\n  };\n  return Database;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\n\n\nvar forceLongPolling = function () {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function () {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function () {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function (ref, callback) {\n  var connection = ref._delegate._repo.persistentConnection_; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  connection.securityDebugCallback_ = callback;\n};\n\nvar stats = function (ref, showDelta) {\n  repoStats(ref._delegate._repo, showDelta);\n};\n\nvar statsIncrementCounter = function (ref, metric) {\n  repoStatsIncrementCounter(ref._delegate._repo, metric);\n};\n\nvar dataUpdateCount = function (ref) {\n  return ref._delegate._repo.dataUpdateCount;\n};\n\nvar interceptServerData = function (ref, callback) {\n  return repoInterceptServerData(ref._delegate._repo, callback);\n};\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\n\n\nfunction initStandalone(_a) {\n  var app = _a.app,\n      url = _a.url,\n      version = _a.version,\n      customAuthImpl = _a.customAuthImpl,\n      namespace = _a.namespace,\n      _b = _a.nodeAdmin,\n      nodeAdmin = _b === void 0 ? false : _b;\n  setSDKVersion(version);\n  /**\r\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n   * any actual function.\r\n   */\n\n  var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\n  authProvider.setComponent(new Component('auth-internal', function () {\n    return customAuthImpl;\n  }, \"PRIVATE\"\n  /* PRIVATE */\n  ));\n  return {\n    instance: new Database(repoManagerDatabaseFromApp(app, authProvider,\n    /* appCheckProvider= */\n    undefined, url, nodeAdmin), app),\n    namespace: namespace\n  };\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n\nvar hijackHash = function (newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nvar ConnectionTarget = RepoInfo;\n\nvar queryIdentifier = function (query) {\n  return query._delegate._queryIdentifier;\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\n\n\nvar forceRestClient = function (forceRestClient) {\n  repoManagerForceRestClient(forceRestClient);\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION); // Register the Database Service with the 'firebase' namespace.\n\n  var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\n    var url = _a.instanceIdentifier;\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    var appCheckProvider = container.getProvider('app-check-internal');\n    return new Database(repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url), app);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps( // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot,\n    enableLogging: enableLogging,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };","map":{"version":3,"names":["firebase","Provider","ComponentContainer","Component","stringify","jsonEval","contains","assert","isNodeSdk","base64","stringToByteArray","Sha1","deepCopy","base64Encode","isMobileCordova","stringLength","Deferred","safeGet","isAdmin","isValidFormat","isEmpty","isReactNative","assertionError","map","querystring","errorPrefix","getModularInstance","createMockUserToken","validateArgCount","validateCallback","validateContextObject","__spreadArray","__read","__values","__extends","__awaiter","__generator","__assign","Logger","LogLevel","name","version","SDK_VERSION","setSDKVersion","DOMStorageWrapper","domStorage_","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","get","storedVal","getItem","remove","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","id","sha1","str","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","logLevel","VERBOSE","log","bind","logWrapper","prefix","error","fatal","Error","warn","warnIfPageIsSecure","location","protocol","indexOf","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","ebits","fbits","bias","s","f","ln","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","_path","toUpperCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","AppCheckTokenProvider","appName_","appCheckProvider","_this","appCheck","getImmediate","optional","then","getToken","forceRefresh","Promise","resolve","reject","addTokenChangeListener","listener","_a","addTokenListener","notifyForInvalidToken","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","auth","catch","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","OWNER","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN_RE","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","APP_CHECK_TOKEN_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","internalHost","isCacheableHost","isCustomHost","Object","defineProperty","newHost","enumerable","configurable","toURLString","repoInfoNeedsQueryParam","repoInfo","repoInfoConnectionURL","type","params","connURL","pairs","StatsCollection","counters_","incrementCounter","amount","collections","reporters","statsManagerGetCollection","hashString","statsManagerGetOrCreateReporter","creatorFunction","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","callback","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","state_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","size","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","String","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","e_1","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","_b","ALL_TRANSPORTS","_c","next","done","transport","e_1_1","return","call","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","pathString","onComplete","hash","merge","refreshAuthToken","token","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","listeners","context","on","validateEventType_","eventData","getInitialEvent","off","splice","find","et","OnlineMonitor","_super","online_","getInstance","currentlyOnline","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","encodeURIComponent","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","validationPathCheckValid","validationPathPush","validationPath","child","validationPathPop","last","pop","validationPathToErrorString","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","GET_CONNECT_TIMEOUT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","onVisible_","onOnline_","action","onResponse","curReqNum","r","initConnection_","deferred","request","p","q","_queryObject","outstandingGet","index","undefined","sendGet_","promise","listen","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","tryAppCheck","token_1","authMethod","requestData","cred","res","onAuthRevoked_","onAppCheckRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","onDisconnect_1","canceled_1","connection_1","closeFn","sendRequestFn","error_1","label","nextConnectionId_","trys","all","sent","interrupt","resume","delta","serverTimeOffset","normalizedPathString","statusCode","explanation","console","replace","e_2","values","_d","queries","_e","_f","e_2_1","clientName","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","__EMPTY_NODE","KeyIndex","val","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","MAX_NODE$2","setMaxNode$1","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","nodeFromJSON$1","MAX_NODE$1","setNodeFromJSON","setMaxNode","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","_defaultIndexMap","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON","json","jsonLeaf","children_1","childrenHavePriority_1","hinzeJsonObj","childSet","sortedChildSet","node_1","childData","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","ValueIndex","VALUE_INDEX","PUSH_CHARS","MIN_PUSH_CHAR","MAX_PUSH_CHAR","MAX_KEY_LEN","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","charAt","successor","keyAsInt","i_1","source","sourcePlusOne","repeat","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","changeChildMoved","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","oldChildSnap","nextChild","getChildAfterChild","compareNext","remainsInWindow","newEventCache","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","queryParamsGetNodeFilter","queryParams","queryParamsLimitToFirst","newLimit","newParams","queryParamsLimitToLast","queryParamsStartAt","queryParamsStartAfter","queryParamsEndAt","queryParamsEndBefore","queryParamsOrderBy","queryParamsToRestQueryStringParameters","qs","orderBy","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","status_1","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","children","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForget","tree","safeToRemove","sparseSnapshotTreeForEachTree","prefixPath","func","sparseSnapshotTreeForEachChild","forEach","StatsListener","collection_","last_","newStats","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","statsReporterIncludeStat","reporter","OperationType","newOperationSourceUser","fromUser","fromServer","tagged","newOperationSourceServer","newOperationSourceServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForChanges","eventGenerator","changes","eventCache","eventRegistrations","events","moves","change","eventGeneratorGenerateEventsForType","registrations","filteredChanges","filter","eventGeneratorCompareChanges","materializedChange","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","prevName","aWrapped","bWrapped","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","emptyChildrenSingleton","EmptyChildren","ImmutableTree","fromObject","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","writeTreeChildWrites","newWriteTreeRef","writeTreeAddOverwrite","writeId","lastWriteId","allWrites","visibleWrites","writeTreeAddMerge","changedChildren","writeTreeGetWrite","record","writeTreeRemoveWrite","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","writeTreeResetTree_","writeRecord","writeTreeLayerTree_","writeTreeDefaultFilter_","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","layeredCache","mergeAtPath","writeTreeCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","merge_1","writeTreeCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcCompleteChild","writeTreeShadowingWrite","writeTreeCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeRefCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NoCompleteChildSource_","getCompleteChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","newViewProcessor","viewProcessorAssertIndexed","viewProcessor","viewProcessorApplyOperation","oldViewCache","operation","writesCache","completeCache","accumulator","filterServerNode","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","viewProcessorAckUserWrite","viewProcessorRevertUserWrite","viewProcessorListenComplete","viewProcessorMaybeAddValueEvent","isLeafOrEmpty","oldCompleteSnap","viewProcessorGenerateEventCacheAfterServerEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","newEventSnap","viewProcessorCacheHasChild","curViewCache","viewProcessorApplyMerge","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","serverChildren","View","initialViewCache","eventRegistrations_","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","viewGetServerCache","view","viewGetCompleteNode","viewGetCompleteServerCache","cache","viewIsEmpty","viewAddEventRegistration","eventRegistration","viewRemoveEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","viewGetInitialEvents","initialChanges","eventNode","referenceConstructor$1","SyncPoint","views","syncPointSetReferenceConstructor","syncPointGetReferenceConstructor","syncPointIsEmpty","syncPoint","syncPointApplyOperation","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","entries","viewQueryId","_repo","syncPointGetQueryViews","e_3","e_3_1","syncPointGetCompleteServerCache","e_4","e_4_1","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","e_5","e_5_1","referenceConstructor","syncTreeSetReferenceConstructor","syncTreeGetReferenceConstructor","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","changeTree","syncTreeAckUserWrite","needToReevaluate","affectedTree_1","syncTreeApplyServerOverwrite","syncTreeApplyServerMerge","syncTreeApplyListenComplete","syncTreeApplyTaggedListenComplete","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","op","syncTreeApplyTaggedOperation_","syncTreeRemoveEventRegistration","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","defaultTag","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","syncTreeRemoveTags_","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyTaggedQueryMerge","syncTreeAddEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","syncTreeGetNextQueryTag_","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","includeHiddenSets","syncTreeGetServerValue","serverCacheNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","splitIndex","maybeChildSyncPoint","childMap","completeView","views_1","_key","childViews","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","queries_1","childQueries","queryToStop","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","unused","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeIsEmpty","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeForEachAncestor","treeGetPath","treeUpdateChild","childEmpty","childExists","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","errorPrefix$1","validatePriority","validateEventType","validateKey","argumentName","validatePathString","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","validateBoolean","bool","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoOnServerInfoUpdate","statsReporter_","infoData_","infoSyncTree_","infoEvents","repoUpdateInfo","serverSyncTree_","repoServerTime","offsetNode","offset","repoGenerateServerValues","taggedChildren","raw","taggedSnap","repoRerunTransactions","repoInterceptServerData","repoRunOnDisconnectEvents","repoGetNextWriteId","repoGetValue","cached","err","repoLog","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoAbortTransactions","repoUpdate","childrenToMerge","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","repoOnDisconnectCancel","repoOnDisconnectSet","repoOnDisconnectSetWithPriority","repoOnDisconnectUpdate","repoAddEventCallbackForQuery","repoRemoveEventCallbackForQuery","repoInterrupt","repoResume","repoStats","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","repoStatsIncrementCounter","metric","repoStartTransaction","transactionUpdate","unwatcher","applyLocally","transaction","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","repoGetLatestState","queueNode","nodeQueue","priorityForNode","currentNode","repoSendReadyTransactions","excludeSets","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","allRun","every","repoSendTransactionQueue","setsToIgnore","txn","latestState","snapToSend","latestHash","dataToSend","pathToSend","callbacks","rootMostTransactionNode","repoGetAncestorTransactionNode","repoRerunTransactionQueue","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","to","repoAbortTransactionsOnNode","lastSent","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","segment","kv","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","hostWithoutPort","dotInd","DataEvent","snapshot","ref","getEventType","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","onCancel","hasCancelCallback","userCallback","OnDisconnect$1","OnDisconnect","cancel","wrapCallback","setWithPriority","QueryImpl","_orderByCalled","ReferenceImpl","isEqual","sameRepo","samePath","sameQueryIdentifier","toJSON","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","parentPath","DataSnapshot$1","DataSnapshot","_node","_index","childRef","exists","hasChildren","db","_checkNotDeleted","_root","refFromURL","parsedURL","thennablePushRef","pushRef","setPriority","ValueEventRegistration","callbackContext","ChildEventRegistration","eventToCheck","cancelCallbackOrListenOptions","onlyOnce","userCallback_1","onceCallback","dataSnapshot","container","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","expCallback","QueryConstraint","QueryEndAtConstraint","_value","_apply","endAt","QueryEndBeforeConstraint","endBefore","QueryStartAtConstraint","startAt","QueryStartAfterConstraint","startAfter","QueryLimitToFirstConstraint","_limit","limitToFirst","limit","QueryLimitToLastConstraint","limitToLast","QueryOrderByChildConstraint","parsedPath","orderByChild","QueryOrderByKeyConstraint","orderByKey","QueryOrderByPriorityConstraint","orderByPriority","QueryOrderByValueConstraint","orderByValue","QueryEqualToValueConstraint","equalTo","queryConstraints","queryImpl","queryConstraints_1","queryConstraints_1_1","constraint","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerApplyEmulatorSettings","tokenProvider","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","repoManagerCreateRepo","Database$1","repoManagerDeleteRepo","appName","appRepos","repoManagerForceRestClient","forceRestClient","Database","_repoInternal","_instanceStarted","_rootInternal","_delete","apiName","connectDatabaseEmulator","mockUserToken","goOffline","goOnline","SERVER_TIMESTAMP","serverTimestamp","increment","TransactionResult$1","TransactionResult","committed","runTransaction","promiseComplete","_delegate","objectToMerge","newObjectToMerge","_database","getRef","Reference","Query","database","cancelCallbackOrContext","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","once","failureCallbackOrContext","cancelOrContext","getKey","getParent","getRoot","transactionResult","expPromise","expRef","INTERNAL","useEmulator","ServerValue","TIMESTAMP","forceLongPolling","forceWebSockets","setSecurityDebugCallback","connection","statsIncrementCounter","interceptServerData","initStandalone","customAuthImpl","setComponent","instance","freeze","__proto__","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","ConnectionTarget","queryIdentifier","TEST_ACCESS","registerDatabase","registerComponent","instanceIdentifier","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports"],"sources":["C:/Users/yoges/OneDrive/Desktop/WA-Clone/WhatsappClone/node_modules/@firebase/database/dist/index.esm.js"],"sourcesContent":["import firebase from '@firebase/app';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, base64, stringToByteArray, Sha1, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, createMockUserToken, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { __spreadArray, __read, __values, __extends, __awaiter, __generator, __assign } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\n\nvar name = \"@firebase/database\";\nvar version = \"0.11.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @returns The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    };\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    var sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n    };\r\n};\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n};\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @returns {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nfunction errorForServerCode(code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n}\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */\r\nvar AppCheckTokenProvider = /** @class */ (function () {\r\n    function AppCheckTokenProvider(appName_, appCheckProvider) {\r\n        var _this = this;\r\n        this.appName_ = appName_;\r\n        this.appCheckProvider = appCheckProvider;\r\n        this.appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({ optional: true });\r\n        if (!this.appCheck) {\r\n            appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(function (appCheck) { return (_this.appCheck = appCheck); });\r\n        }\r\n    }\r\n    AppCheckTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        var _this = this;\r\n        if (!this.appCheck) {\r\n            return new Promise(function (resolve, reject) {\r\n                // Support delayed initialization of FirebaseAppCheck. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // AppCheck and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(function () {\r\n                    if (_this.appCheck) {\r\n                        _this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.appCheck.getToken(forceRefresh);\r\n    };\r\n    AppCheckTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        var _a;\r\n        (_a = this.appCheckProvider) === null || _a === void 0 ? void 0 : _a.get().then(function (appCheck) { return appCheck.addTokenListener(listener); });\r\n    };\r\n    AppCheckTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        warn(\"Provided AppCheck credentials for the app named \\\"\" + this.appName_ + \"\\\" \" +\r\n            'are invalid. This usually indicates your app was not initialized correctly.');\r\n    };\r\n    return AppCheckTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(appName_, firebaseOptions_, authProvider_) {\r\n        var _this = this;\r\n        this.appName_ = appName_;\r\n        this.firebaseOptions_ = firebaseOptions_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.onInit(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        var _this = this;\r\n        if (!this.auth_) {\r\n            return new Promise(function (resolve, reject) {\r\n                // Support delayed initialization of FirebaseAuth. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // Auth and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(function () {\r\n                    if (_this.auth_) {\r\n                        _this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.appName_ +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\r\nvar EmulatorTokenProvider = /** @class */ (function () {\r\n    function EmulatorTokenProvider(accessToken) {\r\n        this.accessToken = accessToken;\r\n    }\r\n    EmulatorTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: this.accessToken\r\n        });\r\n    };\r\n    EmulatorTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(this.accessToken);\r\n    };\r\n    EmulatorTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\r\n    EmulatorTokenProvider.OWNER = 'owner';\r\n    return EmulatorTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar APP_CHECK_TOKEN_PARAM = 'ac';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (nodeAdmin === void 0) { nodeAdmin = false; }\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this._host = host.toLowerCase();\r\n        this._domain = this._host.substr(this._host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this._host;\r\n    }\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this._domain !== 'firebaseio.com' &&\r\n            this._domain !== 'firebaseio-demo.com');\r\n    };\r\n    Object.defineProperty(RepoInfo.prototype, \"host\", {\r\n        get: function () {\r\n            return this._host;\r\n        },\r\n        set: function (newHost) {\r\n            if (newHost !== this.internalHost) {\r\n                this.internalHost = newHost;\r\n                if (this.isCacheableHost()) {\r\n                    PersistentStorage.set('host:' + this._host, this.internalHost);\r\n                }\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    RepoInfo.prototype.toURLString = function () {\r\n        var protocol = this.secure ? 'https://' : 'http://';\r\n        var query = this.includeNamespaceInQueryParams\r\n            ? \"?ns=\" + this.namespace\r\n            : '';\r\n        return \"\" + protocol + this.host + \"/\" + query;\r\n    };\r\n    return RepoInfo;\r\n}());\r\nfunction repoInfoNeedsQueryParam(repoInfo) {\r\n    return (repoInfo.host !== repoInfo.internalHost ||\r\n        repoInfo.isCustomHost() ||\r\n        repoInfo.includeNamespaceInQueryParams);\r\n}\r\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\r\nfunction repoInfoConnectionURL(repoInfo, type, params) {\r\n    assert(typeof type === 'string', 'typeof type must == string');\r\n    assert(typeof params === 'object', 'typeof params must == object');\r\n    var connURL;\r\n    if (type === WEBSOCKET) {\r\n        connURL =\r\n            (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\r\n    }\r\n    else if (type === LONG_POLLING) {\r\n        connURL =\r\n            (repoInfo.secure ? 'https://' : 'http://') +\r\n                repoInfo.internalHost +\r\n                '/.lp?';\r\n    }\r\n    else {\r\n        throw new Error('Unknown connection type: ' + type);\r\n    }\r\n    if (repoInfoNeedsQueryParam(repoInfo)) {\r\n        params['ns'] = repoInfo.namespace;\r\n    }\r\n    var pairs = [];\r\n    each(params, function (key, value) {\r\n        pairs.push(key + '=' + value);\r\n    });\r\n    return connURL + pairs.join('&');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar collections = {};\r\nvar reporters = {};\r\nfunction statsManagerGetCollection(repoInfo) {\r\n    var hashString = repoInfo.toString();\r\n    if (!collections[hashString]) {\r\n        collections[hashString] = new StatsCollection();\r\n    }\r\n    return collections[hashString];\r\n}\r\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\r\n    var hashString = repoInfo.toString();\r\n    if (!reporters[hashString]) {\r\n        reporters[hashString] = creatorFunction();\r\n    }\r\n    return reporters[hashString];\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The AppCheck token for this client.\r\n     * @param authToken The AuthToken to use for this connection.\r\n     * @param transportSessionId Optional transportSessionid if we are\r\n     * reconnecting for an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n     * already created a connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        var _this = this;\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            // Always add the token if we have one.\r\n            if (_this.appCheckToken) {\r\n                params[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\r\n            }\r\n            return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2]; _a[3]; _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (_this.appCheckToken) {\r\n                urlParams[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The App Check Token for this client.\r\n     * @param authToken The Auth Token for this client.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting\r\n     * to an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous\r\n     * connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId, appCheckToken) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        if (appCheckToken) {\r\n            urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\r\n        }\r\n        return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (isNodeSdk()) {\r\n                var device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // If using Node with admin creds, AppCheck-related checks are unnecessary.\r\n                // Note that we send the credentials here even if they aren't admin credentials, which is\r\n                // not a problem.\r\n                // Note that this header is just used to bypass appcheck, and the token should still be sent\r\n                // through the websocket connection once it is established.\r\n                if (this.authToken) {\r\n                    options.headers['Authorization'] = \"Bearer \" + this.authToken;\r\n                }\r\n                if (this.appCheckToken) {\r\n                    options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\r\n                }\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || '',\r\n                        'X-Firebase-AppCheck': this.appCheckToken || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the next transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param appCheckToken_ - The App Check Token for this device.\r\n     * @param authToken_ - The auth token for this session.\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, appCheckToken_, authToken_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.appCheckToken_ = appCheckToken_;\r\n        this.authToken_ = authToken_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, null, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param handshake - The handshake data returned from the server\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.host = host;\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.host = host;\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * Refreshes the app check token for the current connection.\r\n     * @param token The app check token\r\n     */\r\n    ServerActions.prototype.refreshAppCheckToken = function (token) { };\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = __spreadArray([], __read(this.listeners_[eventType]));\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    __extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Maximum key depth. */\r\nvar MAX_PATH_DEPTH = 32;\r\n/** Maximum number of (UTF8) bytes in a Firebase path. */\r\nvar MAX_PATH_LENGTH_BYTES = 768;\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    return Path;\r\n}());\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @returns The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    var pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    var pathString = '';\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin) {\r\n    if (begin === void 0) { begin = 0; }\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        var childPieces = childPathObj.split('/');\r\n        for (var i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @returns True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    var outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    var leftKeys = pathSlice(left, 0);\r\n    var rightKeys = pathSlice(right, 0);\r\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @returns true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    var i = path.pieceNum_;\r\n    var j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        validationPathCheckValid(this);\r\n    }\r\n    return ValidationPath;\r\n}());\r\nfunction validationPathPush(validationPath, child) {\r\n    // Count the needed '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ += 1;\r\n    }\r\n    validationPath.parts_.push(child);\r\n    validationPath.byteLength_ += stringLength(child);\r\n    validationPathCheckValid(validationPath);\r\n}\r\nfunction validationPathPop(validationPath) {\r\n    var last = validationPath.parts_.pop();\r\n    validationPath.byteLength_ -= stringLength(last);\r\n    // Un-count the previous '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ -= 1;\r\n    }\r\n}\r\nfunction validationPathCheckValid(validationPath) {\r\n    if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'has a key path longer than ' +\r\n            MAX_PATH_LENGTH_BYTES +\r\n            ' bytes (' +\r\n            validationPath.byteLength_ +\r\n            ').');\r\n    }\r\n    if (validationPath.parts_.length > MAX_PATH_DEPTH) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'path specified exceeds the maximum depth that can be written (' +\r\n            MAX_PATH_DEPTH +\r\n            ') or object contains a cycle ' +\r\n            validationPathToErrorString(validationPath));\r\n    }\r\n}\r\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\r\nfunction validationPathToErrorString(validationPath) {\r\n    if (validationPath.parts_.length === 0) {\r\n        return '';\r\n    }\r\n    return \"in property '\" + validationPath.parts_.join('.') + \"'\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    __extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    __extends(PersistentConnection, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, appCheckTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingGets_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.outstandingGetCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.appCheckToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.invalidAppCheckTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.get = function (query) {\r\n        var _this = this;\r\n        this.initConnection_();\r\n        var deferred = new Deferred();\r\n        var request = {\r\n            p: query._path.toString(),\r\n            q: query._queryObject\r\n        };\r\n        var outstandingGet = {\r\n            action: 'g',\r\n            request: request,\r\n            onComplete: function (message) {\r\n                var payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    _this.onDataUpdate_(request['p'], payload, \r\n                    /*isMerge*/ false, \r\n                    /*tag*/ null);\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        var index = this.outstandingGets_.length - 1;\r\n        if (!this.connected_) {\r\n            setTimeout(function () {\r\n                var get = _this.outstandingGets_[index];\r\n                if (get === undefined || outstandingGet !== get) {\r\n                    return;\r\n                }\r\n                delete _this.outstandingGets_[index];\r\n                _this.outstandingGetCount_--;\r\n                if (_this.outstandingGetCount_ === 0) {\r\n                    _this.outstandingGets_ = [];\r\n                }\r\n                _this.log_('get ' + index + ' timed out on connection');\r\n                deferred.reject(new Error('Client is offline.'));\r\n            }, GET_CONNECT_TIMEOUT);\r\n        }\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        this.initConnection_();\r\n        var queryId = query._queryIdentifier;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendGet_ = function (index) {\r\n        var _this = this;\r\n        var get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, function (message) {\r\n            delete _this.outstandingGets_[index];\r\n            _this.outstandingGetCount_--;\r\n            if (_this.outstandingGetCount_ === 0) {\r\n                _this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query._queryObject;\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\r\n                var indexPath = query._path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.refreshAppCheckToken = function (token) {\r\n        this.appCheckToken_ = token;\r\n        this.log_('App check token refreshed');\r\n        if (this.appCheckToken_) {\r\n            this.tryAppCheck();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us.\r\n            //If we're not connected, simply delete the credential so we dont become\r\n            // authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unappeck', {}, function () { });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given token. If the authentication\r\n     * attempt fails, it's triggered like the token was revoked (the connection is\r\n     * closed).\r\n     */\r\n    PersistentConnection.prototype.tryAppCheck = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.appCheckToken_) {\r\n            this.sendRequest('appcheck', { 'token': this.appCheckToken_ }, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (status === 'ok') {\r\n                    _this.invalidAppCheckTokenCount_ = 0;\r\n                }\r\n                else {\r\n                    _this.onAppCheckRevoked_(status, data);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        this.initConnection_();\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'apc') {\r\n            this.onAppCheckRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.initConnection_ = function () {\r\n        if (!this.realtime_ && this.firstConnection_) {\r\n            this.scheduleConnect_(0);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var onDataMessage, onReady, onDisconnect_1, connId, lastSessionId, canceled_1, connection_1, closeFn, sendRequestFn, forceRefresh, _a, authToken, appCheckToken, error_1;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!this.shouldReconnect_()) return [3 /*break*/, 4];\r\n                        this.log_('Making a connection attempt');\r\n                        this.lastConnectionAttemptTime_ = new Date().getTime();\r\n                        this.lastConnectionEstablishedTime_ = null;\r\n                        onDataMessage = this.onDataMessage_.bind(this);\r\n                        onReady = this.onReady_.bind(this);\r\n                        onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n                        connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n                        lastSessionId = this.lastSessionId;\r\n                        canceled_1 = false;\r\n                        connection_1 = null;\r\n                        closeFn = function () {\r\n                            if (connection_1) {\r\n                                connection_1.close();\r\n                            }\r\n                            else {\r\n                                canceled_1 = true;\r\n                                onDisconnect_1();\r\n                            }\r\n                        };\r\n                        sendRequestFn = function (msg) {\r\n                            assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                            connection_1.sendRequest(msg);\r\n                        };\r\n                        this.realtime_ = {\r\n                            close: closeFn,\r\n                            sendRequest: sendRequestFn\r\n                        };\r\n                        forceRefresh = this.forceTokenRefresh_;\r\n                        this.forceTokenRefresh_ = false;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this.authTokenProvider_.getToken(forceRefresh),\r\n                                this.appCheckTokenProvider_.getToken(forceRefresh)\r\n                            ])];\r\n                    case 2:\r\n                        _a = __read.apply(void 0, [_b.sent(), 2]), authToken = _a[0], appCheckToken = _a[1];\r\n                        if (!canceled_1) {\r\n                            log('getToken() completed. Creating connection.');\r\n                            this.authToken_ = authToken && authToken.accessToken;\r\n                            this.appCheckToken_ = appCheckToken && appCheckToken.token;\r\n                            connection_1 = new Connection(connId, this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, onDataMessage, onReady, onDisconnect_1, \r\n                            /* onKill= */ function (reason) {\r\n                                warn(reason + ' (' + _this.repoInfo_.toString() + ')');\r\n                                _this.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                            }, lastSessionId);\r\n                        }\r\n                        else {\r\n                            log('getToken() completed but was canceled');\r\n                        }\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_1 = _b.sent();\r\n                        this.log_('Failed to get token: ' + error_1);\r\n                        if (!canceled_1) {\r\n                            if (this.repoInfo_.nodeAdmin) {\r\n                                // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                                // But getToken() may also just have temporarily failed, so we still want to\r\n                                // continue retrying.\r\n                                warn(error_1);\r\n                            }\r\n                            closeFn();\r\n                        }\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onAppCheckRevoked_ = function (statusCode, explanation) {\r\n        log('App check token revoked: ' + statusCode + '/' + explanation);\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        // Note: We don't close the connection as the developer may not have\r\n        // enforcement enabled. The backend closes connections with enforcements.\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAppCheckTokenCount_++;\r\n            if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                this.appCheckTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        this.tryAppCheck();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (var i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    __extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @returns The minimum node in the tree.\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @returns New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @returns Newt ree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @returns True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @returns The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @returns The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE$2;\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$2 = val;\r\n}\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE$2 || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE$2 || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    LeafNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON$1;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON$1 = val;\r\n}\r\nfunction setMaxNode(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    __extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\nvar Base12Num = /** @class */ (function () {\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = __assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = __assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = safeGet(_this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    __extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nvar MAX_NODE = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode$1(MAX_NODE);\r\nsetMaxNode(MAX_NODE);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    __extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    PathIndex.prototype.toString = function () {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    __extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\nvar MIN_PUSH_CHAR = '-';\r\nvar MAX_PUSH_CHAR = 'z';\r\nvar MAX_KEY_LEN = 786;\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\r\nvar successor = function (key) {\r\n    if (key === '' + INTEGER_32_MAX) {\r\n        // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\r\n        return MIN_PUSH_CHAR;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt + 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i_1 = 0; i_1 < next.length; i_1++) {\r\n        next[i_1] = key.charAt(i_1);\r\n    }\r\n    if (next.length < MAX_KEY_LEN) {\r\n        next.push(MIN_PUSH_CHAR);\r\n        return next.join('');\r\n    }\r\n    var i = next.length - 1;\r\n    while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\r\n        i--;\r\n    }\r\n    // `successor` was called on the largest possible key, so return the\r\n    // MAX_NAME, which sorts larger than all keys.\r\n    if (i === -1) {\r\n        return MAX_NAME;\r\n    }\r\n    var source = next[i];\r\n    var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\r\n    next[i] = sourcePlusOne;\r\n    return next.slice(0, i + 1).join('');\r\n};\r\n// `key` is assumed to be non-empty.\r\nvar predecessor = function (key) {\r\n    if (key === '' + INTEGER_32_MIN) {\r\n        return MIN_NAME;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt - 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i = 0; i < next.length; i++) {\r\n        next[i] = key.charAt(i);\r\n    }\r\n    // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\r\n    // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\r\n    // than that, `predecessor(predecessor(key))`, is\r\n    //\r\n    // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\r\n    //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\r\n    //\r\n    // analogous to increment/decrement for base-10 integers.\r\n    //\r\n    // This works because lexigographic comparison works character-by-character,\r\n    // using length as a tie-breaker if one key is a prefix of the other.\r\n    if (next[next.length - 1] === MIN_PUSH_CHAR) {\r\n        if (next.length === 1) {\r\n            // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\r\n            return '' + INTEGER_32_MAX;\r\n        }\r\n        delete next[next.length - 1];\r\n        return next.join('');\r\n    }\r\n    // Replace the last character with it's immediate predecessor, and\r\n    // fill the suffix of the key with MAX_PUSH_CHAR. This is the\r\n    // lexicographically largest possible key smaller than `key`.\r\n    next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\r\n    return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* VALUE */, snapshotNode: snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* CHILD_ADDED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* CHILD_REMOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* CHILD_CHANGED */,\r\n        snapshotNode: snapshotNode,\r\n        childName: childName,\r\n        oldSnap: oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* CHILD_MOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    QueryParams.prototype.hasStartAfter = function () {\r\n        return this.startAfterSet_;\r\n    };\r\n    QueryParams.prototype.hasEndBefore = function () {\r\n        return this.endBeforeSet_;\r\n    };\r\n    /**\r\n     * @returns True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* VIEW_FROM_LEFT */;\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    QueryParams.prototype.copy = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    return QueryParams;\r\n}());\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = successor(indexValue);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        var childKey = void 0;\r\n        if (key == null) {\r\n            childKey = MAX_NAME;\r\n        }\r\n        else {\r\n            childKey = successor(key);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    var childKey;\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = predecessor(indexValue);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        if (key == null) {\r\n            childKey = MIN_NAME;\r\n        }\r\n        else {\r\n            childKey = predecessor(key);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    var newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    var qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    var orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        qs[\"startAt\" /* START_AT */] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[\"startAt\" /* START_AT */] +=\r\n                ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        qs[\"endAt\" /* END_AT */] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[\"endAt\" /* END_AT */] +=\r\n                ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    var obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* LIMIT */] = queryParams.limit_;\r\n        var viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    __extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_, appCheckTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query._path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    ReadonlyRestClient.prototype.get = function (query) {\r\n        var _this = this;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        var pathString = query._path.toString();\r\n        var deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        return Promise.all([\r\n            this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\r\n            this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\r\n        ]).then(function (_a) {\r\n            var _b = __read(_a, 2), authToken = _b[0], appCheckToken = _b[1];\r\n            if (authToken && authToken.accessToken) {\r\n                queryStringParameters['auth'] = authToken.accessToken;\r\n            }\r\n            if (appCheckToken && appCheckToken.token) {\r\n                queryStringParameters['ac'] = appCheckToken.token;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newSparseSnapshotTree() {\r\n    return {\r\n        value: null,\r\n        children: new Map()\r\n    };\r\n}\r\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\r\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = data;\r\n        sparseSnapshotTree.children.clear();\r\n    }\r\n    else if (sparseSnapshotTree.value !== null) {\r\n        sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(path);\r\n        if (!sparseSnapshotTree.children.has(childKey)) {\r\n            sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\r\n        }\r\n        var child = sparseSnapshotTree.children.get(childKey);\r\n        path = pathPopFront(path);\r\n        sparseSnapshotTreeRemember(child, path, data);\r\n    }\r\n}\r\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\r\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = null;\r\n        sparseSnapshotTree.children.clear();\r\n        return true;\r\n    }\r\n    else {\r\n        if (sparseSnapshotTree.value !== null) {\r\n            if (sparseSnapshotTree.value.isLeafNode()) {\r\n                // We're trying to forget a node that doesn't exist\r\n                return false;\r\n            }\r\n            else {\r\n                var value = sparseSnapshotTree.value;\r\n                sparseSnapshotTree.value = null;\r\n                value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                    sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\r\n                });\r\n                return sparseSnapshotTreeForget(sparseSnapshotTree, path);\r\n            }\r\n        }\r\n        else if (sparseSnapshotTree.children.size > 0) {\r\n            var childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (sparseSnapshotTree.children.has(childKey)) {\r\n                var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\r\n                if (safeToRemove) {\r\n                    sparseSnapshotTree.children.delete(childKey);\r\n                }\r\n            }\r\n            return sparseSnapshotTree.children.size === 0;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\r\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\r\n    if (sparseSnapshotTree.value !== null) {\r\n        func(prefixPath, sparseSnapshotTree.value);\r\n    }\r\n    else {\r\n        sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\r\n            var path = new Path(prefixPath.toString() + '/' + key);\r\n            sparseSnapshotTreeForEachTree(tree, path, func);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\r\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\r\n    sparseSnapshotTree.children.forEach(function (tree, key) {\r\n        func(key, tree);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = __assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nvar StatsReporter = /** @class */ (function () {\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\r\nfunction statsReporterIncludeStat(reporter, stat) {\r\n    reporter.statsToReport_[stat] = true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    };\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_._queryParams.getIndex();\r\n    }\r\n    return EventGenerator;\r\n}());\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    var events = [];\r\n    var moves = [];\r\n    changes.forEach(function (change) {\r\n        if (change.type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n    filteredChanges.sort(function (a, b) {\r\n        return eventGeneratorCompareChanges(eventGenerator, a, b);\r\n    });\r\n    filteredChanges.forEach(function (change) {\r\n        var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(function (registration) {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewCache(eventCache, serverCache) {\r\n    return { eventCache: eventCache, serverCache: serverCache };\r\n}\r\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\r\n    return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\r\n}\r\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\r\n    return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\r\n}\r\nfunction viewCacheGetCompleteEventSnap(viewCache) {\r\n    return viewCache.eventCache.isFullyInitialized()\r\n        ? viewCache.eventCache.getNode()\r\n        : null;\r\n}\r\nfunction viewCacheGetCompleteServerSnap(viewCache) {\r\n    return viewCache.serverCache.isFullyInitialized()\r\n        ? viewCache.serverCache.getNode()\r\n        : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = new ImmutableTree(null);\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(relativePath);\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @returns The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.set(pathPopFront(relativePath), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(pathPopFront(relativePath));\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(pathToFollow);\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathGetFront(pathToFollow);\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.empty = function () {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    };\r\n    return CompoundWrite;\r\n}());\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            var rootMostPath = rootmost.path;\r\n            var value = rootmost.value;\r\n            var relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            var subtree = new ImmutableTree(node);\r\n            var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    var newWrite = compoundWrite;\r\n    each(updates, function (childKey, node) {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    var children = [];\r\n    var node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\r\nfunction writeTreeChildWrites(writeTree, path) {\r\n    return newWriteTreeRef(path, writeTree);\r\n}\r\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\r\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\r\n    if (visible === undefined) {\r\n        visible = true;\r\n    }\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        snap: snap,\r\n        writeId: writeId,\r\n        visible: visible\r\n    });\r\n    if (visible) {\r\n        writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\r\n    }\r\n    writeTree.lastWriteId = writeId;\r\n}\r\n/**\r\n * Record a new merge from user code.\r\n */\r\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        children: changedChildren,\r\n        writeId: writeId,\r\n        visible: true\r\n    });\r\n    writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\r\n    writeTree.lastWriteId = writeId;\r\n}\r\nfunction writeTreeGetWrite(writeTree, writeId) {\r\n    for (var i = 0; i < writeTree.allWrites.length; i++) {\r\n        var record = writeTree.allWrites[i];\r\n        if (record.writeId === writeId) {\r\n            return record;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\r\nfunction writeTreeRemoveWrite(writeTree, writeId) {\r\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n    // out of order.\r\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n    var idx = writeTree.allWrites.findIndex(function (s) {\r\n        return s.writeId === writeId;\r\n    });\r\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n    var writeToRemove = writeTree.allWrites[idx];\r\n    writeTree.allWrites.splice(idx, 1);\r\n    var removedWriteWasVisible = writeToRemove.visible;\r\n    var removedWriteOverlapsWithOtherWrites = false;\r\n    var i = writeTree.allWrites.length - 1;\r\n    while (removedWriteWasVisible && i >= 0) {\r\n        var currentWrite = writeTree.allWrites[i];\r\n        if (currentWrite.visible) {\r\n            if (i >= idx &&\r\n                writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                // The removed write was completely shadowed by a subsequent write.\r\n                removedWriteWasVisible = false;\r\n            }\r\n            else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                removedWriteOverlapsWithOtherWrites = true;\r\n            }\r\n        }\r\n        i--;\r\n    }\r\n    if (!removedWriteWasVisible) {\r\n        return false;\r\n    }\r\n    else if (removedWriteOverlapsWithOtherWrites) {\r\n        // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n        writeTreeResetTree_(writeTree);\r\n        return true;\r\n    }\r\n    else {\r\n        // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n        if (writeToRemove.snap) {\r\n            writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\r\n        }\r\n        else {\r\n            var children = writeToRemove.children;\r\n            each(children, function (childName) {\r\n                writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\r\n    if (writeRecord.snap) {\r\n        return pathContains(writeRecord.path, path);\r\n    }\r\n    else {\r\n        for (var childName in writeRecord.children) {\r\n            if (writeRecord.children.hasOwnProperty(childName) &&\r\n                pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\r\nfunction writeTreeResetTree_(writeTree) {\r\n    writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\r\n    if (writeTree.allWrites.length > 0) {\r\n        writeTree.lastWriteId =\r\n            writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\r\n    }\r\n    else {\r\n        writeTree.lastWriteId = -1;\r\n    }\r\n}\r\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\r\nfunction writeTreeDefaultFilter_(write) {\r\n    return write.visible;\r\n}\r\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\r\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\r\n    var compoundWrite = CompoundWrite.empty();\r\n    for (var i = 0; i < writes.length; ++i) {\r\n        var write = writes[i];\r\n        // Theory, a later set will either:\r\n        // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n        // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n        if (filter(write)) {\r\n            var writePath = write.path;\r\n            var relativePath = void 0;\r\n            if (write.snap) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                }\r\n                else ;\r\n            }\r\n            else if (write.children) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    if (pathIsEmpty(relativePath)) {\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                    }\r\n                    else {\r\n                        var child = safeGet(write.children, pathGetFront(relativePath));\r\n                        if (child) {\r\n                            // There exists a child in this node that matches the root path\r\n                            var deepNode = child.getChild(pathPopFront(relativePath));\r\n                            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                        }\r\n                    }\r\n                }\r\n                else ;\r\n            }\r\n            else {\r\n                throw assertionError('WriteRecord should have .snap or .children');\r\n            }\r\n        }\r\n    }\r\n    return compoundWrite;\r\n}\r\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    if (!writeIdsToExclude && !includeHiddenWrites) {\r\n        var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n            if (compoundWriteIsEmpty(subMerge)) {\r\n                return completeServerCache;\r\n            }\r\n            else if (completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                return null;\r\n            }\r\n            else {\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(subMerge, layeredCache);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n            return completeServerCache;\r\n        }\r\n        else {\r\n            // If the server cache is null, and we don't have a complete cache, we need to return null\r\n            if (!includeHiddenWrites &&\r\n                completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                return null;\r\n            }\r\n            else {\r\n                var filter = function (write) {\r\n                    return ((write.visible || includeHiddenWrites) &&\r\n                        (!writeIdsToExclude ||\r\n                            !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                        (pathContains(write.path, treePath) ||\r\n                            pathContains(treePath, write.path)));\r\n                };\r\n                var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(mergeAtPath, layeredCache);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\r\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\r\n    var completeChildren = ChildrenNode.EMPTY_NODE;\r\n    var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n    if (topLevelSet) {\r\n        if (!topLevelSet.isLeafNode()) {\r\n            // we're shadowing everything. Return the children.\r\n            topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n            });\r\n        }\r\n        return completeChildren;\r\n    }\r\n    else if (completeServerChildren) {\r\n        // Layer any children we have on top of this\r\n        // We know we don't have a top-level set, so just enumerate existing children\r\n        var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\r\n            completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n        });\r\n        // Add any complete children we have from the set\r\n        compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n    else {\r\n        // We don't have anything to layer on top of. Layer on any children we have\r\n        // Note that we can return an empty snap if we have a defined delete\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n}\r\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\r\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\r\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n    var path = pathChild(treePath, childPath);\r\n    if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\r\n        // At this point we can probably guarantee that we're in case 2, meaning no events\r\n        // May need to check visibility while doing the findRootMostValueAndPath call\r\n        return null;\r\n    }\r\n    else {\r\n        // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n        var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n        if (compoundWriteIsEmpty(childMerge)) {\r\n            // We're not shadowing at all. Case 1\r\n            return existingServerSnap.getChild(childPath);\r\n        }\r\n        else {\r\n            // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n            // However this is tricky to find out, since user updates don't necessary change the server\r\n            // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n            // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n            // only check if the updates change the serverNode.\r\n            // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n            return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\r\n    var path = pathChild(treePath, childKey);\r\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n    if (shadowingNode != null) {\r\n        return shadowingNode;\r\n    }\r\n    else {\r\n        if (existingServerSnap.isCompleteForChild(childKey)) {\r\n            var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n            return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\r\nfunction writeTreeShadowingWrite(writeTree, path) {\r\n    return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\r\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\r\n    var toIterate;\r\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n    var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n    if (shadowingNode != null) {\r\n        toIterate = shadowingNode;\r\n    }\r\n    else if (completeServerData != null) {\r\n        toIterate = compoundWriteApply(merge, completeServerData);\r\n    }\r\n    else {\r\n        // no children to iterate on\r\n        return [];\r\n    }\r\n    toIterate = toIterate.withIndex(index);\r\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n        var nodes = [];\r\n        var cmp = index.getCompare();\r\n        var iter = reverse\r\n            ? toIterate.getReverseIteratorFrom(startPost, index)\r\n            : toIterate.getIteratorFrom(startPost, index);\r\n        var next = iter.getNext();\r\n        while (next && nodes.length < count) {\r\n            if (cmp(next, startPost) !== 0) {\r\n                nodes.push(next);\r\n            }\r\n            next = iter.getNext();\r\n        }\r\n        return nodes;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction newWriteTree() {\r\n    return {\r\n        visibleWrites: CompoundWrite.empty(),\r\n        allWrites: [],\r\n        lastWriteId: -1\r\n    };\r\n}\r\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n}\r\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\r\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\r\n    return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\r\n}\r\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\r\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\r\n    return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\r\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\r\n    return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\r\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\r\n    return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\r\n    return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\r\n}\r\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\r\nfunction writeTreeRefChild(writeTreeRef, childName) {\r\n    return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\r\n}\r\nfunction newWriteTreeRef(path, writeTree) {\r\n    return {\r\n        treePath: path,\r\n        writeTree: writeTree\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        assert(type === \"child_added\" /* CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === \"child_added\" /* CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    };\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewProcessor(filter) {\r\n    return { filter: filter };\r\n}\r\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\r\n    assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\r\n    assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\r\n}\r\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\r\n    var accumulator = new ChildChangeAccumulator();\r\n    var newViewCache, filterServerNode;\r\n    if (operation.type === OperationType.OVERWRITE) {\r\n        var overwrite = operation;\r\n        if (overwrite.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(overwrite.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n            // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n            // again\r\n            filterServerNode =\r\n                overwrite.source.tagged ||\r\n                    (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\r\n            newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.MERGE) {\r\n        var merge = operation;\r\n        if (merge.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(merge.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered\r\n            filterServerNode =\r\n                merge.source.tagged || oldViewCache.serverCache.isFiltered();\r\n            newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n        var ackUserWrite = operation;\r\n        if (!ackUserWrite.revert) {\r\n            newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n        newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\r\n    }\r\n    else {\r\n        throw assertionError('Unknown operation type: ' + operation.type);\r\n    }\r\n    var changes = accumulator.getChanges();\r\n    viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\r\n    return { viewCache: newViewCache, changes: changes };\r\n}\r\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\r\n    var eventSnap = newViewCache.eventCache;\r\n    if (eventSnap.isFullyInitialized()) {\r\n        var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n        var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\r\n        if (accumulator.length > 0 ||\r\n            !oldViewCache.eventCache.isFullyInitialized() ||\r\n            (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n            !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n            accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\r\n        }\r\n    }\r\n}\r\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\r\n    var oldEventSnap = viewCache.eventCache;\r\n    if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\r\n        // we have a shadowing write, ignore changes\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var newEventCache = void 0, serverNode = void 0;\r\n        if (pathIsEmpty(changePath)) {\r\n            // TODO: figure out how this plays with \"sliding ack windows\"\r\n            assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n            if (viewCache.serverCache.isFiltered()) {\r\n                // We need to special case this, because we need to only apply writes to complete children, or\r\n                // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                // writes cannot be guaranteed to be complete\r\n                var serverCache = viewCacheGetCompleteServerSnap(viewCache);\r\n                var completeChildren = serverCache instanceof ChildrenNode\r\n                    ? serverCache\r\n                    : ChildrenNode.EMPTY_NODE;\r\n                var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\r\n            }\r\n            else {\r\n                var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\r\n            }\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                var oldEventNode = oldEventSnap.getNode();\r\n                serverNode = viewCache.serverCache.getNode();\r\n                // we might have overwrites for this priority\r\n                var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\r\n                if (updatedPriority != null) {\r\n                    newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\r\n                }\r\n                else {\r\n                    // priority didn't change, keep old node\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n            else {\r\n                var childChangePath = pathPopFront(changePath);\r\n                // update child\r\n                var newEventChild = void 0;\r\n                if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                    serverNode = viewCache.serverCache.getNode();\r\n                    var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\r\n                    if (eventChildUpdate != null) {\r\n                        newEventChild = oldEventSnap\r\n                            .getNode()\r\n                            .getImmediateChild(childKey)\r\n                            .updateChild(childChangePath, eventChildUpdate);\r\n                    }\r\n                    else {\r\n                        // Nothing changed, just keep the old child\r\n                        newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                    }\r\n                }\r\n                else {\r\n                    newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n                }\r\n                if (newEventChild != null) {\r\n                    newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                }\r\n                else {\r\n                    // no complete child available or no change\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n        }\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\r\n    }\r\n}\r\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n    var oldServerSnap = oldViewCache.serverCache;\r\n    var newServerCache;\r\n    var serverFilter = filterServerNode\r\n        ? viewProcessor.filter\r\n        : viewProcessor.filter.getIndexedFilter();\r\n    if (pathIsEmpty(changePath)) {\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n    }\r\n    else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n        // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n        var newServerNode = oldServerSnap\r\n            .getNode()\r\n            .updateChild(changePath, changedSnap);\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n            pathGetLength(changePath) > 1) {\r\n            // We don't update incomplete nodes with updates intended for other listeners\r\n            return oldViewCache;\r\n        }\r\n        var childChangePath = pathPopFront(changePath);\r\n        var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n        var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n        if (childKey === '.priority') {\r\n            newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n        }\r\n        else {\r\n            newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n        }\r\n    }\r\n    var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\r\n}\r\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n    var oldEventSnap = oldViewCache.eventCache;\r\n    var newViewCache, newEventCache;\r\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n    if (pathIsEmpty(changePath)) {\r\n        newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\r\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (childKey === '.priority') {\r\n            newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\r\n            newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n        }\r\n        else {\r\n            var childChangePath = pathPopFront(changePath);\r\n            var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n            var newChild = void 0;\r\n            if (pathIsEmpty(childChangePath)) {\r\n                // Child overwrite, we can replace the child\r\n                newChild = changedSnap;\r\n            }\r\n            else {\r\n                var childNode = source.getCompleteChild(childKey);\r\n                if (childNode != null) {\r\n                    if (pathGetBack(childChangePath) === '.priority' &&\r\n                        childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                        // This is a priority update on an empty node. If this node exists on the server, the\r\n                        // server will send down the priority in the update, so ignore for now\r\n                        newChild = childNode;\r\n                    }\r\n                    else {\r\n                        newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                    }\r\n                }\r\n                else {\r\n                    // There is no complete child node available\r\n                    newChild = ChildrenNode.EMPTY_NODE;\r\n                }\r\n            }\r\n            if (!oldChild.equals(newChild)) {\r\n                var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\r\n            }\r\n            else {\r\n                newViewCache = oldViewCache;\r\n            }\r\n        }\r\n    }\r\n    return newViewCache;\r\n}\r\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\r\n    return viewCache.eventCache.isCompleteForChild(childKey);\r\n}\r\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\r\n    merge.foreach(function (relativePath, childNode) {\r\n        node = node.updateChild(relativePath, childNode);\r\n    });\r\n    return node;\r\n}\r\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n    // wait for the complete data update coming soon.\r\n    if (viewCache.serverCache.getNode().isEmpty() &&\r\n        !viewCache.serverCache.isFullyInitialized()) {\r\n        return viewCache;\r\n    }\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    var viewMergeTree;\r\n    if (pathIsEmpty(path)) {\r\n        viewMergeTree = changedChildren;\r\n    }\r\n    else {\r\n        viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n    }\r\n    var serverNode = viewCache.serverCache.getNode();\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n        if (serverNode.hasChild(childKey)) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n        var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) &&\r\n            childMergeTree.value === undefined;\r\n        if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n    if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\r\n        return viewCache;\r\n    }\r\n    // Only filter server node if it is currently filtered\r\n    var filterServerNode = viewCache.serverCache.isFiltered();\r\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n    // now that it won't be shadowed.\r\n    var serverCache = viewCache.serverCache;\r\n    if (affectedTree.value != null) {\r\n        // This is an overwrite.\r\n        if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n            serverCache.isCompleteForPath(ackPath)) {\r\n            return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else if (pathIsEmpty(ackPath)) {\r\n            // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n            // should just re-apply whatever we have in our cache as a merge.\r\n            var changedChildren_1 = new ImmutableTree(null);\r\n            serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n            });\r\n            return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else {\r\n            return viewCache;\r\n        }\r\n    }\r\n    else {\r\n        // This is a merge.\r\n        var changedChildren_2 = new ImmutableTree(null);\r\n        affectedTree.foreach(function (mergePath, value) {\r\n            var serverCachePath = pathChild(ackPath, mergePath);\r\n            if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n            }\r\n        });\r\n        return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n    }\r\n}\r\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\r\n    var oldServerNode = viewCache.serverCache;\r\n    var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n}\r\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\r\n    var complete;\r\n    if (writeTreeRefShadowingWrite(writesCache, path) != null) {\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n        var oldEventCache = viewCache.eventCache.getNode();\r\n        var newEventCache = void 0;\r\n        if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n            var newNode = void 0;\r\n            if (viewCache.serverCache.isFullyInitialized()) {\r\n                newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n            }\r\n            else {\r\n                var serverChildren = viewCache.serverCache.getNode();\r\n                assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\r\n            }\r\n            newNode = newNode;\r\n            newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(path);\r\n            var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n            if (newChild == null &&\r\n                viewCache.serverCache.isCompleteForChild(childKey)) {\r\n                newChild = oldEventCache.getImmediateChild(childKey);\r\n            }\r\n            if (newChild != null) {\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n            }\r\n            else if (viewCache.eventCache.getNode().hasChild(childKey)) {\r\n                // No complete child available, delete the existing one, if any\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n            }\r\n            else {\r\n                newEventCache = oldEventCache;\r\n            }\r\n            if (newEventCache.isEmpty() &&\r\n                viewCache.serverCache.isFullyInitialized()) {\r\n                // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                if (complete.isLeafNode()) {\r\n                    newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\r\n                }\r\n            }\r\n        }\r\n        complete =\r\n            viewCache.serverCache.isFullyInitialized() ||\r\n                writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nvar View = /** @class */ (function () {\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_._queryParams;\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = newViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.serverCache;\r\n        var initialEventCache = initialViewCache.eventCache;\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = newViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    Object.defineProperty(View.prototype, \"query\", {\r\n        get: function () {\r\n            return this.query_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return View;\r\n}());\r\nfunction viewGetServerCache(view) {\r\n    return view.viewCache_.serverCache.getNode();\r\n}\r\nfunction viewGetCompleteNode(view) {\r\n    return viewCacheGetCompleteEventSnap(view.viewCache_);\r\n}\r\nfunction viewGetCompleteServerCache(view, path) {\r\n    var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\r\n    if (cache) {\r\n        // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n        // we need to see if it contains the child we're interested in.\r\n        if (view.query._queryParams.loadsAllData() ||\r\n            (!pathIsEmpty(path) &&\r\n                !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n            return cache.getChild(path);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction viewIsEmpty(view) {\r\n    return view.eventRegistrations_.length === 0;\r\n}\r\nfunction viewAddEventRegistration(view, eventRegistration) {\r\n    view.eventRegistrations_.push(eventRegistration);\r\n}\r\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\r\n    var cancelEvents = [];\r\n    if (cancelError) {\r\n        assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n        var path_1 = view.query._path;\r\n        view.eventRegistrations_.forEach(function (registration) {\r\n            var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n            if (maybeEvent) {\r\n                cancelEvents.push(maybeEvent);\r\n            }\r\n        });\r\n    }\r\n    if (eventRegistration) {\r\n        var remaining = [];\r\n        for (var i = 0; i < view.eventRegistrations_.length; ++i) {\r\n            var existing = view.eventRegistrations_[i];\r\n            if (!existing.matches(eventRegistration)) {\r\n                remaining.push(existing);\r\n            }\r\n            else if (eventRegistration.hasAnyCallback()) {\r\n                // We're removing just this one\r\n                remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        view.eventRegistrations_ = remaining;\r\n    }\r\n    else {\r\n        view.eventRegistrations_ = [];\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\r\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\r\n    if (operation.type === OperationType.MERGE &&\r\n        operation.source.queryId !== null) {\r\n        assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\r\n        assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\r\n    }\r\n    var oldViewCache = view.viewCache_;\r\n    var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\r\n    viewProcessorAssertIndexed(view.processor_, result.viewCache);\r\n    assert(result.viewCache.serverCache.isFullyInitialized() ||\r\n        !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n    view.viewCache_ = result.viewCache;\r\n    return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\r\n}\r\nfunction viewGetInitialEvents(view, registration) {\r\n    var eventSnap = view.viewCache_.eventCache;\r\n    var initialChanges = [];\r\n    if (!eventSnap.getNode().isLeafNode()) {\r\n        var eventNode = eventSnap.getNode();\r\n        eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            initialChanges.push(changeChildAdded(key, childNode));\r\n        });\r\n    }\r\n    if (eventSnap.isFullyInitialized()) {\r\n        initialChanges.push(changeValue(eventSnap.getNode()));\r\n    }\r\n    return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\r\n}\r\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\r\n    var registrations = eventRegistration\r\n        ? [eventRegistration]\r\n        : view.eventRegistrations_;\r\n    return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    return SyncPoint;\r\n}());\r\nfunction syncPointSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\r\n    referenceConstructor$1 = val;\r\n}\r\nfunction syncPointGetReferenceConstructor() {\r\n    assert(referenceConstructor$1, 'Reference.ts has not been loaded');\r\n    return referenceConstructor$1;\r\n}\r\nfunction syncPointIsEmpty(syncPoint) {\r\n    return syncPoint.views.size === 0;\r\n}\r\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\r\n    var e_1, _a;\r\n    var queryId = operation.source.queryId;\r\n    if (queryId !== null) {\r\n        var view = syncPoint.views.get(queryId);\r\n        assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n        return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\r\n    }\r\n    else {\r\n        var events = [];\r\n        try {\r\n            for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\r\n    var queryId = query._queryIdentifier;\r\n    var view = syncPoint.views.get(queryId);\r\n    if (!view) {\r\n        // TODO: make writesCache take flag for complete server node\r\n        var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\r\n        var eventCacheComplete = false;\r\n        if (eventCache) {\r\n            eventCacheComplete = true;\r\n        }\r\n        else if (serverCache instanceof ChildrenNode) {\r\n            eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\r\n            eventCacheComplete = false;\r\n        }\r\n        else {\r\n            eventCache = ChildrenNode.EMPTY_NODE;\r\n            eventCacheComplete = false;\r\n        }\r\n        var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n        return new View(query, viewCache);\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\r\n    if (!syncPoint.views.has(query._queryIdentifier)) {\r\n        syncPoint.views.set(query._queryIdentifier, view);\r\n    }\r\n    // This is guaranteed to exist now, we just created anything that was missing\r\n    viewAddEventRegistration(view, eventRegistration);\r\n    return viewGetInitialEvents(view, eventRegistration);\r\n}\r\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\r\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\r\n    var e_2, _a;\r\n    var queryId = query._queryIdentifier;\r\n    var removed = [];\r\n    var cancelEvents = [];\r\n    var hadCompleteView = syncPointHasCompleteView(syncPoint);\r\n    if (queryId === 'default') {\r\n        try {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n                if (viewIsEmpty(view)) {\r\n                    syncPoint.views.delete(viewQueryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.query._queryParams.loadsAllData()) {\r\n                        removed.push(view.query);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n    }\r\n    else {\r\n        // remove the callback from the specific view.\r\n        var view = syncPoint.views.get(queryId);\r\n        if (view) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(queryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\r\n        // We removed our last complete view.\r\n        removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\r\n    }\r\n    return { removed: removed, events: cancelEvents };\r\n}\r\nfunction syncPointGetQueryViews(syncPoint) {\r\n    var e_3, _a;\r\n    var result = [];\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (!view.query._queryParams.loadsAllData()) {\r\n                result.push(view);\r\n            }\r\n        }\r\n    }\r\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_3) throw e_3.error; }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\r\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\r\n    var e_4, _a;\r\n    var serverCache = null;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            serverCache = serverCache || viewGetCompleteServerCache(view, path);\r\n        }\r\n    }\r\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_4) throw e_4.error; }\r\n    }\r\n    return serverCache;\r\n}\r\nfunction syncPointViewForQuery(syncPoint, query) {\r\n    var params = query._queryParams;\r\n    if (params.loadsAllData()) {\r\n        return syncPointGetCompleteView(syncPoint);\r\n    }\r\n    else {\r\n        var queryId = query._queryIdentifier;\r\n        return syncPoint.views.get(queryId);\r\n    }\r\n}\r\nfunction syncPointViewExistsForQuery(syncPoint, query) {\r\n    return syncPointViewForQuery(syncPoint, query) != null;\r\n}\r\nfunction syncPointHasCompleteView(syncPoint) {\r\n    return syncPointGetCompleteView(syncPoint) != null;\r\n}\r\nfunction syncPointGetCompleteView(syncPoint) {\r\n    var e_5, _a;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (view.query._queryParams.loadsAllData()) {\r\n                return view;\r\n            }\r\n        }\r\n    }\r\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_5) throw e_5.error; }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor;\r\nfunction syncTreeSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor, '__referenceConstructor has already been defined');\r\n    referenceConstructor = val;\r\n}\r\nfunction syncTreeGetReferenceConstructor() {\r\n    assert(referenceConstructor, 'Reference.ts has not been loaded');\r\n    return referenceConstructor;\r\n}\r\n/**\r\n * Static tracker for next query tag.\r\n */\r\nvar syncTreeNextQueryTag_ = 1;\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = newWriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    return SyncTree;\r\n}());\r\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\r\n    // Record pending write.\r\n    writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\r\n    if (!visible) {\r\n        return [];\r\n    }\r\n    else {\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\r\n    }\r\n}\r\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\r\n    // Record pending merge.\r\n    writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\r\n}\r\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\r\n    if (revert === void 0) { revert = false; }\r\n    var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\r\n    var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\r\n    if (!needToReevaluate) {\r\n        return [];\r\n    }\r\n    else {\r\n        var affectedTree_1 = new ImmutableTree(null);\r\n        if (write.snap != null) {\r\n            // overwrite\r\n            affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\r\n        }\r\n        else {\r\n            each(write.children, function (pathString) {\r\n                affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\r\n            });\r\n        }\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\r\n    }\r\n}\r\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\r\n}\r\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\r\n}\r\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyListenComplete(syncTree, path) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\r\n}\r\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\r\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n    var path = query._path;\r\n    var maybeSyncPoint = syncTree.syncPointTree_.get(path);\r\n    var cancelEvents = [];\r\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n    // not loadsAllData().\r\n    if (maybeSyncPoint &&\r\n        (query._queryIdentifier === 'default' ||\r\n            syncPointViewExistsForQuery(maybeSyncPoint, query))) {\r\n        var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\r\n        if (syncPointIsEmpty(maybeSyncPoint)) {\r\n            syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\r\n        }\r\n        var removed = removedAndEvents.removed;\r\n        cancelEvents = removedAndEvents.events;\r\n        // We may have just removed one of many listeners and can short-circuit this whole process\r\n        // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n        // properly set up.\r\n        //\r\n        // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n        // queryId === 'default'\r\n        var removingDefault = -1 !==\r\n            removed.findIndex(function (query) {\r\n                return query._queryParams.loadsAllData();\r\n            });\r\n        var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n            return syncPointHasCompleteView(parentSyncPoint);\r\n        });\r\n        if (removingDefault && !covered) {\r\n            var subtree = syncTree.syncPointTree_.subtree(path);\r\n            // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n            // removal\r\n            if (!subtree.isEmpty()) {\r\n                // We need to fold over our subtree and collect the listeners to send\r\n                var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\r\n                // Ok, we've collected all the listens we need. Set them up.\r\n                for (var i = 0; i < newViews.length; ++i) {\r\n                    var view = newViews[i], newQuery = view.query;\r\n                    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n                    syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\r\n                }\r\n            }\r\n        }\r\n        // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n        // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n        // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n        if (!covered && removed.length > 0 && !cancelError) {\r\n            // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n            // default. Otherwise, we need to iterate through and cancel each individual query\r\n            if (removingDefault) {\r\n                // We don't tag default listeners\r\n                var defaultTag = null;\r\n                syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\r\n            }\r\n            else {\r\n                removed.forEach(function (queryToRemove) {\r\n                    var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\r\n                    syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\r\n                });\r\n            }\r\n        }\r\n        // Now, clear all of the tags we're tracking for the removed listens\r\n        syncTreeRemoveTags_(syncTree, removed);\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey != null) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // Query must have been removed already\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    var foundAncestorDefaultView = false;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(sp);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete;\r\n    if (serverCache != null) {\r\n        serverCacheComplete = true;\r\n    }\r\n    else {\r\n        serverCacheComplete = false;\r\n        serverCache = ChildrenNode.EMPTY_NODE;\r\n        var subtree = syncTree.syncPointTree_.subtree(path);\r\n        subtree.foreachChild(function (childName, childSyncPoint) {\r\n            var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\r\n            if (completeCache) {\r\n                serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n            }\r\n        });\r\n    }\r\n    var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\r\n    if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\r\n        // We need to track a tag for this query\r\n        var queryKey = syncTreeMakeQueryKey_(query);\r\n        assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n        var tag = syncTreeGetNextQueryTag_();\r\n        syncTree.queryToTagMap.set(queryKey, tag);\r\n        syncTree.tagToQueryMap.set(tag, queryKey);\r\n    }\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\r\n    var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n        var view = syncPointViewForQuery(syncPoint, query);\r\n        events = events.concat(syncTreeSetupListener_(syncTree, query, view));\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\r\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\r\n    var includeHiddenSets = true;\r\n    var writeTree = syncTree.pendingWriteTree_;\r\n    var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n        var relativePath = newRelativePath(pathSoFar, path);\r\n        var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\r\n        if (serverCache) {\r\n            return serverCache;\r\n        }\r\n    });\r\n    return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n}\r\nfunction syncTreeGetServerValue(syncTree, query) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete = serverCache != null;\r\n    var serverCacheNode = serverCacheComplete\r\n        ? new CacheNode(serverCache, true, false)\r\n        : null;\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n    return viewGetCompleteNode(view);\r\n}\r\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\r\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\r\n    return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, \r\n    /*serverCache=*/ null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    if (pathIsEmpty(operation.path)) {\r\n        return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n    }\r\n    else {\r\n        var syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n        }\r\n        var events = [];\r\n        var childName = pathGetFront(operation.path);\r\n        var childOperation = operation.operationForChild(childName);\r\n        var childTree = syncPointTree.children.get(childName);\r\n        if (childTree && childOperation) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n            events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n        if (syncPoint) {\r\n            events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    var syncPoint = syncPointTree.get(newEmptyPath());\r\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n    if (serverCache == null && syncPoint != null) {\r\n        serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var events = [];\r\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n        var childServerCache = serverCache\r\n            ? serverCache.getImmediateChild(childName)\r\n            : null;\r\n        var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n        var childOperation = operation.operationForChild(childName);\r\n        if (childOperation) {\r\n            events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n    });\r\n    if (syncPoint) {\r\n        events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n    }\r\n    return events;\r\n}\r\nfunction syncTreeCreateListenerForView_(syncTree, view) {\r\n    var query = view.query;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    return {\r\n        hashFn: function () {\r\n            var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\r\n            return cache.hash();\r\n        },\r\n        onComplete: function (status) {\r\n            if (status === 'ok') {\r\n                if (tag) {\r\n                    return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\r\n                }\r\n                else {\r\n                    return syncTreeApplyListenComplete(syncTree, query._path);\r\n                }\r\n            }\r\n            else {\r\n                // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                var error = errorForServerCode(status, query);\r\n                return syncTreeRemoveEventRegistration(syncTree, query, \r\n                /*eventRegistration*/ null, error);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Return the tag associated with the given query.\r\n */\r\nfunction syncTreeTagForQuery_(syncTree, query) {\r\n    var queryKey = syncTreeMakeQueryKey_(query);\r\n    return syncTree.queryToTagMap.get(queryKey);\r\n}\r\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\r\nfunction syncTreeMakeQueryKey_(query) {\r\n    return query._path.toString() + '$' + query._queryIdentifier;\r\n}\r\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\r\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\r\n    return syncTree.tagToQueryMap.get(tag);\r\n}\r\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\r\nfunction syncTreeParseQueryKey_(queryKey) {\r\n    var splitIndex = queryKey.indexOf('$');\r\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n    return {\r\n        queryId: queryKey.substr(splitIndex + 1),\r\n        path: new Path(queryKey.substr(0, splitIndex))\r\n    };\r\n}\r\n/**\r\n * A helper method to apply tagged operations\r\n */\r\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\r\n    var syncPoint = syncTree.syncPointTree_.get(queryPath);\r\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\r\n    return syncPointApplyOperation(syncPoint, operation, writesCache, null);\r\n}\r\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\r\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\r\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n        if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n            var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\r\n            return [completeView];\r\n        }\r\n        else {\r\n            // No complete view here, flatten any deeper listens into an array\r\n            var views_1 = [];\r\n            if (maybeChildSyncPoint) {\r\n                views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\r\n            }\r\n            each(childMap, function (_key, childViews) {\r\n                views_1 = views_1.concat(childViews);\r\n            });\r\n            return views_1;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\r\nfunction syncTreeQueryForListening_(query) {\r\n    if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\r\n        // We treat queries that load all data as default queries\r\n        // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n        // from Query\r\n        return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\r\n    }\r\n    else {\r\n        return query;\r\n    }\r\n}\r\nfunction syncTreeRemoveTags_(syncTree, queries) {\r\n    for (var j = 0; j < queries.length; ++j) {\r\n        var removedQuery = queries[j];\r\n        if (!removedQuery._queryParams.loadsAllData()) {\r\n            // We should have a tag for this\r\n            var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\r\n            var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\r\n            syncTree.queryToTagMap.delete(removedQueryKey);\r\n            syncTree.tagToQueryMap.delete(removedQueryTag);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Static accessor for query tags.\r\n */\r\nfunction syncTreeGetNextQueryTag_() {\r\n    return syncTreeNextQueryTag_++;\r\n}\r\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\r\nfunction syncTreeSetupListener_(syncTree, query, view) {\r\n    var path = query._path;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n    var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n    var subtree = syncTree.syncPointTree_.subtree(path);\r\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n    // may need to shadow other listens as well.\r\n    if (tag) {\r\n        assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\r\n    }\r\n    else {\r\n        // Shadow everything at or below this location, this is a default listener.\r\n        var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (!pathIsEmpty(relativePath) &&\r\n                maybeChildSyncPoint &&\r\n                syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n                return [syncPointGetCompleteView(maybeChildSyncPoint).query];\r\n            }\r\n            else {\r\n                // No default listener here, flatten any deeper queries into an array\r\n                var queries_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) { return view.query; }));\r\n                }\r\n                each(childMap, function (_key, childQueries) {\r\n                    queries_1 = queries_1.concat(childQueries);\r\n                });\r\n                return queries_1;\r\n            }\r\n        });\r\n        for (var i = 0; i < queriesToStop.length; ++i) {\r\n            var queryToStop = queriesToStop[i];\r\n            syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\r\n        }\r\n    }\r\n    return events;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */\r\n    function Tree(name, parent, node) {\r\n        if (name === void 0) { name = ''; }\r\n        if (parent === void 0) { parent = null; }\r\n        if (node === void 0) { node = { children: {}, childCount: 0 }; }\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n    return Tree;\r\n}());\r\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\r\nfunction treeSubTree(tree, pathObj) {\r\n    // TODO: Require pathObj to be Path?\r\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n    var child = tree, next = pathGetFront(path);\r\n    while (next !== null) {\r\n        var childNode = safeGet(child.node.children, next) || {\r\n            children: {},\r\n            childCount: 0\r\n        };\r\n        child = new Tree(next, child, childNode);\r\n        path = pathPopFront(path);\r\n        next = pathGetFront(path);\r\n    }\r\n    return child;\r\n}\r\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\r\nfunction treeGetValue(tree) {\r\n    return tree.node.value;\r\n}\r\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\r\nfunction treeSetValue(tree, value) {\r\n    tree.node.value = value;\r\n    treeUpdateParents(tree);\r\n}\r\n/**\r\n * @returns Whether the tree has any children.\r\n */\r\nfunction treeHasChildren(tree) {\r\n    return tree.node.childCount > 0;\r\n}\r\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\r\nfunction treeIsEmpty(tree) {\r\n    return treeGetValue(tree) === undefined && !treeHasChildren(tree);\r\n}\r\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\r\nfunction treeForEachChild(tree, action) {\r\n    each(tree.node.children, function (child, childTree) {\r\n        action(new Tree(child, tree, childTree));\r\n    });\r\n}\r\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\r\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\r\n    if (includeSelf && !childrenFirst) {\r\n        action(tree);\r\n    }\r\n    treeForEachChild(tree, function (child) {\r\n        treeForEachDescendant(child, action, true, childrenFirst);\r\n    });\r\n    if (includeSelf && childrenFirst) {\r\n        action(tree);\r\n    }\r\n}\r\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\r\nfunction treeForEachAncestor(tree, action, includeSelf) {\r\n    var node = includeSelf ? tree : tree.parent;\r\n    while (node !== null) {\r\n        if (action(node)) {\r\n            return true;\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\r\nfunction treeGetPath(tree) {\r\n    return new Path(tree.parent === null\r\n        ? tree.name\r\n        : treeGetPath(tree.parent) + '/' + tree.name);\r\n}\r\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\r\nfunction treeUpdateParents(tree) {\r\n    if (tree.parent !== null) {\r\n        treeUpdateChild(tree.parent, tree.name, tree);\r\n    }\r\n}\r\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\r\nfunction treeUpdateChild(tree, childName, child) {\r\n    var childEmpty = treeIsEmpty(child);\r\n    var childExists = contains(tree.node.children, childName);\r\n    if (childEmpty && childExists) {\r\n        delete tree.node.children[childName];\r\n        tree.node.childCount--;\r\n        treeUpdateParents(tree);\r\n    }\r\n    else if (!childEmpty && !childExists) {\r\n        tree.node.children[childName] = child.node;\r\n        tree.node.childCount++;\r\n        treeUpdateParents(tree);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nvar validateFirebaseDataArg = function (fnName, value, path, optional) {\r\n    if (optional && value === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            validationPathToErrorString(path) +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix +\r\n            'contains ' +\r\n            data.toString() +\r\n            ' ' +\r\n            validationPathToErrorString(path));\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            validationPathToErrorString(path) +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        validationPathToErrorString(path) +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            validationPathPush(path, key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            validationPathPop(path);\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                validationPathToErrorString(path) +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = pathSlice(curPath);\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix$1 = errorPrefix(fnName, 'values');\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(errorPrefix(fnName, 'eventType') +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentName, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentName, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentName, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentName, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, 'url') +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentName, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    var currList = null;\r\n    for (var i = 0; i < eventDataList.length; i++) {\r\n        var data = eventDataList[i];\r\n        var path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path: path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathEquals(eventPath, path);\r\n    });\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathContains(eventPath, changedPath) ||\r\n            pathContains(changedPath, eventPath);\r\n    });\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    var sentAll = true;\r\n    for (var i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        var eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            var eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (var i = 0; i < eventList.events.length; i++) {\r\n        var eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            var eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nvar MAX_TRANSACTION_RETRIES = 25;\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient_, authTokenProvider_, appCheckProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckProvider_ = appCheckProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = newSparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    /**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    return Repo;\r\n}());\r\nfunction repoStart(repo, appId, authOverride) {\r\n    repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\r\n    if (repo.forceRestClient_ || beingCrawled()) {\r\n        repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_);\r\n        // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n        setTimeout(function () { return repoOnConnectStatus(repo, /* connectStatus= */ true); }, 0);\r\n    }\r\n    else {\r\n        // Validate authOverride\r\n        if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n            if (typeof authOverride !== 'object') {\r\n                throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n            }\r\n            try {\r\n                stringify(authOverride);\r\n            }\r\n            catch (e) {\r\n                throw new Error('Invalid authOverride provided: ' + e);\r\n            }\r\n        }\r\n        repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, function (connectStatus) {\r\n            repoOnConnectStatus(repo, connectStatus);\r\n        }, function (updates) {\r\n            repoOnServerInfoUpdate(repo, updates);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_, authOverride);\r\n        repo.server_ = repo.persistentConnection_;\r\n    }\r\n    repo.authTokenProvider_.addTokenChangeListener(function (token) {\r\n        repo.server_.refreshAuthToken(token);\r\n    });\r\n    repo.appCheckProvider_.addTokenChangeListener(function (result) {\r\n        repo.server_.refreshAppCheckToken(result.token);\r\n    });\r\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n    repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () { return new StatsReporter(repo.stats_, repo.server_); });\r\n    // Used for .info.\r\n    repo.infoData_ = new SnapshotHolder();\r\n    repo.infoSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            var infoEvents = [];\r\n            var node = repo.infoData_.getNode(query._path);\r\n            // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n            // on initial data...\r\n            if (!node.isEmpty()) {\r\n                infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\r\n                setTimeout(function () {\r\n                    onComplete('ok');\r\n                }, 0);\r\n            }\r\n            return infoEvents;\r\n        },\r\n        stopListening: function () { }\r\n    });\r\n    repoUpdateInfo(repo, 'connected', false);\r\n    repo.serverSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            repo.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                var events = onComplete(status, data);\r\n                eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n            });\r\n            // No synchronous events for network-backed sync trees\r\n            return [];\r\n        },\r\n        stopListening: function (query, tag) {\r\n            repo.server_.unlisten(query, tag);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\r\nfunction repoServerTime(repo) {\r\n    var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n    var offset = offsetNode.val() || 0;\r\n    return new Date().getTime() + offset;\r\n}\r\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\r\nfunction repoGenerateServerValues(repo) {\r\n    return generateWithValues({\r\n        timestamp: repoServerTime(repo)\r\n    });\r\n}\r\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\r\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\r\n    // For testing.\r\n    repo.dataUpdateCount++;\r\n    var path = new Path(pathString);\r\n    data = repo.interceptServerDataCallback_\r\n        ? repo.interceptServerDataCallback_(pathString, data)\r\n        : data;\r\n    var events = [];\r\n    if (tag) {\r\n        if (isMerge) {\r\n            var taggedChildren = map(data, function (raw) { return nodeFromJSON(raw); });\r\n            events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\r\n        }\r\n        else {\r\n            var taggedSnap = nodeFromJSON(data);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\r\n        }\r\n    }\r\n    else if (isMerge) {\r\n        var changedChildren = map(data, function (raw) { return nodeFromJSON(raw); });\r\n        events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\r\n    }\r\n    else {\r\n        var snap = nodeFromJSON(data);\r\n        events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\r\n    }\r\n    var affectedPath = path;\r\n    if (events.length > 0) {\r\n        // Since we have a listener outstanding for each transaction, receiving any events\r\n        // is a proxy for some change having occurred.\r\n        affectedPath = repoRerunTransactions(repo, path);\r\n    }\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\r\n}\r\n// TODO: This should be @private but it's used by test_access.js and internal.js\r\nfunction repoInterceptServerData(repo, callback) {\r\n    repo.interceptServerDataCallback_ = callback;\r\n}\r\nfunction repoOnConnectStatus(repo, connectStatus) {\r\n    repoUpdateInfo(repo, 'connected', connectStatus);\r\n    if (connectStatus === false) {\r\n        repoRunOnDisconnectEvents(repo);\r\n    }\r\n}\r\nfunction repoOnServerInfoUpdate(repo, updates) {\r\n    each(updates, function (key, value) {\r\n        repoUpdateInfo(repo, key, value);\r\n    });\r\n}\r\nfunction repoUpdateInfo(repo, pathString, value) {\r\n    var path = new Path('/.info/' + pathString);\r\n    var newNode = nodeFromJSON(value);\r\n    repo.infoData_.updateSnapshot(path, newNode);\r\n    var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n}\r\nfunction repoGetNextWriteId(repo) {\r\n    return repo.nextWriteId_++;\r\n}\r\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\r\nfunction repoGetValue(repo, query) {\r\n    // Only active queries are cached. There is no persisted cache.\r\n    var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\r\n    if (cached != null) {\r\n        return Promise.resolve(cached);\r\n    }\r\n    return repo.server_.get(query).then(function (payload) {\r\n        var node = nodeFromJSON(payload).withIndex(query._queryParams.getIndex());\r\n        var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\r\n        eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n        return Promise.resolve(node);\r\n    }, function (err) {\r\n        repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\r\n        return Promise.reject(new Error(err));\r\n    });\r\n}\r\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\r\n    repoLog(repo, 'set', {\r\n        path: path.toString(),\r\n        value: newVal,\r\n        priority: newPriority\r\n    });\r\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n    // (b) store unresolved paths on JSON parse\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var newNodeUnresolved = nodeFromJSON(newVal, newPriority);\r\n    var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\r\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n    var writeId = repoGetNextWriteId(repo);\r\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\r\n    eventQueueQueueEvents(repo.eventQueue_, events);\r\n    repo.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n        var success = status === 'ok';\r\n        if (!success) {\r\n            warn('set at ' + path + ' failed: ' + status);\r\n        }\r\n        var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n    var affectedPath = repoAbortTransactions(repo, path);\r\n    repoRerunTransactions(repo, affectedPath);\r\n    // We queued the events above, so just flush the queue here\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\r\n}\r\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\r\n    repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\r\n    // Start with our existing data and merge each child into it.\r\n    var empty = true;\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var changedChildren = {};\r\n    each(childrenToMerge, function (changedKey, changedValue) {\r\n        empty = false;\r\n        changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON(changedValue), repo.serverSyncTree_, serverValues);\r\n    });\r\n    if (!empty) {\r\n        var writeId_1 = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\r\n        eventQueueQueueEvents(repo.eventQueue_, events);\r\n        repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('update at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\r\n            var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\r\n            repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n        });\r\n        each(childrenToMerge, function (changedPath) {\r\n            var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\r\n            repoRerunTransactions(repo, affectedPath);\r\n        });\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\r\n    }\r\n    else {\r\n        log(\"update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n    }\r\n}\r\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\r\nfunction repoRunOnDisconnectEvents(repo) {\r\n    repoLog(repo, 'onDisconnectEvents');\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var resolvedOnDisconnectTree = newSparseSnapshotTree();\r\n    sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\r\n        var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\r\n        sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\r\n    });\r\n    var events = [];\r\n    sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\r\n        events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\r\n        var affectedPath = repoAbortTransactions(repo, path);\r\n        repoRerunTransactions(repo, affectedPath);\r\n    });\r\n    repo.onDisconnect_ = newSparseSnapshotTree();\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\r\n}\r\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\r\n    repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeForget(repo.onDisconnect_, path);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\r\n    var newNode = nodeFromJSON(value);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\r\n    var newNode = nodeFromJSON(value, priority);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\r\n    if (isEmpty(childrenToMerge)) {\r\n        log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n        return;\r\n    }\r\n    repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            each(childrenToMerge, function (childName, childNode) {\r\n                var newChildNode = nodeFromJSON(childNode);\r\n                sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\r\n            });\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\r\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n    // a little bit by handling the return values anyways.\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoInterrupt(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoResume(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.resume(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoStats(repo, showDelta) {\r\n    if (showDelta === void 0) { showDelta = false; }\r\n    if (typeof console === 'undefined') {\r\n        return;\r\n    }\r\n    var stats;\r\n    if (showDelta) {\r\n        if (!repo.statsListener_) {\r\n            repo.statsListener_ = new StatsListener(repo.stats_);\r\n        }\r\n        stats = repo.statsListener_.get();\r\n    }\r\n    else {\r\n        stats = repo.stats_.get();\r\n    }\r\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n        return Math.max(currentValue.length, previousValue);\r\n    }, 0);\r\n    each(stats, function (stat, value) {\r\n        var paddedStat = stat;\r\n        // pad stat names to be the same length (plus 2 extra spaces).\r\n        for (var i = stat.length; i < longestName + 2; i++) {\r\n            paddedStat += ' ';\r\n        }\r\n        console.log(paddedStat + value);\r\n    });\r\n}\r\nfunction repoStatsIncrementCounter(repo, metric) {\r\n    repo.stats_.incrementCounter(metric);\r\n    statsReporterIncludeStat(repo.statsReporter_, metric);\r\n}\r\nfunction repoLog(repo) {\r\n    var varArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        varArgs[_i - 1] = arguments[_i];\r\n    }\r\n    var prefix = '';\r\n    if (repo.persistentConnection_) {\r\n        prefix = repo.persistentConnection_.id + ':';\r\n    }\r\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n}\r\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\r\n    if (callback) {\r\n        exceptionGuard(function () {\r\n            if (status === 'ok') {\r\n                callback(null);\r\n            }\r\n            else {\r\n                var code = (status || 'error').toUpperCase();\r\n                var message = code;\r\n                if (errorReason) {\r\n                    message += ': ' + errorReason;\r\n                }\r\n                var error = new Error(message);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                error.code = code;\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\r\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\r\n    repoLog(repo, 'transaction on ' + path);\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out\r\n        // which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = repoGetLatestState(repo, path, undefined);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            transaction.onComplete(null, false, transaction.currentInputSnapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = 0 /* RUN */;\r\n        var queueNode = treeSubTree(repo.transactionQueueTree_, path);\r\n        var nodeQueue = treeGetValue(queueNode) || [];\r\n        nodeQueue.push(transaction);\r\n        treeSetValue(queueNode, nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our\r\n        // transaction state, since the user could start new transactions from the\r\n        // event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        var serverValues = repoGenerateServerValues(repo);\r\n        var newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n    }\r\n}\r\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\r\nfunction repoGetLatestState(repo, path, excludeSets) {\r\n    return (syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n}\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\r\nfunction repoSendReadyTransactions(repo, node) {\r\n    if (node === void 0) { node = repo.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, node);\r\n    }\r\n    if (treeGetValue(node)) {\r\n        var queue = repoBuildTransactionQueue(repo, node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === 0 /* RUN */; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            repoSendTransactionQueue(repo, treeGetPath(node), queue);\r\n        }\r\n    }\r\n    else if (treeHasChildren(node)) {\r\n        treeForEachChild(node, function (childNode) {\r\n            repoSendReadyTransactions(repo, childNode);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\r\nfunction repoSendTransactionQueue(repo, path, queue) {\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = repoGetLatestState(repo, path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        assert(txn.status === 0 /* RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = 1 /* SENT */;\r\n        txn.retryCount++;\r\n        var relativePath = newRelativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        repoLog(repo, 'transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more\r\n            // transactions or sets.\r\n            var callbacks = [];\r\n            var _loop_1 = function (i) {\r\n                queue[i].status = 2 /* COMPLETED */;\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this\r\n                    // transaction is complete, it should be set\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved);\r\n                    });\r\n                }\r\n                queue[i].unwatcher();\r\n            };\r\n            for (var i = 0; i < queue.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            // Now remove the completed transactions.\r\n            repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\r\n            // There may be pending transactions that we can now send.\r\n            repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) {\r\n                        queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    }\r\n                    else {\r\n                        queue[i].status = 0 /* RUN */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            repoRerunTransactions(repo, path);\r\n        }\r\n    }, latestHash);\r\n}\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\r\nfunction repoRerunTransactions(repo, changedPath) {\r\n    var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\r\n    var path = treeGetPath(rootMostTransactionNode);\r\n    var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\r\n    repoRerunTransactionQueue(repo, queue, path);\r\n    return path;\r\n}\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\r\nfunction repoRerunTransactionQueue(repo, queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our\r\n    // transaction state, since the callback could trigger more transactions or\r\n    // sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === 0 /* RUN */;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    var _loop_2 = function (i) {\r\n        var transaction = queue[i];\r\n        var relativePath = newRelativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === 4 /* NEEDS_ABORT */) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === 0 /* RUN */) {\r\n            if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = repoGenerateServerValues(repo);\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = repoGetNextWriteId(repo);\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = 2 /* COMPLETED */;\r\n            // Removing a listener can trigger pruning which can muck with\r\n            // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n            // until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, false, queue[i].currentInputSnapshot);\r\n                    });\r\n                }\r\n                else {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(new Error(abortReason), false, null);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    for (var i = 0; i < queue.length; i++) {\r\n        _loop_2(i);\r\n    }\r\n    // Clean up completed transactions.\r\n    repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n}\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\r\nfunction repoGetAncestorTransactionNode(repo, path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we\r\n    // find a node with pending transactions.\r\n    var transactionNode = repo.transactionQueueTree_;\r\n    front = pathGetFront(path);\r\n    while (front !== null && treeGetValue(transactionNode) === undefined) {\r\n        transactionNode = treeSubTree(transactionNode, front);\r\n        path = pathPopFront(path);\r\n        front = pathGetFront(path);\r\n    }\r\n    return transactionNode;\r\n}\r\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\r\nfunction repoBuildTransactionQueue(repo, transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) { return a.order - b.order; });\r\n    return transactionQueue;\r\n}\r\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\r\n    var nodeQueue = treeGetValue(node);\r\n    if (nodeQueue) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    treeForEachChild(node, function (child) {\r\n        repoAggregateTransactionQueuesForNode(repo, child, queue);\r\n    });\r\n}\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\r\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== 2 /* COMPLETED */) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        treeSetValue(node, queue.length > 0 ? queue : undefined);\r\n    }\r\n    treeForEachChild(node, function (childNode) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, childNode);\r\n    });\r\n}\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\r\nfunction repoAbortTransactions(repo, path) {\r\n    var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\r\n    var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\r\n    treeForEachAncestor(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    repoAbortTransactionsOnNode(repo, transactionNode);\r\n    treeForEachDescendant(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    return affectedPath;\r\n}\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\r\nfunction repoAbortTransactionsOnNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions\r\n        // or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for\r\n        // abort, while the unsent ones can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) ;\r\n            else if (queue[i].status === 1 /* SENT */) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = 3 /* SENT_NEEDS_ABORT */;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === 0 /* RUN */, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            treeSetValue(node, undefined);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @returns key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    };\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\r\nvar CallbackContext = /** @class */ (function () {\r\n    function CallbackContext(snapshotCallback, cancelCallback) {\r\n        this.snapshotCallback = snapshotCallback;\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    CallbackContext.prototype.onValue = function (expDataSnapshot, previousChildName) {\r\n        this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\r\n    };\r\n    CallbackContext.prototype.onCancel = function (error) {\r\n        assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\r\n        return this.cancelCallback.call(null, error);\r\n    };\r\n    Object.defineProperty(CallbackContext.prototype, \"hasCancelCallback\", {\r\n        get: function () {\r\n            return !!this.cancelCallback;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    CallbackContext.prototype.matches = function (other) {\r\n        return (this.snapshotCallback === other.snapshotCallback ||\r\n            (this.snapshotCallback.userCallback !== undefined &&\r\n                this.snapshotCallback.userCallback ===\r\n                    other.snapshotCallback.userCallback &&\r\n                this.snapshotCallback.context === other.snapshotCallback.context));\r\n    };\r\n    return CallbackContext;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\r\nvar OnDisconnect$1 = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function OnDisconnect(_repo, _path) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n    }\r\n    /**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.cancel = function () {\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.remove = function () {\r\n        validateWritablePath('OnDisconnect.remove', this._path);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.set = function (value) {\r\n        validateWritablePath('OnDisconnect.set', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority) {\r\n        validateWritablePath('OnDisconnect.setWithPriority', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\r\n        validatePriority('OnDisconnect.setWithPriority', priority, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.update = function (values) {\r\n        validateWritablePath('OnDisconnect.update', this._path);\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nvar QueryImpl = /** @class */ (function () {\r\n    /**\r\n     * @hideconstructor\r\n     */\r\n    function QueryImpl(_repo, _path, _queryParams, _orderByCalled) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n        this._queryParams = _queryParams;\r\n        this._orderByCalled = _orderByCalled;\r\n    }\r\n    Object.defineProperty(QueryImpl.prototype, \"key\", {\r\n        get: function () {\r\n            if (pathIsEmpty(this._path)) {\r\n                return null;\r\n            }\r\n            else {\r\n                return pathGetBack(this._path);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"ref\", {\r\n        get: function () {\r\n            return new ReferenceImpl(this._repo, this._path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryIdentifier\", {\r\n        get: function () {\r\n            var obj = queryParamsGetQueryObject(this._queryParams);\r\n            var id = ObjectToUniqueKey(obj);\r\n            return id === '{}' ? 'default' : id;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryObject\", {\r\n        /**\r\n         * An object representation of the query parameters used by this Query.\r\n         */\r\n        get: function () {\r\n            return queryParamsGetQueryObject(this._queryParams);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    QueryImpl.prototype.isEqual = function (other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof QueryImpl)) {\r\n            return false;\r\n        }\r\n        var sameRepo = this._repo === other._repo;\r\n        var samePath = pathEquals(this._path, other._path);\r\n        var sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    QueryImpl.prototype.toJSON = function () {\r\n        return this.toString();\r\n    };\r\n    QueryImpl.prototype.toString = function () {\r\n        return this._repo.toString() + pathToUrlEncodedString(this._path);\r\n    };\r\n    return QueryImpl;\r\n}());\r\n/**\r\n * Validates that no other order by call has been made\r\n */\r\nfunction validateNoPreviousOrderByCall(query, fnName) {\r\n    if (query._orderByCalled === true) {\r\n        throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n    }\r\n}\r\n/**\r\n * Validates start/end values for queries.\r\n */\r\nfunction validateQueryEndpoints(params) {\r\n    var startNode = null;\r\n    var endNode = null;\r\n    if (params.hasStart()) {\r\n        startNode = params.getIndexStartValue();\r\n    }\r\n    if (params.hasEnd()) {\r\n        endNode = params.getIndexEndValue();\r\n    }\r\n    if (params.getIndex() === KEY_INDEX) {\r\n        var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n            'startAt(), endAt(), or equalTo().';\r\n        var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n            'endAt(), endBefore(), or equalTo() must be a string.';\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            if (startName !== MIN_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof startNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            if (endName !== MAX_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof endNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n    }\r\n    else if (params.getIndex() === PRIORITY_INDEX) {\r\n        if ((startNode != null && !isValidPriority(startNode)) ||\r\n            (endNode != null && !isValidPriority(endNode))) {\r\n            throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                '(null, a number, or a string).');\r\n        }\r\n    }\r\n    else {\r\n        assert(params.getIndex() instanceof PathIndex ||\r\n            params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n        if ((startNode != null && typeof startNode === 'object') ||\r\n            (endNode != null && typeof endNode === 'object')) {\r\n            throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                'equalTo() cannot be an object.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\r\nfunction validateLimit(params) {\r\n    if (params.hasStart() &&\r\n        params.hasEnd() &&\r\n        params.hasLimit() &&\r\n        !params.hasAnchoredLimit()) {\r\n        throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n            'limitToFirst() or limitToLast() instead.');\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nvar ReferenceImpl = /** @class */ (function (_super) {\r\n    __extends(ReferenceImpl, _super);\r\n    /** @hideconstructor */\r\n    function ReferenceImpl(repo, path) {\r\n        return _super.call(this, repo, path, new QueryParams(), false) || this;\r\n    }\r\n    Object.defineProperty(ReferenceImpl.prototype, \"parent\", {\r\n        get: function () {\r\n            var parentPath = pathParent(this._path);\r\n            return parentPath === null\r\n                ? null\r\n                : new ReferenceImpl(this._repo, parentPath);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceImpl.prototype, \"root\", {\r\n        get: function () {\r\n            var ref = this;\r\n            while (ref.parent !== null) {\r\n                ref = ref.parent;\r\n            }\r\n            return ref;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ReferenceImpl;\r\n}(QueryImpl));\r\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\r\nvar DataSnapshot$1 = /** @class */ (function () {\r\n    /**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */\r\n    function DataSnapshot(_node, \r\n    /**\r\n     * The location of this DataSnapshot.\r\n     */\r\n    ref, _index) {\r\n        this._node = _node;\r\n        this.ref = ref;\r\n        this._index = _index;\r\n    }\r\n    Object.defineProperty(DataSnapshot.prototype, \"priority\", {\r\n        /**\r\n         * Gets the priority value of the data in this `DataSnapshot`.\r\n         *\r\n         * Applications need not use priority but can order collections by\r\n         * ordinary properties (see\r\n         * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n         * ).\r\n         */\r\n        get: function () {\r\n            // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n            return this._node.getPriority().val();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        /**\r\n         * The key (last part of the path) of the location of this `DataSnapshot`.\r\n         *\r\n         * The last token in a Database location is considered its key. For example,\r\n         * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n         * `DataSnapshot` will return the key for the location that generated it.\r\n         * However, accessing the key on the root URL of a Database will return\r\n         * `null`.\r\n         */\r\n        get: function () {\r\n            return this.ref.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"size\", {\r\n        /** Returns the number of child properties of this `DataSnapshot`. */\r\n        get: function () {\r\n            return this._node.numChildren();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        var childPath = new Path(path);\r\n        var childRef = child(this.ref, path);\r\n        return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        return !this._node.isEmpty();\r\n    };\r\n    /**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        return this._node.val(true);\r\n    };\r\n    /**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this._node;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this._index, function (key, node) {\r\n            return action(new DataSnapshot(node, child(_this.ref, key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        var childPath = new Path(path);\r\n        return !this._node.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this._node.isEmpty();\r\n        }\r\n    };\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.val = function () {\r\n        return this._node.val();\r\n    };\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\r\nfunction ref(db, path) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('ref');\r\n    return path !== undefined ? child(db._root, path) : db._root;\r\n}\r\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\r\nfunction refFromURL(db, url) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('refFromURL');\r\n    var parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\r\n    validateUrl('refFromURL', parsedURL);\r\n    var repoInfo = parsedURL.repoInfo;\r\n    if (!db._repo.repoInfo_.isCustomHost() &&\r\n        repoInfo.host !== db._repo.repoInfo_.host) {\r\n        fatal('refFromURL' +\r\n            ': Host name does not match the current database: ' +\r\n            '(found ' +\r\n            repoInfo.host +\r\n            ' but expected ' +\r\n            db._repo.repoInfo_.host +\r\n            ')');\r\n    }\r\n    return ref(db, parsedURL.path.toString());\r\n}\r\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\r\nfunction child(parent, path) {\r\n    parent = getModularInstance(parent);\r\n    if (pathGetFront(parent._path) === null) {\r\n        validateRootPathString('child', 'path', path, false);\r\n    }\r\n    else {\r\n        validatePathString('child', 'path', path, false);\r\n    }\r\n    return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\r\n}\r\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\r\nfunction push(parent, value) {\r\n    parent = getModularInstance(parent);\r\n    validateWritablePath('push', parent._path);\r\n    validateFirebaseDataArg('push', value, parent._path, true);\r\n    var now = repoServerTime(parent._repo);\r\n    var name = nextPushId(now);\r\n    // push() returns a ThennableReference whose promise is fulfilled with a\r\n    // regular Reference. We use child() to create handles to two different\r\n    // references. The first is turned into a ThennableReference below by adding\r\n    // then() and catch() methods and is used as the return value of push(). The\r\n    // second remains a regular Reference and is used as the fulfilled value of\r\n    // the first ThennableReference.\r\n    var thennablePushRef = child(parent, name);\r\n    var pushRef = child(parent, name);\r\n    var promise;\r\n    if (value != null) {\r\n        promise = set(pushRef, value).then(function () { return pushRef; });\r\n    }\r\n    else {\r\n        promise = Promise.resolve(pushRef);\r\n    }\r\n    thennablePushRef.then = promise.then.bind(promise);\r\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n    return thennablePushRef;\r\n}\r\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\r\nfunction remove(ref) {\r\n    validateWritablePath('remove', ref._path);\r\n    return set(ref, null);\r\n}\r\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction set(ref, value) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('set', ref._path);\r\n    validateFirebaseDataArg('set', value, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, \r\n    /*priority=*/ null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setPriority(ref, priority) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('setPriority', ref._path);\r\n    validatePriority('setPriority', priority, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setWithPriority(ref, value, priority) {\r\n    validateWritablePath('setWithPriority', ref._path);\r\n    validateFirebaseDataArg('setWithPriority', value, ref._path, false);\r\n    validatePriority('setWithPriority', priority, false);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\r\n    }\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\r\nfunction update(ref, values) {\r\n    validateFirebaseMergeDataArg('update', values, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\r\nfunction get(query) {\r\n    query = getModularInstance(query);\r\n    return repoGetValue(query._repo, query).then(function (node) {\r\n        return new DataSnapshot$1(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\r\n    });\r\n}\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    function ValueEventRegistration(callbackContext) {\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot$1(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\r\n    };\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var _this = this;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return function () {\r\n                return _this.callbackContext.onCancel(eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            return function () {\r\n                return _this.callbackContext.onValue(eventData.snapshot, null);\r\n            };\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callbackContext || !this.callbackContext) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return other.callbackContext.matches(this.callbackContext);\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbackContext !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of a child_x event.\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    function ChildEventRegistration(eventType, callbackContext) {\r\n        this.eventType = eventType;\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return this.eventType === eventToCheck;\r\n    };\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        var childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot$1(change.snapshotNode, childRef, index), change.prevName);\r\n    };\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var _this = this;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return function () {\r\n                return _this.callbackContext.onCancel(eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            return function () {\r\n                return _this.callbackContext.onValue(eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            return (this.eventType === other.eventType &&\r\n                (!this.callbackContext ||\r\n                    !other.callbackContext ||\r\n                    this.callbackContext.matches(other.callbackContext)));\r\n        }\r\n        return false;\r\n    };\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return !!this.callbackContext;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\r\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\r\n    var cancelCallback;\r\n    if (typeof cancelCallbackOrListenOptions === 'object') {\r\n        cancelCallback = undefined;\r\n        options = cancelCallbackOrListenOptions;\r\n    }\r\n    if (typeof cancelCallbackOrListenOptions === 'function') {\r\n        cancelCallback = cancelCallbackOrListenOptions;\r\n    }\r\n    if (options && options.onlyOnce) {\r\n        var userCallback_1 = callback;\r\n        var onceCallback = function (dataSnapshot, previousChildName) {\r\n            repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n            userCallback_1(dataSnapshot, previousChildName);\r\n        };\r\n        onceCallback.userCallback = callback.userCallback;\r\n        onceCallback.context = callback.context;\r\n        callback = onceCallback;\r\n    }\r\n    var callbackContext = new CallbackContext(callback, cancelCallback || undefined);\r\n    var container = eventType === 'value'\r\n        ? new ValueEventRegistration(callbackContext)\r\n        : new ChildEventRegistration(eventType, callbackContext);\r\n    repoAddEventCallbackForQuery(query._repo, query, container);\r\n    return function () { return repoRemoveEventCallbackForQuery(query._repo, query, container); };\r\n}\r\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\r\nfunction off(query, eventType, callback) {\r\n    var container = null;\r\n    var expCallback = callback ? new CallbackContext(callback) : null;\r\n    if (eventType === 'value') {\r\n        container = new ValueEventRegistration(expCallback);\r\n    }\r\n    else if (eventType) {\r\n        container = new ChildEventRegistration(eventType, expCallback);\r\n    }\r\n    repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\r\nvar QueryConstraint = /** @class */ (function () {\r\n    function QueryConstraint() {\r\n    }\r\n    return QueryConstraint;\r\n}());\r\nvar QueryEndAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndAtConstraint, _super);\r\n    function QueryEndAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endAt', this._value, query._path, true);\r\n        var newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endAt: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\r\nfunction endAt(value, key) {\r\n    validateKey('endAt', 'key', key, true);\r\n    return new QueryEndAtConstraint(value, key);\r\n}\r\nvar QueryEndBeforeConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndBeforeConstraint, _super);\r\n    function QueryEndBeforeConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndBeforeConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endBefore', this._value, query._path, false);\r\n        var newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endBefore: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndBeforeConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction endBefore(value, key) {\r\n    validateKey('endBefore', 'key', key, true);\r\n    return new QueryEndBeforeConstraint(value, key);\r\n}\r\nvar QueryStartAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAtConstraint, _super);\r\n    function QueryStartAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAt', this._value, query._path, true);\r\n        var newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAt: Starting point was already set (by another call to startAt, ' +\r\n                'startBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAt(value, key) {\r\n    if (value === void 0) { value = null; }\r\n    validateKey('startAt', 'key', key, true);\r\n    return new QueryStartAtConstraint(value, key);\r\n}\r\nvar QueryStartAfterConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAfterConstraint, _super);\r\n    function QueryStartAfterConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAfterConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAfter', this._value, query._path, false);\r\n        var newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAfter: Starting point was already set (by another call to startAt, ' +\r\n                'startAfter, or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAfterConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAfter(value, key) {\r\n    validateKey('startAfter', 'key', key, true);\r\n    return new QueryStartAfterConstraint(value, key);\r\n}\r\nvar QueryLimitToFirstConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToFirstConstraint, _super);\r\n    function QueryLimitToFirstConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToFirstConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToFirstConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToFirst(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToFirst: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToFirstConstraint(limit);\r\n}\r\nvar QueryLimitToLastConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToLastConstraint, _super);\r\n    function QueryLimitToLastConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToLastConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToLastConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToLast(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToLast: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToLastConstraint(limit);\r\n}\r\nvar QueryOrderByChildConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByChildConstraint, _super);\r\n    function QueryOrderByChildConstraint(_path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._path = _path;\r\n        return _this;\r\n    }\r\n    QueryOrderByChildConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByChild');\r\n        var parsedPath = new Path(this._path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = queryParamsOrderBy(query._queryParams, index);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByChildConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\r\nfunction orderByChild(path) {\r\n    if (path === '$key') {\r\n        throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\r\n    }\r\n    else if (path === '$priority') {\r\n        throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\r\n    }\r\n    else if (path === '$value') {\r\n        throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\r\n    }\r\n    validatePathString('orderByChild', 'path', path, false);\r\n    return new QueryOrderByChildConstraint(path);\r\n}\r\nvar QueryOrderByKeyConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByKeyConstraint, _super);\r\n    function QueryOrderByKeyConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByKeyConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByKey');\r\n        var newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByKeyConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByKey() {\r\n    return new QueryOrderByKeyConstraint();\r\n}\r\nvar QueryOrderByPriorityConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByPriorityConstraint, _super);\r\n    function QueryOrderByPriorityConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByPriorityConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByPriority');\r\n        var newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByPriorityConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\r\nfunction orderByPriority() {\r\n    return new QueryOrderByPriorityConstraint();\r\n}\r\nvar QueryOrderByValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByValueConstraint, _super);\r\n    function QueryOrderByValueConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByValueConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByValue');\r\n        var newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByValue() {\r\n    return new QueryOrderByValueConstraint();\r\n}\r\nvar QueryEqualToValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEqualToValueConstraint, _super);\r\n    function QueryEqualToValueConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEqualToValueConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('equalTo', this._value, query._path, false);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\r\n    };\r\n    return QueryEqualToValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction equalTo(value, key) {\r\n    validateKey('equalTo', 'key', key, true);\r\n    return new QueryEqualToValueConstraint(value, key);\r\n}\r\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\r\nfunction query(query) {\r\n    var e_1, _a;\r\n    var queryConstraints = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        queryConstraints[_i - 1] = arguments[_i];\r\n    }\r\n    var queryImpl = getModularInstance(query);\r\n    try {\r\n        for (var queryConstraints_1 = __values(queryConstraints), queryConstraints_1_1 = queryConstraints_1.next(); !queryConstraints_1_1.done; queryConstraints_1_1 = queryConstraints_1.next()) {\r\n            var constraint = queryConstraints_1_1.value;\r\n            queryImpl = constraint._apply(queryImpl);\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (queryConstraints_1_1 && !queryConstraints_1_1.done && (_a = queryConstraints_1.return)) _a.call(queryConstraints_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return queryImpl;\r\n}\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nsyncPointSetReferenceConstructor(ReferenceImpl);\r\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar repos = {};\r\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\r\nvar useRestClient = false;\r\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\r\nfunction repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider) {\r\n    repo.repoInfo_ = new RepoInfo(host + \":\" + port, \r\n    /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\r\n    if (tokenProvider) {\r\n        repo.authTokenProvider_ = tokenProvider;\r\n    }\r\n}\r\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\r\nfunction repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin) {\r\n    var dbUrl = url || app.options.databaseURL;\r\n    if (dbUrl === undefined) {\r\n        if (!app.options.projectId) {\r\n            fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                ' a Project ID when calling firebase.initializeApp().');\r\n        }\r\n        log('Using default host for project ', app.options.projectId);\r\n        dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\r\n    }\r\n    var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n    var repoInfo = parsedUrl.repoInfo;\r\n    var isEmulator;\r\n    var dbEmulatorHost = undefined;\r\n    if (typeof process !== 'undefined') {\r\n        dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n    }\r\n    if (dbEmulatorHost) {\r\n        isEmulator = true;\r\n        dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n        parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        repoInfo = parsedUrl.repoInfo;\r\n    }\r\n    else {\r\n        isEmulator = !parsedUrl.repoInfo.secure;\r\n    }\r\n    var authTokenProvider = nodeAdmin && isEmulator\r\n        ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\r\n        : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\r\n    validateUrl('Invalid Firebase Database URL', parsedUrl);\r\n    if (!pathIsEmpty(parsedUrl.path)) {\r\n        fatal('Database URL must point to the root of a Firebase Database ' +\r\n            '(not including a child path).');\r\n    }\r\n    var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider, new AppCheckTokenProvider(app.name, appCheckProvider));\r\n    return new Database$1(repo, app);\r\n}\r\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\r\nfunction repoManagerDeleteRepo(repo, appName) {\r\n    var appRepos = repos[appName];\r\n    // This should never happen...\r\n    if (!appRepos || appRepos[repo.key] !== repo) {\r\n        fatal(\"Database \" + appName + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n    }\r\n    repoInterrupt(repo);\r\n    delete appRepos[repo.key];\r\n}\r\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\r\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider, appCheckProvider) {\r\n    var appRepos = repos[app.name];\r\n    if (!appRepos) {\r\n        appRepos = {};\r\n        repos[app.name] = appRepos;\r\n    }\r\n    var repo = appRepos[repoInfo.toURLString()];\r\n    if (repo) {\r\n        fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n    }\r\n    repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\r\n    appRepos[repoInfo.toURLString()] = repo;\r\n    return repo;\r\n}\r\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\r\nfunction repoManagerForceRestClient(forceRestClient) {\r\n    useRestClient = forceRestClient;\r\n}\r\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\r\nvar Database$1 = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function Database(_repoInternal, \r\n    /** The FirebaseApp associated with this Realtime Database instance. */\r\n    app) {\r\n        this._repoInternal = _repoInternal;\r\n        this.app = app;\r\n        /** Represents a database instance. */\r\n        this['type'] = 'database';\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this._instanceStarted = false;\r\n    }\r\n    Object.defineProperty(Database.prototype, \"_repo\", {\r\n        get: function () {\r\n            if (!this._instanceStarted) {\r\n                repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\r\n                this._instanceStarted = true;\r\n            }\r\n            return this._repoInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Database.prototype, \"_root\", {\r\n        get: function () {\r\n            if (!this._rootInternal) {\r\n                this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\r\n            }\r\n            return this._rootInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Database.prototype._delete = function () {\r\n        if (this._rootInternal !== null) {\r\n            repoManagerDeleteRepo(this._repo, this.app.name);\r\n            this._repoInternal = null;\r\n            this._rootInternal = null;\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    Database.prototype._checkNotDeleted = function (apiName) {\r\n        if (this._rootInternal === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */\r\nfunction connectDatabaseEmulator(db, host, port, options) {\r\n    if (options === void 0) { options = {}; }\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('useEmulator');\r\n    if (db._instanceStarted) {\r\n        fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n    }\r\n    var repo = db._repoInternal;\r\n    var tokenProvider = undefined;\r\n    if (repo.repoInfo_.nodeAdmin) {\r\n        if (options.mockUserToken) {\r\n            fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');\r\n        }\r\n        tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\r\n    }\r\n    else if (options.mockUserToken) {\r\n        var token = typeof options.mockUserToken === 'string'\r\n            ? options.mockUserToken\r\n            : createMockUserToken(options.mockUserToken, db.app.options.projectId);\r\n        tokenProvider = new EmulatorTokenProvider(token);\r\n    }\r\n    // Modify the repo to apply emulator settings\r\n    repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\r\n}\r\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\r\nfunction goOffline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOffline');\r\n    repoInterrupt(db._repo);\r\n}\r\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\r\nfunction goOnline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOnline');\r\n    repoResume(db._repo);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SERVER_TIMESTAMP = {\r\n    '.sv': 'timestamp'\r\n};\r\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\r\nfunction serverTimestamp() {\r\n    return SERVER_TIMESTAMP;\r\n}\r\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\r\nfunction increment(delta) {\r\n    return {\r\n        '.sv': {\r\n            'increment': delta\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A type for the resolve value of Firebase.transaction.\r\n */\r\nvar TransactionResult$1 = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function TransactionResult(\r\n    /** Whether the transaction was successfully committed. */\r\n    committed, \r\n    /** The resulting data snapshot. */\r\n    snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    /** Returns a JSON-serializable representation of this object. */\r\n    TransactionResult.prototype.toJSON = function () {\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\r\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */\r\nfunction runTransaction(ref, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntransactionUpdate, options) {\r\n    var _a;\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('Reference.transaction', ref._path);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw ('Reference.transaction failed: ' + ref.key + ' is a read-only object.');\r\n    }\r\n    var applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\r\n    var deferred = new Deferred();\r\n    var promiseComplete = function (error, committed, node) {\r\n        var dataSnapshot = null;\r\n        if (error) {\r\n            deferred.reject(error);\r\n        }\r\n        else {\r\n            dataSnapshot = new DataSnapshot$1(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\r\n            deferred.resolve(new TransactionResult$1(committed, dataSnapshot));\r\n        }\r\n    };\r\n    // Add a watch to make sure we get server updates.\r\n    var unwatcher = onValue(ref, function () { });\r\n    repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\r\n    return deferred.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    function OnDisconnect(_delegate) {\r\n        this._delegate = _delegate;\r\n    }\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\r\n        var result = this._delegate.cancel();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\r\n        var result = this._delegate.remove();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\r\n        var result = this._delegate.set(value);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = this._delegate.setWithPriority(value, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\r\n        var result = this._delegate.update(objectToMerge);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enable @typescript-eslint/no-explicit-any */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    function DataSnapshot(_database, _delegate) {\r\n        this._database = _database;\r\n        this._delegate = _delegate;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this._delegate.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this._delegate.exportVal();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @returns Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return this._delegate.exists();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        path = String(path);\r\n        validatePathString('DataSnapshot.child', 'path', path, false);\r\n        return new DataSnapshot(this._database, this._delegate.child(path));\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 'path', path, false);\r\n        return this._delegate.hasChild(path);\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @returns The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        return this._delegate.priority;\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each child.\r\n     * @returns True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        validateCallback('DataSnapshot.forEach', 'action', action, false);\r\n        return this._delegate.forEach(function (expDataSnapshot) {\r\n            return action(new DataSnapshot(_this._database, expDataSnapshot));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        return this._delegate.hasChildren();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this._delegate.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @returns The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this._delegate.size;\r\n    };\r\n    /**\r\n     * @returns The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return new Reference(this._database, this._delegate.ref);\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(database, _delegate) {\r\n        this.database = database;\r\n        this._delegate = _delegate;\r\n    }\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        var _this = this;\r\n        var _a;\r\n        validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateCallback('Query.on', 'callback', callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            callback.call(ret.context, new DataSnapshot(_this.database, expSnapshot), previousChildName);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            default:\r\n                throw new Error(errorPrefix('Query.on', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n    };\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', eventType, true);\r\n        validateCallback('Query.off', 'callback', callback, true);\r\n        validateContextObject('Query.off', 'context', context, true);\r\n        if (callback) {\r\n            var valueCallback = function () { };\r\n            valueCallback.userCallback = callback;\r\n            valueCallback.context = context;\r\n            off(this._delegate, eventType, valueCallback);\r\n        }\r\n        else {\r\n            off(this._delegate, eventType);\r\n        }\r\n    };\r\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\r\n    Query.prototype.get = function () {\r\n        var _this = this;\r\n        return get(this._delegate).then(function (expSnapshot) {\r\n            return new DataSnapshot(_this.database, expSnapshot);\r\n        });\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */\r\n    Query.prototype.once = function (eventType, callback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateCallback('Query.once', 'callback', callback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        var deferred = new Deferred();\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            var result = new DataSnapshot(_this.database, expSnapshot);\r\n            if (callback) {\r\n                callback.call(ret.context, result, previousChildName);\r\n            }\r\n            deferred.resolve(result);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = function (error) {\r\n            if (ret.cancel) {\r\n                ret.cancel.call(ret.context, error);\r\n            }\r\n            deferred.reject(error);\r\n        };\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            default:\r\n                throw new Error(errorPrefix('Query.once', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToFirst(limit)));\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToLast(limit)));\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByChild(path)));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByKey()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByPriority()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByValue()));\r\n    };\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAt(value, name)));\r\n    };\r\n    Query.prototype.startAfter = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAfter', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAfter(value, name)));\r\n    };\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endAt(value, name)));\r\n    };\r\n    Query.prototype.endBefore = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endBefore', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endBefore(value, name)));\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, equalTo(value, name)));\r\n    };\r\n    /**\r\n     * @returns URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this._delegate.toString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        return this._delegate.isEqual(other._delegate);\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName - The function name (on or once)\r\n     *\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: undefined, context: undefined };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            validateCallback(fnName, 'cancel', ret.cancel, true);\r\n            ret.context = context;\r\n            validateContextObject(fnName, 'context', ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(errorPrefix(fnName, 'cancelOrContext') +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return new Reference(this.database, new ReferenceImpl(this._delegate._repo, this._delegate._path));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\r\nvar Reference = /** @class */ (function (_super) {\r\n    __extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     */\r\n    function Reference(database, _delegate) {\r\n        var _this = _super.call(this, database, new QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)) || this;\r\n        _this.database = database;\r\n        _this._delegate = _delegate;\r\n        return _this;\r\n    }\r\n    /** @returns {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        return this._delegate.key;\r\n    };\r\n    Reference.prototype.child = function (pathString) {\r\n        validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        return new Reference(this.database, child(this._delegate, pathString));\r\n    };\r\n    /** @returns {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parent = this._delegate.parent;\r\n        return parent ? new Reference(this.database, parent) : null;\r\n    };\r\n    /** @returns {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        return new Reference(this.database, this._delegate.root);\r\n    };\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateCallback('Reference.set', 'onComplete', onComplete, true);\r\n        var result = set(this._delegate, newVal);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.update = function (values, onComplete) {\r\n        validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        if (Array.isArray(values)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < values.length; ++i) {\r\n                newObjectToMerge['' + i] = values[i];\r\n            }\r\n            values = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateWritablePath('Reference.update', this._delegate._path);\r\n        validateCallback('Reference.update', 'onComplete', onComplete, true);\r\n        var result = update(this._delegate, values);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = setWithPriority(this._delegate, newVal, newPriority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.remove = function (onComplete) {\r\n        validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateCallback('Reference.remove', 'onComplete', onComplete, true);\r\n        var result = remove(this._delegate);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        var _this = this;\r\n        validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\r\n        validateCallback('Reference.transaction', 'onComplete', onComplete, true);\r\n        validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\r\n        var result = runTransaction(this._delegate, transactionUpdate, {\r\n            applyLocally: applyLocally\r\n        }).then(function (transactionResult) {\r\n            return new TransactionResult(transactionResult.committed, new DataSnapshot(_this.database, transactionResult.snapshot));\r\n        });\r\n        if (onComplete) {\r\n            result.then(function (transactionResult) {\r\n                return onComplete(null, transactionResult.committed, transactionResult.snapshot);\r\n            }, function (error) { return onComplete(error, false, null); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\r\n        var result = setPriority(this._delegate, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        var _this = this;\r\n        validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateCallback('Reference.push', 'onComplete', onComplete, true);\r\n        var expPromise = push(this._delegate, value);\r\n        var promise = expPromise.then(function (expRef) { return new Reference(_this.database, expRef); });\r\n        if (onComplete) {\r\n            promise.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        var result = new Reference(this.database, expPromise);\r\n        result.then = promise.then.bind(promise);\r\n        result.catch = promise.catch.bind(promise, undefined);\r\n        return result;\r\n    };\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this._delegate._path);\r\n        return new OnDisconnect(new OnDisconnect$1(this._delegate._repo, this._delegate._path));\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     */\r\n    function Database(_delegate, app) {\r\n        var _this = this;\r\n        this._delegate = _delegate;\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: function () { return _this._delegate._delete(); }\r\n        };\r\n    }\r\n    /**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host - the emulator host (ex: localhost)\r\n     * @param port - the emulator port (ex: 8080)\r\n     * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n     */\r\n    Database.prototype.useEmulator = function (host, port, options) {\r\n        if (options === void 0) { options = {}; }\r\n        connectDatabaseEmulator(this._delegate, host, port, options);\r\n    };\r\n    Database.prototype.ref = function (path) {\r\n        validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            var childRef = refFromURL(this._delegate, path.toString());\r\n            return new Reference(this, childRef);\r\n        }\r\n        else {\r\n            var childRef = ref(this._delegate, path);\r\n            return new Reference(this, childRef);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @returns Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        var apiName = 'database.refFromURL';\r\n        validateArgCount(apiName, 1, 1, arguments.length);\r\n        var childRef = refFromURL(this._delegate, url);\r\n        return new Reference(this, childRef);\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        return goOffline(this._delegate);\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        return goOnline(this._delegate);\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: serverTimestamp(),\r\n        increment: function (delta) { return increment(delta); }\r\n    };\r\n    return Database;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    var connection = ref._delegate._repo.persistentConnection_;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    connection.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    repoStats(ref._delegate._repo, showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    repoStatsIncrementCounter(ref._delegate._repo, metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref._delegate._repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return repoInterceptServerData(ref._delegate._repo, callback);\r\n};\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\r\nfunction initStandalone(_a) {\r\n    var app = _a.app, url = _a.url, version = _a.version, customAuthImpl = _a.customAuthImpl, namespace = _a.namespace, _b = _a.nodeAdmin, nodeAdmin = _b === void 0 ? false : _b;\r\n    setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\r\n    authProvider.setComponent(new Component('auth-internal', function () { return customAuthImpl; }, \"PRIVATE\" /* PRIVATE */));\r\n    return {\r\n        instance: new Database(repoManagerDatabaseFromApp(app, authProvider, \r\n        /* appCheckProvider= */ undefined, url, nodeAdmin), app),\r\n        namespace: namespace\r\n    };\r\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nvar ConnectionTarget = RepoInfo;\r\nvar queryIdentifier = function (query) {\r\n    return query._delegate._queryIdentifier;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    repoManagerForceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\r\n        var url = _a.instanceIdentifier;\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        var appCheckProvider = container.getProvider('app-check-internal');\r\n        return new Database(repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url), app);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };\n//# sourceMappingURL=index.esm.js.map\n"],"mappings":"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D,CAqBtD;;;EACAsyC,gCAAgC,CAACvO,IAAD,EAAOt4C,IAAP,EAAaigD,IAAb,EAAmB6G,aAAnB,CAAhC;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASyB,SAAT,CAAmBrF,EAAnB,EAAuB;EACnBA,EAAE,GAAGzwD,kBAAkB,CAACywD,EAAD,CAAvB;;EACAA,EAAE,CAACC,gBAAH,CAAoB,WAApB;;EACA5H,aAAa,CAAC2H,EAAE,CAAC5W,KAAJ,CAAb;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkc,QAAT,CAAkBtF,EAAlB,EAAsB;EAClBA,EAAE,GAAGzwD,kBAAkB,CAACywD,EAAD,CAAvB;;EACAA,EAAE,CAACC,gBAAH,CAAoB,UAApB;;EACA3H,UAAU,CAAC0H,EAAE,CAAC5W,KAAJ,CAAV;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAImc,gBAAgB,GAAG;EACnB,OAAO;AADY,CAAvB;AAGA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,GAA2B;EACvB,OAAOD,gBAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,SAAT,CAAmB3mC,KAAnB,EAA0B;EACtB,OAAO;IACH,OAAO;MACH,aAAaA;IADV;EADJ,CAAP;AAKH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAI4mC,mBAAmB;AAAG;AAAe,YAAY;EACjD;EACA,SAASC,iBAAT;EACA;EACAC,SAFA;EAGA;EACAtI,QAJA,EAIU;IACN,KAAKsI,SAAL,GAAiBA,SAAjB;IACA,KAAKtI,QAAL,GAAgBA,QAAhB;EACH;EACD;;;EACAqI,iBAAiB,CAAC/0D,SAAlB,CAA4BouD,MAA5B,GAAqC,YAAY;IAC7C,OAAO;MAAE4G,SAAS,EAAE,KAAKA,SAAlB;MAA6BtI,QAAQ,EAAE,KAAKA,QAAL,CAAc0B,MAAd;IAAvC,CAAP;EACH,CAFD;;EAGA,OAAO2G,iBAAP;AACH,CAfwC,EAAzC;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,cAAT,CAAwBtI,GAAxB,EACA;AACAtE,iBAFA,EAEmBpwC,OAFnB,EAE4B;EACxB,IAAI5N,EAAJ;;EACAsiD,GAAG,GAAGhuD,kBAAkB,CAACguD,GAAD,CAAxB;EACAtK,oBAAoB,CAAC,uBAAD,EAA0BsK,GAAG,CAACpkD,KAA9B,CAApB;;EACA,IAAIokD,GAAG,CAACzsD,GAAJ,KAAY,SAAZ,IAAyBysD,GAAG,CAACzsD,GAAJ,KAAY,OAAzC,EAAkD;IAC9C,MAAO,mCAAmCysD,GAAG,CAACzsD,GAAvC,GAA6C,yBAApD;EACH;;EACD,IAAIqoD,YAAY,GAAG,CAACl+C,EAAE,GAAG4N,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACswC,YAAhE,MAAkF,IAAlF,IAA0Fl+C,EAAE,KAAK,KAAK,CAAtG,GAA0GA,EAA1G,GAA+G,IAAlI;EACA,IAAIue,QAAQ,GAAG,IAAI3qB,QAAJ,EAAf;;EACA,IAAIi3D,eAAe,GAAG,UAAU5xD,KAAV,EAAiB0xD,SAAjB,EAA4B9lC,IAA5B,EAAkC;IACpD,IAAIkhC,YAAY,GAAG,IAAnB;;IACA,IAAI9sD,KAAJ,EAAW;MACPslB,QAAQ,CAAC1e,MAAT,CAAgB5G,KAAhB;IACH,CAFD,MAGK;MACD8sD,YAAY,GAAG,IAAIvB,cAAJ,CAAmB3/B,IAAnB,EAAyB,IAAI6+B,aAAJ,CAAkBpB,GAAG,CAACnU,KAAtB,EAA6BmU,GAAG,CAACpkD,KAAjC,CAAzB,EAAkEkuB,cAAlE,CAAf;MACA7N,QAAQ,CAAC3e,OAAT,CAAiB,IAAI6qD,mBAAJ,CAAwBE,SAAxB,EAAmC5E,YAAnC,CAAjB;IACH;EACJ,CATD,CATwB,CAmBxB;;;EACA,IAAI9H,SAAS,GAAG4E,OAAO,CAACP,GAAD,EAAM,YAAY,CAAG,CAArB,CAAvB;EACAvE,oBAAoB,CAACuE,GAAG,CAACnU,KAAL,EAAYmU,GAAG,CAACpkD,KAAhB,EAAuB8/C,iBAAvB,EAA0C6M,eAA1C,EAA2D5M,SAA3D,EAAsEC,YAAtE,CAApB;EACA,OAAO3/B,QAAQ,CAACS,OAAhB;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIokC,YAAY;AAAG;AAAe,YAAY;EAC1C,SAASA,YAAT,CAAsB0H,SAAtB,EAAiC;IAC7B,KAAKA,SAAL,GAAiBA,SAAjB;EACH;;EACD1H,YAAY,CAACztD,SAAb,CAAuB0tD,MAAvB,GAAgC,UAAUrtC,UAAV,EAAsB;IAClDxhB,gBAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BsD,SAAS,CAACC,MAAxC,CAAhB;IACAtD,gBAAgB,CAAC,qBAAD,EAAwB,YAAxB,EAAsCuhB,UAAtC,EAAkD,IAAlD,CAAhB;;IACA,IAAI0L,MAAM,GAAG,KAAKopC,SAAL,CAAezH,MAAf,EAAb;;IACA,IAAIrtC,UAAJ,EAAgB;MACZ0L,MAAM,CAACliB,IAAP,CAAY,YAAY;QAAE,OAAOwW,UAAU,CAAC,IAAD,CAAjB;MAA0B,CAApD,EAAsD,UAAU/c,KAAV,EAAiB;QAAE,OAAO+c,UAAU,CAAC/c,KAAD,CAAjB;MAA2B,CAApG;IACH;;IACD,OAAOyoB,MAAP;EACH,CARD;;EASA0hC,YAAY,CAACztD,SAAb,CAAuBU,MAAvB,GAAgC,UAAU2f,UAAV,EAAsB;IAClDxhB,gBAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BsD,SAAS,CAACC,MAAxC,CAAhB;IACAtD,gBAAgB,CAAC,qBAAD,EAAwB,YAAxB,EAAsCuhB,UAAtC,EAAkD,IAAlD,CAAhB;;IACA,IAAI0L,MAAM,GAAG,KAAKopC,SAAL,CAAez0D,MAAf,EAAb;;IACA,IAAI2f,UAAJ,EAAgB;MACZ0L,MAAM,CAACliB,IAAP,CAAY,YAAY;QAAE,OAAOwW,UAAU,CAAC,IAAD,CAAjB;MAA0B,CAApD,EAAsD,UAAU/c,KAAV,EAAiB;QAAE,OAAO+c,UAAU,CAAC/c,KAAD,CAAjB;MAA2B,CAApG;IACH;;IACD,OAAOyoB,MAAP;EACH,CARD;;EASA0hC,YAAY,CAACztD,SAAb,CAAuBC,GAAvB,GAA6B,UAAUE,KAAV,EAAiBkgB,UAAjB,EAA6B;IACtDxhB,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BsD,SAAS,CAACC,MAArC,CAAhB;IACAtD,gBAAgB,CAAC,kBAAD,EAAqB,YAArB,EAAmCuhB,UAAnC,EAA+C,IAA/C,CAAhB;;IACA,IAAI0L,MAAM,GAAG,KAAKopC,SAAL,CAAel1D,GAAf,CAAmBE,KAAnB,CAAb;;IACA,IAAIkgB,UAAJ,EAAgB;MACZ0L,MAAM,CAACliB,IAAP,CAAY,YAAY;QAAE,OAAOwW,UAAU,CAAC,IAAD,CAAjB;MAA0B,CAApD,EAAsD,UAAU/c,KAAV,EAAiB;QAAE,OAAO+c,UAAU,CAAC/c,KAAD,CAAjB;MAA2B,CAApG;IACH;;IACD,OAAOyoB,MAAP;EACH,CARD;;EASA0hC,YAAY,CAACztD,SAAb,CAAuB4tD,eAAvB,GAAyC,UAAUztD,KAAV,EAAiBwzB,QAAjB,EAA2BtT,UAA3B,EAAuC;IAC5ExhB,gBAAgB,CAAC,8BAAD,EAAiC,CAAjC,EAAoC,CAApC,EAAuCsD,SAAS,CAACC,MAAjD,CAAhB;IACAtD,gBAAgB,CAAC,8BAAD,EAAiC,YAAjC,EAA+CuhB,UAA/C,EAA2D,IAA3D,CAAhB;;IACA,IAAI0L,MAAM,GAAG,KAAKopC,SAAL,CAAevH,eAAf,CAA+BztD,KAA/B,EAAsCwzB,QAAtC,CAAb;;IACA,IAAItT,UAAJ,EAAgB;MACZ0L,MAAM,CAACliB,IAAP,CAAY,YAAY;QAAE,OAAOwW,UAAU,CAAC,IAAD,CAAjB;MAA0B,CAApD,EAAsD,UAAU/c,KAAV,EAAiB;QAAE,OAAO+c,UAAU,CAAC/c,KAAD,CAAjB;MAA2B,CAApG;IACH;;IACD,OAAOyoB,MAAP;EACH,CARD;;EASA0hC,YAAY,CAACztD,SAAb,CAAuB4B,MAAvB,GAAgC,UAAUwzD,aAAV,EAAyB/0C,UAAzB,EAAqC;IACjExhB,gBAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BsD,SAAS,CAACC,MAAxC,CAAhB;;IACA,IAAII,KAAK,CAACC,OAAN,CAAc2yD,aAAd,CAAJ,EAAkC;MAC9B,IAAIC,gBAAgB,GAAG,EAAvB;;MACA,KAAK,IAAI/yD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8yD,aAAa,CAAChzD,MAAlC,EAA0C,EAAEE,CAA5C,EAA+C;QAC3C+yD,gBAAgB,CAAC,KAAK/yD,CAAN,CAAhB,GAA2B8yD,aAAa,CAAC9yD,CAAD,CAAxC;MACH;;MACD8yD,aAAa,GAAGC,gBAAhB;MACA5xD,IAAI,CAAC,yHACD,0GADA,CAAJ;IAEH;;IACD3E,gBAAgB,CAAC,qBAAD,EAAwB,YAAxB,EAAsCuhB,UAAtC,EAAkD,IAAlD,CAAhB;;IACA,IAAI0L,MAAM,GAAG,KAAKopC,SAAL,CAAevzD,MAAf,CAAsBwzD,aAAtB,CAAb;;IACA,IAAI/0C,UAAJ,EAAgB;MACZ0L,MAAM,CAACliB,IAAP,CAAY,YAAY;QAAE,OAAOwW,UAAU,CAAC,IAAD,CAAjB;MAA0B,CAApD,EAAsD,UAAU/c,KAAV,EAAiB;QAAE,OAAO+c,UAAU,CAAC/c,KAAD,CAAjB;MAA2B,CAApG;IACH;;IACD,OAAOyoB,MAAP;EACH,CAjBD;;EAkBA,OAAO0hC,YAAP;AACH,CA3DiC,EAAlC;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIsH,iBAAiB;AAAG;AAAe,YAAY;EAC/C;AACJ;AACA;EACI,SAASA,iBAAT,CAA2BC,SAA3B,EAAsCtI,QAAtC,EAAgD;IAC5C,KAAKsI,SAAL,GAAiBA,SAAjB;IACA,KAAKtI,QAAL,GAAgBA,QAAhB;EACH,CAP8C,CAQ/C;EACA;;;EACAqI,iBAAiB,CAAC/0D,SAAlB,CAA4BouD,MAA5B,GAAqC,YAAY;IAC7CvvD,gBAAgB,CAAC,0BAAD,EAA6B,CAA7B,EAAgC,CAAhC,EAAmCsD,SAAS,CAACC,MAA7C,CAAhB;IACA,OAAO;MAAE4yD,SAAS,EAAE,KAAKA,SAAlB;MAA6BtI,QAAQ,EAAE,KAAKA,QAAL,CAAc0B,MAAd;IAAvC,CAAP;EACH,CAHD;;EAIA,OAAO2G,iBAAP;AACH,CAfsC,EAAvC;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;;;AACA,IAAIjG,YAAY;AAAG;AAAe,YAAY;EAC1C,SAASA,YAAT,CAAsBwG,SAAtB,EAAiCH,SAAjC,EAA4C;IACxC,KAAKG,SAAL,GAAiBA,SAAjB;IACA,KAAKH,SAAL,GAAiBA,SAAjB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIrG,YAAY,CAAC9uD,SAAb,CAAuBgwB,GAAvB,GAA6B,YAAY;IACrCnxB,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BsD,SAAS,CAACC,MAArC,CAAhB;IACA,OAAO,KAAK+yD,SAAL,CAAenlC,GAAf,EAAP;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;;;EACI8+B,YAAY,CAAC9uD,SAAb,CAAuB6sD,SAAvB,GAAmC,YAAY;IAC3ChuD,gBAAgB,CAAC,wBAAD,EAA2B,CAA3B,EAA8B,CAA9B,EAAiCsD,SAAS,CAACC,MAA3C,CAAhB;IACA,OAAO,KAAK+yD,SAAL,CAAetI,SAAf,EAAP;EACH,CAHD,CApB0C,CAwB1C;EACA;;;EACAiC,YAAY,CAAC9uD,SAAb,CAAuBouD,MAAvB,GAAgC,YAAY;IACxC;IACAvvD,gBAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BsD,SAAS,CAACC,MAAxC,CAAhB;IACA,OAAO,KAAK+yD,SAAL,CAAe/G,MAAf,EAAP;EACH,CAJD;EAKA;AACJ;AACA;AACA;AACA;;;EACIU,YAAY,CAAC9uD,SAAb,CAAuBkvD,MAAvB,GAAgC,YAAY;IACxCrwD,gBAAgB,CAAC,qBAAD,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BsD,SAAS,CAACC,MAAxC,CAAhB;IACA,OAAO,KAAK+yD,SAAL,CAAejG,MAAf,EAAP;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;;;EACIJ,YAAY,CAAC9uD,SAAb,CAAuBqlB,KAAvB,GAA+B,UAAUtC,IAAV,EAAgB;IAC3ClkB,gBAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BsD,SAAS,CAACC,MAAvC,CAAhB,CAD2C,CAE3C;;IACA2gB,IAAI,GAAG/I,MAAM,CAAC+I,IAAD,CAAb;IACAo/B,kBAAkB,CAAC,oBAAD,EAAuB,MAAvB,EAA+Bp/B,IAA/B,EAAqC,KAArC,CAAlB;IACA,OAAO,IAAI+rC,YAAJ,CAAiB,KAAKwG,SAAtB,EAAiC,KAAKH,SAAL,CAAe9vC,KAAf,CAAqBtC,IAArB,CAAjC,CAAP;EACH,CAND;EAOA;AACJ;AACA;AACA;AACA;AACA;;;EACI+rC,YAAY,CAAC9uD,SAAb,CAAuB00B,QAAvB,GAAkC,UAAU3R,IAAV,EAAgB;IAC9ClkB,gBAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6B,CAA7B,EAAgCsD,SAAS,CAACC,MAA1C,CAAhB;IACA+/C,kBAAkB,CAAC,uBAAD,EAA0B,MAA1B,EAAkCp/B,IAAlC,EAAwC,KAAxC,CAAlB;IACA,OAAO,KAAKoyC,SAAL,CAAezgC,QAAf,CAAwB3R,IAAxB,CAAP;EACH,CAJD;EAKA;AACJ;AACA;AACA;AACA;;;EACI+rC,YAAY,CAAC9uD,SAAb,CAAuB+zB,WAAvB,GAAqC,YAAY;IAC7Cl1B,gBAAgB,CAAC,0BAAD,EAA6B,CAA7B,EAAgC,CAAhC,EAAmCsD,SAAS,CAACC,MAA7C,CAAhB;IACA,OAAO,KAAK+yD,SAAL,CAAexhC,QAAtB;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIm7B,YAAY,CAAC9uD,SAAb,CAAuB0lC,OAAvB,GAAiC,UAAUnd,MAAV,EAAkB;IAC/C,IAAI9e,KAAK,GAAG,IAAZ;;IACA5K,gBAAgB,CAAC,sBAAD,EAAyB,CAAzB,EAA4B,CAA5B,EAA+BsD,SAAS,CAACC,MAAzC,CAAhB;IACAtD,gBAAgB,CAAC,sBAAD,EAAyB,QAAzB,EAAmCypB,MAAnC,EAA2C,KAA3C,CAAhB;IACA,OAAO,KAAK4sC,SAAL,CAAezvB,OAAf,CAAuB,UAAUynB,eAAV,EAA2B;MACrD,OAAO5kC,MAAM,CAAC,IAAIumC,YAAJ,CAAiBrlD,KAAK,CAAC6rD,SAAvB,EAAkCnI,eAAlC,CAAD,CAAb;IACH,CAFM,CAAP;EAGH,CAPD;EAQA;AACJ;AACA;AACA;;;EACI2B,YAAY,CAAC9uD,SAAb,CAAuBmvD,WAAvB,GAAqC,YAAY;IAC7CtwD,gBAAgB,CAAC,0BAAD,EAA6B,CAA7B,EAAgC,CAAhC,EAAmCsD,SAAS,CAACC,MAA7C,CAAhB;IACA,OAAO,KAAK+yD,SAAL,CAAehG,WAAf,EAAP;EACH,CAHD;;EAIAriD,MAAM,CAACC,cAAP,CAAsB+hD,YAAY,CAAC9uD,SAAnC,EAA8C,KAA9C,EAAqD;IACjDO,GAAG,EAAE,YAAY;MACb,OAAO,KAAK40D,SAAL,CAAej1D,GAAtB;IACH,CAHgD;IAIjD+M,UAAU,EAAE,KAJqC;IAKjDC,YAAY,EAAE;EALmC,CAArD;EAOA;AACJ;AACA;AACA;;EACI4hD,YAAY,CAAC9uD,SAAb,CAAuBi1B,WAAvB,GAAqC,YAAY;IAC7Cp2B,gBAAgB,CAAC,0BAAD,EAA6B,CAA7B,EAAgC,CAAhC,EAAmCsD,SAAS,CAACC,MAA7C,CAAhB;IACA,OAAO,KAAK+yD,SAAL,CAAez/C,IAAtB;EACH,CAHD;EAIA;AACJ;AACA;AACA;;;EACIo5C,YAAY,CAAC9uD,SAAb,CAAuBu1D,MAAvB,GAAgC,YAAY;IACxC12D,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BsD,SAAS,CAACC,MAArC,CAAhB;IACA,OAAO,IAAIozD,SAAJ,CAAc,KAAKF,SAAnB,EAA8B,KAAKH,SAAL,CAAexI,GAA7C,CAAP;EACH,CAHD;;EAIA7/C,MAAM,CAACC,cAAP,CAAsB+hD,YAAY,CAAC9uD,SAAnC,EAA8C,KAA9C,EAAqD;IACjDO,GAAG,EAAE,YAAY;MACb,OAAO,KAAKg1D,MAAL,EAAP;IACH,CAHgD;IAIjDtoD,UAAU,EAAE,KAJqC;IAKjDC,YAAY,EAAE;EALmC,CAArD;EAOA,OAAO4hD,YAAP;AACH,CAhIiC,EAAlC;AAiIA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI2G,KAAK;AAAG;AAAe,YAAY;EACnC,SAASA,KAAT,CAAeC,QAAf,EAAyBP,SAAzB,EAAoC;IAChC,KAAKO,QAAL,GAAgBA,QAAhB;IACA,KAAKP,SAAL,GAAiBA,SAAjB;EACH;;EACDM,KAAK,CAACz1D,SAAN,CAAgBuhB,EAAhB,GAAqB,UAAUH,SAAV,EAAqBvS,QAArB,EAA+B8mD,uBAA/B,EAAwDr0C,OAAxD,EAAiE;IAClF,IAAI7X,KAAK,GAAG,IAAZ;;IACA,IAAIY,EAAJ;;IACAxL,gBAAgB,CAAC,UAAD,EAAa,CAAb,EAAgB,CAAhB,EAAmBsD,SAAS,CAACC,MAA7B,CAAhB;IACAtD,gBAAgB,CAAC,UAAD,EAAa,UAAb,EAAyB+P,QAAzB,EAAmC,KAAnC,CAAhB;IACA,IAAI+mD,GAAG,GAAGH,KAAK,CAACI,wBAAN,CAA+B,UAA/B,EAA2CF,uBAA3C,EAAoEr0C,OAApE,CAAV;;IACA,IAAIw0C,aAAa,GAAG,UAAUC,WAAV,EAAuB3I,iBAAvB,EAA0C;MAC1Dv+C,QAAQ,CAACuM,IAAT,CAAcw6C,GAAG,CAACt0C,OAAlB,EAA2B,IAAIwtC,YAAJ,CAAiBrlD,KAAK,CAACisD,QAAvB,EAAiCK,WAAjC,CAA3B,EAA0E3I,iBAA1E;IACH,CAFD;;IAGA0I,aAAa,CAACvI,YAAd,GAA6B1+C,QAA7B;IACAinD,aAAa,CAACx0C,OAAd,GAAwBs0C,GAAG,CAACt0C,OAA5B;IACA,IAAI2rC,cAAc,GAAG,CAAC5iD,EAAE,GAAGurD,GAAG,CAAClI,MAAV,MAAsB,IAAtB,IAA8BrjD,EAAE,KAAK,KAAK,CAA1C,GAA8C,KAAK,CAAnD,GAAuDA,EAAE,CAAClH,IAAH,CAAQyyD,GAAG,CAACt0C,OAAZ,CAA5E;;IACA,QAAQF,SAAR;MACI,KAAK,OAAL;QACI8rC,OAAO,CAAC,KAAKiI,SAAN,EAAiBW,aAAjB,EAAgC7I,cAAhC,CAAP;QACA,OAAOp+C,QAAP;;MACJ,KAAK,aAAL;QACIyhD,YAAY,CAAC,KAAK6E,SAAN,EAAiBW,aAAjB,EAAgC7I,cAAhC,CAAZ;QACA,OAAOp+C,QAAP;;MACJ,KAAK,eAAL;QACI4hD,cAAc,CAAC,KAAK0E,SAAN,EAAiBW,aAAjB,EAAgC7I,cAAhC,CAAd;QACA,OAAOp+C,QAAP;;MACJ,KAAK,eAAL;QACI0hD,cAAc,CAAC,KAAK4E,SAAN,EAAiBW,aAAjB,EAAgC7I,cAAhC,CAAd;QACA,OAAOp+C,QAAP;;MACJ,KAAK,aAAL;QACI2hD,YAAY,CAAC,KAAK2E,SAAN,EAAiBW,aAAjB,EAAgC7I,cAAhC,CAAZ;QACA,OAAOp+C,QAAP;;MACJ;QACI,MAAM,IAAIrL,KAAJ,CAAU9E,WAAW,CAAC,UAAD,EAAa,WAAb,CAAX,GACZ,wEADY,GAEZ,oCAFE,CAAN;IAjBR;EAqBH,CAjCD;;EAkCA+2D,KAAK,CAACz1D,SAAN,CAAgB2hB,GAAhB,GAAsB,UAAUP,SAAV,EAAqBvS,QAArB,EAA+ByS,OAA/B,EAAwC;IAC1DziB,gBAAgB,CAAC,WAAD,EAAc,CAAd,EAAiB,CAAjB,EAAoBsD,SAAS,CAACC,MAA9B,CAAhB;IACA4/C,iBAAiB,CAAC,WAAD,EAAc5gC,SAAd,EAAyB,IAAzB,CAAjB;IACAtiB,gBAAgB,CAAC,WAAD,EAAc,UAAd,EAA0B+P,QAA1B,EAAoC,IAApC,CAAhB;IACA9P,qBAAqB,CAAC,WAAD,EAAc,SAAd,EAAyBuiB,OAAzB,EAAkC,IAAlC,CAArB;;IACA,IAAIzS,QAAJ,EAAc;MACV,IAAIinD,aAAa,GAAG,YAAY,CAAG,CAAnC;;MACAA,aAAa,CAACvI,YAAd,GAA6B1+C,QAA7B;MACAinD,aAAa,CAACx0C,OAAd,GAAwBA,OAAxB;MACAK,GAAG,CAAC,KAAKwzC,SAAN,EAAiB/zC,SAAjB,EAA4B00C,aAA5B,CAAH;IACH,CALD,MAMK;MACDn0C,GAAG,CAAC,KAAKwzC,SAAN,EAAiB/zC,SAAjB,CAAH;IACH;EACJ,CAdD;EAeA;AACJ;AACA;;;EACIq0C,KAAK,CAACz1D,SAAN,CAAgBO,GAAhB,GAAsB,YAAY;IAC9B,IAAIkJ,KAAK,GAAG,IAAZ;;IACA,OAAOlJ,GAAG,CAAC,KAAK40D,SAAN,CAAH,CAAoBtrD,IAApB,CAAyB,UAAUksD,WAAV,EAAuB;MACnD,OAAO,IAAIjH,YAAJ,CAAiBrlD,KAAK,CAACisD,QAAvB,EAAiCK,WAAjC,CAAP;IACH,CAFM,CAAP;EAGH,CALD;EAMA;AACJ;AACA;;;EACIN,KAAK,CAACz1D,SAAN,CAAgBg2D,IAAhB,GAAuB,UAAU50C,SAAV,EAAqBvS,QAArB,EAA+BonD,wBAA/B,EAAyD30C,OAAzD,EAAkE;IACrF,IAAI7X,KAAK,GAAG,IAAZ;;IACA5K,gBAAgB,CAAC,YAAD,EAAe,CAAf,EAAkB,CAAlB,EAAqBsD,SAAS,CAACC,MAA/B,CAAhB;IACAtD,gBAAgB,CAAC,YAAD,EAAe,UAAf,EAA2B+P,QAA3B,EAAqC,IAArC,CAAhB;IACA,IAAI+mD,GAAG,GAAGH,KAAK,CAACI,wBAAN,CAA+B,YAA/B,EAA6CI,wBAA7C,EAAuE30C,OAAvE,CAAV;IACA,IAAIsH,QAAQ,GAAG,IAAI3qB,QAAJ,EAAf;;IACA,IAAI63D,aAAa,GAAG,UAAUC,WAAV,EAAuB3I,iBAAvB,EAA0C;MAC1D,IAAIrhC,MAAM,GAAG,IAAI+iC,YAAJ,CAAiBrlD,KAAK,CAACisD,QAAvB,EAAiCK,WAAjC,CAAb;;MACA,IAAIlnD,QAAJ,EAAc;QACVA,QAAQ,CAACuM,IAAT,CAAcw6C,GAAG,CAACt0C,OAAlB,EAA2ByK,MAA3B,EAAmCqhC,iBAAnC;MACH;;MACDxkC,QAAQ,CAAC3e,OAAT,CAAiB8hB,MAAjB;IACH,CAND;;IAOA+pC,aAAa,CAACvI,YAAd,GAA6B1+C,QAA7B;IACAinD,aAAa,CAACx0C,OAAd,GAAwBs0C,GAAG,CAACt0C,OAA5B;;IACA,IAAI2rC,cAAc,GAAG,UAAU3pD,KAAV,EAAiB;MAClC,IAAIsyD,GAAG,CAAClI,MAAR,EAAgB;QACZkI,GAAG,CAAClI,MAAJ,CAAWtyC,IAAX,CAAgBw6C,GAAG,CAACt0C,OAApB,EAA6Bhe,KAA7B;MACH;;MACDslB,QAAQ,CAAC1e,MAAT,CAAgB5G,KAAhB;IACH,CALD;;IAMA,QAAQ8d,SAAR;MACI,KAAK,OAAL;QACI8rC,OAAO,CAAC,KAAKiI,SAAN,EAAiBW,aAAjB,EAAgC7I,cAAhC,EAAgD;UACnDgD,QAAQ,EAAE;QADyC,CAAhD,CAAP;QAGA;;MACJ,KAAK,aAAL;QACIK,YAAY,CAAC,KAAK6E,SAAN,EAAiBW,aAAjB,EAAgC7I,cAAhC,EAAgD;UACxDgD,QAAQ,EAAE;QAD8C,CAAhD,CAAZ;QAGA;;MACJ,KAAK,eAAL;QACIQ,cAAc,CAAC,KAAK0E,SAAN,EAAiBW,aAAjB,EAAgC7I,cAAhC,EAAgD;UAC1DgD,QAAQ,EAAE;QADgD,CAAhD,CAAd;QAGA;;MACJ,KAAK,eAAL;QACIM,cAAc,CAAC,KAAK4E,SAAN,EAAiBW,aAAjB,EAAgC7I,cAAhC,EAAgD;UAC1DgD,QAAQ,EAAE;QADgD,CAAhD,CAAd;QAGA;;MACJ,KAAK,aAAL;QACIO,YAAY,CAAC,KAAK2E,SAAN,EAAiBW,aAAjB,EAAgC7I,cAAhC,EAAgD;UACxDgD,QAAQ,EAAE;QAD8C,CAAhD,CAAZ;QAGA;;MACJ;QACI,MAAM,IAAIzsD,KAAJ,CAAU9E,WAAW,CAAC,YAAD,EAAe,WAAf,CAAX,GACZ,wEADY,GAEZ,oCAFE,CAAN;IA3BR;;IA+BA,OAAOkqB,QAAQ,CAACS,OAAhB;EACH,CArDD;EAsDA;AACJ;AACA;;;EACIosC,KAAK,CAACz1D,SAAN,CAAgBwxD,YAAhB,GAA+B,UAAUC,KAAV,EAAiB;IAC5C5yD,gBAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BsD,SAAS,CAACC,MAAvC,CAAhB;IACA,OAAO,IAAIqzD,KAAJ,CAAU,KAAKC,QAAf,EAAyBrtD,KAAK,CAAC,KAAK8sD,SAAN,EAAiB3D,YAAY,CAACC,KAAD,CAA7B,CAA9B,CAAP;EACH,CAHD;EAIA;AACJ;AACA;;;EACIgE,KAAK,CAACz1D,SAAN,CAAgB2xD,WAAhB,GAA8B,UAAUF,KAAV,EAAiB;IAC3C5yD,gBAAgB,CAAC,mBAAD,EAAsB,CAAtB,EAAyB,CAAzB,EAA4BsD,SAAS,CAACC,MAAtC,CAAhB;IACA,OAAO,IAAIqzD,KAAJ,CAAU,KAAKC,QAAf,EAAyBrtD,KAAK,CAAC,KAAK8sD,SAAN,EAAiBxD,WAAW,CAACF,KAAD,CAA5B,CAA9B,CAAP;EACH,CAHD;EAIA;AACJ;AACA;;;EACIgE,KAAK,CAACz1D,SAAN,CAAgB8xD,YAAhB,GAA+B,UAAU/uC,IAAV,EAAgB;IAC3ClkB,gBAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BsD,SAAS,CAACC,MAAvC,CAAhB;IACA,OAAO,IAAIqzD,KAAJ,CAAU,KAAKC,QAAf,EAAyBrtD,KAAK,CAAC,KAAK8sD,SAAN,EAAiBrD,YAAY,CAAC/uC,IAAD,CAA7B,CAA9B,CAAP;EACH,CAHD;EAIA;AACJ;AACA;;;EACI0yC,KAAK,CAACz1D,SAAN,CAAgBgyD,UAAhB,GAA6B,YAAY;IACrCnzD,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BsD,SAAS,CAACC,MAArC,CAAhB;IACA,OAAO,IAAIqzD,KAAJ,CAAU,KAAKC,QAAf,EAAyBrtD,KAAK,CAAC,KAAK8sD,SAAN,EAAiBnD,UAAU,EAA3B,CAA9B,CAAP;EACH,CAHD;EAIA;AACJ;AACA;;;EACIyD,KAAK,CAACz1D,SAAN,CAAgBkyD,eAAhB,GAAkC,YAAY;IAC1CrzD,gBAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6B,CAA7B,EAAgCsD,SAAS,CAACC,MAA1C,CAAhB;IACA,OAAO,IAAIqzD,KAAJ,CAAU,KAAKC,QAAf,EAAyBrtD,KAAK,CAAC,KAAK8sD,SAAN,EAAiBjD,eAAe,EAAhC,CAA9B,CAAP;EACH,CAHD;EAIA;AACJ;AACA;;;EACIuD,KAAK,CAACz1D,SAAN,CAAgBoyD,YAAhB,GAA+B,YAAY;IACvCvzD,gBAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BsD,SAAS,CAACC,MAAvC,CAAhB;IACA,OAAO,IAAIqzD,KAAJ,CAAU,KAAKC,QAAf,EAAyBrtD,KAAK,CAAC,KAAK8sD,SAAN,EAAiB/C,YAAY,EAA7B,CAA9B,CAAP;EACH,CAHD;;EAIAqD,KAAK,CAACz1D,SAAN,CAAgBmxD,OAAhB,GAA0B,UAAUhxD,KAAV,EAAiBV,IAAjB,EAAuB;IAC7C,IAAIU,KAAK,KAAK,KAAK,CAAnB,EAAsB;MAAEA,KAAK,GAAG,IAAR;IAAe;;IACvCtB,gBAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwBsD,SAAS,CAACC,MAAlC,CAAhB;IACA,OAAO,IAAIqzD,KAAJ,CAAU,KAAKC,QAAf,EAAyBrtD,KAAK,CAAC,KAAK8sD,SAAN,EAAiBhE,OAAO,CAAChxD,KAAD,EAAQV,IAAR,CAAxB,CAA9B,CAAP;EACH,CAJD;;EAKAg2D,KAAK,CAACz1D,SAAN,CAAgBqxD,UAAhB,GAA6B,UAAUlxD,KAAV,EAAiBV,IAAjB,EAAuB;IAChD,IAAIU,KAAK,KAAK,KAAK,CAAnB,EAAsB;MAAEA,KAAK,GAAG,IAAR;IAAe;;IACvCtB,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BsD,SAAS,CAACC,MAArC,CAAhB;IACA,OAAO,IAAIqzD,KAAJ,CAAU,KAAKC,QAAf,EAAyBrtD,KAAK,CAAC,KAAK8sD,SAAN,EAAiB9D,UAAU,CAAClxD,KAAD,EAAQV,IAAR,CAA3B,CAA9B,CAAP;EACH,CAJD;;EAKAg2D,KAAK,CAACz1D,SAAN,CAAgB+wD,KAAhB,GAAwB,UAAU5wD,KAAV,EAAiBV,IAAjB,EAAuB;IAC3C,IAAIU,KAAK,KAAK,KAAK,CAAnB,EAAsB;MAAEA,KAAK,GAAG,IAAR;IAAe;;IACvCtB,gBAAgB,CAAC,aAAD,EAAgB,CAAhB,EAAmB,CAAnB,EAAsBsD,SAAS,CAACC,MAAhC,CAAhB;IACA,OAAO,IAAIqzD,KAAJ,CAAU,KAAKC,QAAf,EAAyBrtD,KAAK,CAAC,KAAK8sD,SAAN,EAAiBpE,KAAK,CAAC5wD,KAAD,EAAQV,IAAR,CAAtB,CAA9B,CAAP;EACH,CAJD;;EAKAg2D,KAAK,CAACz1D,SAAN,CAAgBixD,SAAhB,GAA4B,UAAU9wD,KAAV,EAAiBV,IAAjB,EAAuB;IAC/C,IAAIU,KAAK,KAAK,KAAK,CAAnB,EAAsB;MAAEA,KAAK,GAAG,IAAR;IAAe;;IACvCtB,gBAAgB,CAAC,iBAAD,EAAoB,CAApB,EAAuB,CAAvB,EAA0BsD,SAAS,CAACC,MAApC,CAAhB;IACA,OAAO,IAAIqzD,KAAJ,CAAU,KAAKC,QAAf,EAAyBrtD,KAAK,CAAC,KAAK8sD,SAAN,EAAiBlE,SAAS,CAAC9wD,KAAD,EAAQV,IAAR,CAA1B,CAA9B,CAAP;EACH,CAJD;EAKA;AACJ;AACA;AACA;;;EACIg2D,KAAK,CAACz1D,SAAN,CAAgBsyD,OAAhB,GAA0B,UAAUnyD,KAAV,EAAiBV,IAAjB,EAAuB;IAC7CZ,gBAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwBsD,SAAS,CAACC,MAAlC,CAAhB;IACA,OAAO,IAAIqzD,KAAJ,CAAU,KAAKC,QAAf,EAAyBrtD,KAAK,CAAC,KAAK8sD,SAAN,EAAiB7C,OAAO,CAACnyD,KAAD,EAAQV,IAAR,CAAxB,CAA9B,CAAP;EACH,CAHD;EAIA;AACJ;AACA;;;EACIg2D,KAAK,CAACz1D,SAAN,CAAgBW,QAAhB,GAA2B,YAAY;IACnC9B,gBAAgB,CAAC,gBAAD,EAAmB,CAAnB,EAAsB,CAAtB,EAAyBsD,SAAS,CAACC,MAAnC,CAAhB;IACA,OAAO,KAAK+yD,SAAL,CAAex0D,QAAf,EAAP;EACH,CAHD,CAjMmC,CAqMnC;EACA;;;EACA80D,KAAK,CAACz1D,SAAN,CAAgBouD,MAAhB,GAAyB,YAAY;IACjC;IACAvvD,gBAAgB,CAAC,cAAD,EAAiB,CAAjB,EAAoB,CAApB,EAAuBsD,SAAS,CAACC,MAAjC,CAAhB;IACA,OAAO,KAAK+yD,SAAL,CAAe/G,MAAf,EAAP;EACH,CAJD;EAKA;AACJ;AACA;;;EACIqH,KAAK,CAACz1D,SAAN,CAAgBguD,OAAhB,GAA0B,UAAUtpC,KAAV,EAAiB;IACvC7lB,gBAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwBsD,SAAS,CAACC,MAAlC,CAAhB;;IACA,IAAI,EAAEsiB,KAAK,YAAY+wC,KAAnB,CAAJ,EAA+B;MAC3B,IAAInyD,KAAK,GAAG,sFAAZ;MACA,MAAM,IAAIE,KAAJ,CAAUF,KAAV,CAAN;IACH;;IACD,OAAO,KAAK6xD,SAAL,CAAenH,OAAf,CAAuBtpC,KAAK,CAACywC,SAA7B,CAAP;EACH,CAPD;EAQA;AACJ;AACA;AACA;AACA;;;EACIM,KAAK,CAACI,wBAAN,GAAiC,UAAUxU,MAAV,EAAkB6U,eAAlB,EAAmC50C,OAAnC,EAA4C;IACzE,IAAIs0C,GAAG,GAAG;MAAElI,MAAM,EAAEvkC,SAAV;MAAqB7H,OAAO,EAAE6H;IAA9B,CAAV;;IACA,IAAI+sC,eAAe,IAAI50C,OAAvB,EAAgC;MAC5Bs0C,GAAG,CAAClI,MAAJ,GAAawI,eAAb;MACAp3D,gBAAgB,CAACuiD,MAAD,EAAS,QAAT,EAAmBuU,GAAG,CAAClI,MAAvB,EAA+B,IAA/B,CAAhB;MACAkI,GAAG,CAACt0C,OAAJ,GAAcA,OAAd;MACAviB,qBAAqB,CAACsiD,MAAD,EAAS,SAAT,EAAoBuU,GAAG,CAACt0C,OAAxB,EAAiC,IAAjC,CAArB;IACH,CALD,MAMK,IAAI40C,eAAJ,EAAqB;MACtB;MACA,IAAI,OAAOA,eAAP,KAA2B,QAA3B,IAAuCA,eAAe,KAAK,IAA/D,EAAqE;QACjE;QACAN,GAAG,CAACt0C,OAAJ,GAAc40C,eAAd;MACH,CAHD,MAIK,IAAI,OAAOA,eAAP,KAA2B,UAA/B,EAA2C;QAC5CN,GAAG,CAAClI,MAAJ,GAAawI,eAAb;MACH,CAFI,MAGA;QACD,MAAM,IAAI1yD,KAAJ,CAAU9E,WAAW,CAAC2iD,MAAD,EAAS,iBAAT,CAAX,GACZ,wDADE,CAAN;MAEH;IACJ;;IACD,OAAOuU,GAAP;EACH,CAvBD;;EAwBA9oD,MAAM,CAACC,cAAP,CAAsB0oD,KAAK,CAACz1D,SAA5B,EAAuC,KAAvC,EAA8C;IAC1CO,GAAG,EAAE,YAAY;MACb,OAAO,IAAIi1D,SAAJ,CAAc,KAAKE,QAAnB,EAA6B,IAAI3H,aAAJ,CAAkB,KAAKoH,SAAL,CAAe3c,KAAjC,EAAwC,KAAK2c,SAAL,CAAe5sD,KAAvD,CAA7B,CAAP;IACH,CAHyC;IAI1C0E,UAAU,EAAE,KAJ8B;IAK1CC,YAAY,EAAE;EAL4B,CAA9C;EAOA,OAAOuoD,KAAP;AACH,CA5P0B,EAA3B;;AA6PA,IAAID,SAAS;AAAG;AAAe,UAAUxzC,MAAV,EAAkB;EAC7C7iB,SAAS,CAACq2D,SAAD,EAAYxzC,MAAZ,CAAT;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACI,SAASwzC,SAAT,CAAmBE,QAAnB,EAA6BP,SAA7B,EAAwC;IACpC,IAAI1rD,KAAK,GAAGuY,MAAM,CAAC5G,IAAP,CAAY,IAAZ,EAAkBs6C,QAAlB,EAA4B,IAAI7H,SAAJ,CAAcsH,SAAS,CAAC3c,KAAxB,EAA+B2c,SAAS,CAAC5sD,KAAzC,EAAgD,IAAIs5B,WAAJ,EAAhD,EAAmE,KAAnE,CAA5B,KAA0G,IAAtH;;IACAp4B,KAAK,CAACisD,QAAN,GAAiBA,QAAjB;IACAjsD,KAAK,CAAC0rD,SAAN,GAAkBA,SAAlB;IACA,OAAO1rD,KAAP;EACH;EACD;;;EACA+rD,SAAS,CAACx1D,SAAV,CAAoBm2D,MAApB,GAA6B,YAAY;IACrCt3D,gBAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwBsD,SAAS,CAACC,MAAlC,CAAhB;IACA,OAAO,KAAK+yD,SAAL,CAAej1D,GAAtB;EACH,CAHD;;EAIAs1D,SAAS,CAACx1D,SAAV,CAAoBqlB,KAApB,GAA4B,UAAUjF,UAAV,EAAsB;IAC9CvhB,gBAAgB,CAAC,iBAAD,EAAoB,CAApB,EAAuB,CAAvB,EAA0BsD,SAAS,CAACC,MAApC,CAAhB;;IACA,IAAI,OAAOge,UAAP,KAAsB,QAA1B,EAAoC;MAChCA,UAAU,GAAGpG,MAAM,CAACoG,UAAD,CAAnB;IACH;;IACD,OAAO,IAAIo1C,SAAJ,CAAc,KAAKE,QAAnB,EAA6BrwC,KAAK,CAAC,KAAK8vC,SAAN,EAAiB/0C,UAAjB,CAAlC,CAAP;EACH,CAND;EAOA;;;EACAo1C,SAAS,CAACx1D,SAAV,CAAoBo2D,SAApB,GAAgC,YAAY;IACxCv3D,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BsD,SAAS,CAACC,MAArC,CAAhB;IACA,IAAIu9C,MAAM,GAAG,KAAKwV,SAAL,CAAexV,MAA5B;IACA,OAAOA,MAAM,GAAG,IAAI6V,SAAJ,CAAc,KAAKE,QAAnB,EAA6B/V,MAA7B,CAAH,GAA0C,IAAvD;EACH,CAJD;EAKA;;;EACA6V,SAAS,CAACx1D,SAAV,CAAoBq2D,OAApB,GAA8B,YAAY;IACtCx3D,gBAAgB,CAAC,gBAAD,EAAmB,CAAnB,EAAsB,CAAtB,EAAyBsD,SAAS,CAACC,MAAnC,CAAhB;IACA,OAAO,IAAIozD,SAAJ,CAAc,KAAKE,QAAnB,EAA6B,KAAKP,SAAL,CAAer9B,IAA5C,CAAP;EACH,CAHD;;EAIA09B,SAAS,CAACx1D,SAAV,CAAoBC,GAApB,GAA0B,UAAUqmD,MAAV,EAAkBjmC,UAAlB,EAA8B;IACpDxhB,gBAAgB,CAAC,eAAD,EAAkB,CAAlB,EAAqB,CAArB,EAAwBsD,SAAS,CAACC,MAAlC,CAAhB;IACAtD,gBAAgB,CAAC,eAAD,EAAkB,YAAlB,EAAgCuhB,UAAhC,EAA4C,IAA5C,CAAhB;IACA,IAAI0L,MAAM,GAAG9rB,GAAG,CAAC,KAAKk1D,SAAN,EAAiB7O,MAAjB,CAAhB;;IACA,IAAIjmC,UAAJ,EAAgB;MACZ0L,MAAM,CAACliB,IAAP,CAAY,YAAY;QAAE,OAAOwW,UAAU,CAAC,IAAD,CAAjB;MAA0B,CAApD,EAAsD,UAAU/c,KAAV,EAAiB;QAAE,OAAO+c,UAAU,CAAC/c,KAAD,CAAjB;MAA2B,CAApG;IACH;;IACD,OAAOyoB,MAAP;EACH,CARD;;EASAypC,SAAS,CAACx1D,SAAV,CAAoB4B,MAApB,GAA6B,UAAU8sB,MAAV,EAAkBrO,UAAlB,EAA8B;IACvDxhB,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BsD,SAAS,CAACC,MAArC,CAAhB;;IACA,IAAII,KAAK,CAACC,OAAN,CAAcisB,MAAd,CAAJ,EAA2B;MACvB,IAAI2mC,gBAAgB,GAAG,EAAvB;;MACA,KAAK,IAAI/yD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGosB,MAAM,CAACtsB,MAA3B,EAAmC,EAAEE,CAArC,EAAwC;QACpC+yD,gBAAgB,CAAC,KAAK/yD,CAAN,CAAhB,GAA2BosB,MAAM,CAACpsB,CAAD,CAAjC;MACH;;MACDosB,MAAM,GAAG2mC,gBAAT;MACA5xD,IAAI,CAAC,0DACD,2DADC,GAED,uDAFC,GAGD,mCAHA,CAAJ;IAIH;;IACD4+C,oBAAoB,CAAC,kBAAD,EAAqB,KAAK8S,SAAL,CAAe5sD,KAApC,CAApB;IACAzJ,gBAAgB,CAAC,kBAAD,EAAqB,YAArB,EAAmCuhB,UAAnC,EAA+C,IAA/C,CAAhB;IACA,IAAI0L,MAAM,GAAGnqB,MAAM,CAAC,KAAKuzD,SAAN,EAAiBzmC,MAAjB,CAAnB;;IACA,IAAIrO,UAAJ,EAAgB;MACZ0L,MAAM,CAACliB,IAAP,CAAY,YAAY;QAAE,OAAOwW,UAAU,CAAC,IAAD,CAAjB;MAA0B,CAApD,EAAsD,UAAU/c,KAAV,EAAiB;QAAE,OAAO+c,UAAU,CAAC/c,KAAD,CAAjB;MAA2B,CAApG;IACH;;IACD,OAAOyoB,MAAP;EACH,CApBD;;EAqBAypC,SAAS,CAACx1D,SAAV,CAAoB4tD,eAApB,GAAsC,UAAUtH,MAAV,EAAkBtsB,WAAlB,EAA+B3Z,UAA/B,EAA2C;IAC7ExhB,gBAAgB,CAAC,2BAAD,EAA8B,CAA9B,EAAiC,CAAjC,EAAoCsD,SAAS,CAACC,MAA9C,CAAhB;IACAtD,gBAAgB,CAAC,2BAAD,EAA8B,YAA9B,EAA4CuhB,UAA5C,EAAwD,IAAxD,CAAhB;IACA,IAAI0L,MAAM,GAAG6hC,eAAe,CAAC,KAAKuH,SAAN,EAAiB7O,MAAjB,EAAyBtsB,WAAzB,CAA5B;;IACA,IAAI3Z,UAAJ,EAAgB;MACZ0L,MAAM,CAACliB,IAAP,CAAY,YAAY;QAAE,OAAOwW,UAAU,CAAC,IAAD,CAAjB;MAA0B,CAApD,EAAsD,UAAU/c,KAAV,EAAiB;QAAE,OAAO+c,UAAU,CAAC/c,KAAD,CAAjB;MAA2B,CAApG;IACH;;IACD,OAAOyoB,MAAP;EACH,CARD;;EASAypC,SAAS,CAACx1D,SAAV,CAAoBU,MAApB,GAA6B,UAAU2f,UAAV,EAAsB;IAC/CxhB,gBAAgB,CAAC,kBAAD,EAAqB,CAArB,EAAwB,CAAxB,EAA2BsD,SAAS,CAACC,MAArC,CAAhB;IACAtD,gBAAgB,CAAC,kBAAD,EAAqB,YAArB,EAAmCuhB,UAAnC,EAA+C,IAA/C,CAAhB;IACA,IAAI0L,MAAM,GAAGrrB,MAAM,CAAC,KAAKy0D,SAAN,CAAnB;;IACA,IAAI90C,UAAJ,EAAgB;MACZ0L,MAAM,CAACliB,IAAP,CAAY,YAAY;QAAE,OAAOwW,UAAU,CAAC,IAAD,CAAjB;MAA0B,CAApD,EAAsD,UAAU/c,KAAV,EAAiB;QAAE,OAAO+c,UAAU,CAAC/c,KAAD,CAAjB;MAA2B,CAApG;IACH;;IACD,OAAOyoB,MAAP;EACH,CARD;;EASAypC,SAAS,CAACx1D,SAAV,CAAoBwoD,WAApB,GAAkC,UAAUH,iBAAV,EAA6BhoC,UAA7B,EAAyCkoC,YAAzC,EAAuD;IACrF,IAAI9+C,KAAK,GAAG,IAAZ;;IACA5K,gBAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6B,CAA7B,EAAgCsD,SAAS,CAACC,MAA1C,CAAhB;IACAtD,gBAAgB,CAAC,uBAAD,EAA0B,mBAA1B,EAA+CupD,iBAA/C,EAAkE,KAAlE,CAAhB;IACAvpD,gBAAgB,CAAC,uBAAD,EAA0B,YAA1B,EAAwCuhB,UAAxC,EAAoD,IAApD,CAAhB;IACAmiC,eAAe,CAAC,uBAAD,EAA0B,cAA1B,EAA0C+F,YAA1C,EAAwD,IAAxD,CAAf;IACA,IAAIx8B,MAAM,GAAGkpC,cAAc,CAAC,KAAKE,SAAN,EAAiB9M,iBAAjB,EAAoC;MAC3DE,YAAY,EAAEA;IAD6C,CAApC,CAAd,CAEV1+C,IAFU,CAEL,UAAUysD,iBAAV,EAA6B;MACjC,OAAO,IAAIvB,iBAAJ,CAAsBuB,iBAAiB,CAACtB,SAAxC,EAAmD,IAAIlG,YAAJ,CAAiBrlD,KAAK,CAACisD,QAAvB,EAAiCY,iBAAiB,CAAC5J,QAAnD,CAAnD,CAAP;IACH,CAJY,CAAb;;IAKA,IAAIrsC,UAAJ,EAAgB;MACZ0L,MAAM,CAACliB,IAAP,CAAY,UAAUysD,iBAAV,EAA6B;QACrC,OAAOj2C,UAAU,CAAC,IAAD,EAAOi2C,iBAAiB,CAACtB,SAAzB,EAAoCsB,iBAAiB,CAAC5J,QAAtD,CAAjB;MACH,CAFD,EAEG,UAAUppD,KAAV,EAAiB;QAAE,OAAO+c,UAAU,CAAC/c,KAAD,EAAQ,KAAR,EAAe,IAAf,CAAjB;MAAwC,CAF9D;IAGH;;IACD,OAAOyoB,MAAP;EACH,CAjBD;;EAkBAypC,SAAS,CAACx1D,SAAV,CAAoB2vD,WAApB,GAAkC,UAAUh8B,QAAV,EAAoBtT,UAApB,EAAgC;IAC9DxhB,gBAAgB,CAAC,uBAAD,EAA0B,CAA1B,EAA6B,CAA7B,EAAgCsD,SAAS,CAACC,MAA1C,CAAhB;IACAtD,gBAAgB,CAAC,uBAAD,EAA0B,YAA1B,EAAwCuhB,UAAxC,EAAoD,IAApD,CAAhB;IACA,IAAI0L,MAAM,GAAG4jC,WAAW,CAAC,KAAKwF,SAAN,EAAiBxhC,QAAjB,CAAxB;;IACA,IAAItT,UAAJ,EAAgB;MACZ0L,MAAM,CAACliB,IAAP,CAAY,YAAY;QAAE,OAAOwW,UAAU,CAAC,IAAD,CAAjB;MAA0B,CAApD,EAAsD,UAAU/c,KAAV,EAAiB;QAAE,OAAO+c,UAAU,CAAC/c,KAAD,CAAjB;MAA2B,CAApG;IACH;;IACD,OAAOyoB,MAAP;EACH,CARD;;EASAypC,SAAS,CAACx1D,SAAV,CAAoB6F,IAApB,GAA2B,UAAU1F,KAAV,EAAiBkgB,UAAjB,EAA6B;IACpD,IAAI5W,KAAK,GAAG,IAAZ;;IACA5K,gBAAgB,CAAC,gBAAD,EAAmB,CAAnB,EAAsB,CAAtB,EAAyBsD,SAAS,CAACC,MAAnC,CAAhB;IACAtD,gBAAgB,CAAC,gBAAD,EAAmB,YAAnB,EAAiCuhB,UAAjC,EAA6C,IAA7C,CAAhB;IACA,IAAIk2C,UAAU,GAAG1wD,IAAI,CAAC,KAAKsvD,SAAN,EAAiBh1D,KAAjB,CAArB;IACA,IAAIkpB,OAAO,GAAGktC,UAAU,CAAC1sD,IAAX,CAAgB,UAAU2sD,MAAV,EAAkB;MAAE,OAAO,IAAIhB,SAAJ,CAAc/rD,KAAK,CAACisD,QAApB,EAA8Bc,MAA9B,CAAP;IAA+C,CAAnF,CAAd;;IACA,IAAIn2C,UAAJ,EAAgB;MACZgJ,OAAO,CAACxf,IAAR,CAAa,YAAY;QAAE,OAAOwW,UAAU,CAAC,IAAD,CAAjB;MAA0B,CAArD,EAAuD,UAAU/c,KAAV,EAAiB;QAAE,OAAO+c,UAAU,CAAC/c,KAAD,CAAjB;MAA2B,CAArG;IACH;;IACD,IAAIyoB,MAAM,GAAG,IAAIypC,SAAJ,CAAc,KAAKE,QAAnB,EAA6Ba,UAA7B,CAAb;IACAxqC,MAAM,CAACliB,IAAP,GAAcwf,OAAO,CAACxf,IAAR,CAAa1G,IAAb,CAAkBkmB,OAAlB,CAAd;IACA0C,MAAM,CAACjhB,KAAP,GAAeue,OAAO,CAACve,KAAR,CAAc3H,IAAd,CAAmBkmB,OAAnB,EAA4BF,SAA5B,CAAf;IACA,OAAO4C,MAAP;EACH,CAbD;;EAcAypC,SAAS,CAACx1D,SAAV,CAAoBqR,YAApB,GAAmC,YAAY;IAC3CgxC,oBAAoB,CAAC,wBAAD,EAA2B,KAAK8S,SAAL,CAAe5sD,KAA1C,CAApB;IACA,OAAO,IAAIklD,YAAJ,CAAiB,IAAID,cAAJ,CAAmB,KAAK2H,SAAL,CAAe3c,KAAlC,EAAyC,KAAK2c,SAAL,CAAe5sD,KAAxD,CAAjB,CAAP;EACH,CAHD;;EAIAuE,MAAM,CAACC,cAAP,CAAsByoD,SAAS,CAACx1D,SAAhC,EAA2C,KAA3C,EAAkD;IAC9CO,GAAG,EAAE,YAAY;MACb,OAAO,KAAK41D,MAAL,EAAP;IACH,CAH6C;IAI9ClpD,UAAU,EAAE,KAJkC;IAK9CC,YAAY,EAAE;EALgC,CAAlD;EAOAJ,MAAM,CAACC,cAAP,CAAsByoD,SAAS,CAACx1D,SAAhC,EAA2C,QAA3C,EAAqD;IACjDO,GAAG,EAAE,YAAY;MACb,OAAO,KAAK61D,SAAL,EAAP;IACH,CAHgD;IAIjDnpD,UAAU,EAAE,KAJqC;IAKjDC,YAAY,EAAE;EALmC,CAArD;EAOAJ,MAAM,CAACC,cAAP,CAAsByoD,SAAS,CAACx1D,SAAhC,EAA2C,MAA3C,EAAmD;IAC/CO,GAAG,EAAE,YAAY;MACb,OAAO,KAAK81D,OAAL,EAAP;IACH,CAH8C;IAI/CppD,UAAU,EAAE,KAJmC;IAK/CC,YAAY,EAAE;EALiC,CAAnD;EAOA,OAAOsoD,SAAP;AACH,CAzJ8B,CAyJ7BC,KAzJ6B,CAA/B;AA2JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,IAAIxB,QAAQ;AAAG;AAAe,YAAY;EACtC;AACJ;AACA;EACI,SAASA,QAAT,CAAkBkB,SAAlB,EAA6BjC,GAA7B,EAAkC;IAC9B,IAAIzpD,KAAK,GAAG,IAAZ;;IACA,KAAK0rD,SAAL,GAAiBA,SAAjB;IACA,KAAKjC,GAAL,GAAWA,GAAX;IACA,KAAKuD,QAAL,GAAgB;MACZ//C,MAAM,EAAE,YAAY;QAAE,OAAOjN,KAAK,CAAC0rD,SAAN,CAAgBd,OAAhB,EAAP;MAAmC;IAD7C,CAAhB;EAGH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIJ,QAAQ,CAACj0D,SAAT,CAAmB02D,WAAnB,GAAiC,UAAUxqD,IAAV,EAAgBigD,IAAhB,EAAsBl0C,OAAtB,EAA+B;IAC5D,IAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;MAAEA,OAAO,GAAG,EAAV;IAAe;;IACzCs8C,uBAAuB,CAAC,KAAKY,SAAN,EAAiBjpD,IAAjB,EAAuBigD,IAAvB,EAA6Bl0C,OAA7B,CAAvB;EACH,CAHD;;EAIAg8C,QAAQ,CAACj0D,SAAT,CAAmB2sD,GAAnB,GAAyB,UAAU5pC,IAAV,EAAgB;IACrClkB,gBAAgB,CAAC,cAAD,EAAiB,CAAjB,EAAoB,CAApB,EAAuBsD,SAAS,CAACC,MAAjC,CAAhB;;IACA,IAAI2gB,IAAI,YAAYyyC,SAApB,EAA+B;MAC3B,IAAIvG,QAAQ,GAAGM,UAAU,CAAC,KAAK4F,SAAN,EAAiBpyC,IAAI,CAACpiB,QAAL,EAAjB,CAAzB;MACA,OAAO,IAAI60D,SAAJ,CAAc,IAAd,EAAoBvG,QAApB,CAAP;IACH,CAHD,MAIK;MACD,IAAIA,QAAQ,GAAGtC,GAAG,CAAC,KAAKwI,SAAN,EAAiBpyC,IAAjB,CAAlB;MACA,OAAO,IAAIyyC,SAAJ,CAAc,IAAd,EAAoBvG,QAApB,CAAP;IACH;EACJ,CAVD;EAWA;AACJ;AACA;AACA;AACA;AACA;;;EACIgF,QAAQ,CAACj0D,SAAT,CAAmBuvD,UAAnB,GAAgC,UAAUj5C,GAAV,EAAe;IAC3C,IAAIg+C,OAAO,GAAG,qBAAd;IACAz1D,gBAAgB,CAACy1D,OAAD,EAAU,CAAV,EAAa,CAAb,EAAgBnyD,SAAS,CAACC,MAA1B,CAAhB;IACA,IAAI6sD,QAAQ,GAAGM,UAAU,CAAC,KAAK4F,SAAN,EAAiB7+C,GAAjB,CAAzB;IACA,OAAO,IAAIk/C,SAAJ,CAAc,IAAd,EAAoBvG,QAApB,CAAP;EACH,CALD,CA1CsC,CAgDtC;;;EACAgF,QAAQ,CAACj0D,SAAT,CAAmBy0D,SAAnB,GAA+B,YAAY;IACvC51D,gBAAgB,CAAC,oBAAD,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BsD,SAAS,CAACC,MAAvC,CAAhB;IACA,OAAOqyD,SAAS,CAAC,KAAKU,SAAN,CAAhB;EACH,CAHD;;EAIAlB,QAAQ,CAACj0D,SAAT,CAAmB00D,QAAnB,GAA8B,YAAY;IACtC71D,gBAAgB,CAAC,mBAAD,EAAsB,CAAtB,EAAyB,CAAzB,EAA4BsD,SAAS,CAACC,MAAtC,CAAhB;IACA,OAAOsyD,QAAQ,CAAC,KAAKS,SAAN,CAAf;EACH,CAHD;;EAIAlB,QAAQ,CAAC0C,WAAT,GAAuB;IACnBC,SAAS,EAAEhC,eAAe,EADP;IAEnBC,SAAS,EAAE,UAAU3mC,KAAV,EAAiB;MAAE,OAAO2mC,SAAS,CAAC3mC,KAAD,CAAhB;IAA0B;EAFrC,CAAvB;EAIA,OAAO+lC,QAAP;AACH,CA9D6B,EAA9B;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI4C,gBAAgB,GAAG,YAAY;EAC/Bl/C,mBAAmB,CAACzE,aAApB;EACA5C,qBAAqB,CAAC0C,UAAtB;AACH,CAHD;;AAIA,IAAI8jD,eAAe,GAAG,YAAY;EAC9BxmD,qBAAqB,CAAC4C,aAAtB;AACH,CAFD;AAGA;;;AACA,IAAIsH,qBAAqB,GAAG,YAAY;EACpC,OAAO7C,mBAAmB,CAAC,aAAD,CAAnB,EAAP;AACH,CAFD;;AAGA,IAAIo/C,wBAAwB,GAAG,UAAUpK,GAAV,EAAe99C,QAAf,EAAyB;EACpD,IAAImoD,UAAU,GAAGrK,GAAG,CAACwI,SAAJ,CAAc3c,KAAd,CAAoB8L,qBAArC,CADoD,CAEpD;;EACA0S,UAAU,CAACtvC,sBAAX,GAAoC7Y,QAApC;AACH,CAJD;;AAKA,IAAIkS,KAAK,GAAG,UAAU4rC,GAAV,EAAe/E,SAAf,EAA0B;EAClCD,SAAS,CAACgF,GAAG,CAACwI,SAAJ,CAAc3c,KAAf,EAAsBoP,SAAtB,CAAT;AACH,CAFD;;AAGA,IAAIqP,qBAAqB,GAAG,UAAUtK,GAAV,EAAexE,MAAf,EAAuB;EAC/CD,yBAAyB,CAACyE,GAAG,CAACwI,SAAJ,CAAc3c,KAAf,EAAsB2P,MAAtB,CAAzB;AACH,CAFD;;AAGA,IAAIlE,eAAe,GAAG,UAAU0I,GAAV,EAAe;EACjC,OAAOA,GAAG,CAACwI,SAAJ,CAAc3c,KAAd,CAAoByL,eAA3B;AACH,CAFD;;AAGA,IAAIiT,mBAAmB,GAAG,UAAUvK,GAAV,EAAe99C,QAAf,EAAyB;EAC/C,OAAOi3C,uBAAuB,CAAC6G,GAAG,CAACwI,SAAJ,CAAc3c,KAAf,EAAsB3pC,QAAtB,CAA9B;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASsoD,cAAT,CAAwB9sD,EAAxB,EAA4B;EACxB,IAAI6oD,GAAG,GAAG7oD,EAAE,CAAC6oD,GAAb;EAAA,IAAkB58C,GAAG,GAAGjM,EAAE,CAACiM,GAA3B;EAAA,IAAgC5W,OAAO,GAAG2K,EAAE,CAAC3K,OAA7C;EAAA,IAAsD03D,cAAc,GAAG/sD,EAAE,CAAC+sD,cAA1E;EAAA,IAA0FhrD,SAAS,GAAG/B,EAAE,CAAC+B,SAAzG;EAAA,IAAoHwO,EAAE,GAAGvQ,EAAE,CAACiC,SAA5H;EAAA,IAAuIA,SAAS,GAAGsO,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAA3K;EACAhb,aAAa,CAACF,OAAD,CAAb;EACA;AACJ;AACA;AACA;;EACI,IAAIyzD,YAAY,GAAG,IAAIj2D,QAAJ,CAAa,eAAb,EAA8B,IAAIC,kBAAJ,CAAuB,qBAAvB,CAA9B,CAAnB;EACAg2D,YAAY,CAACkE,YAAb,CAA0B,IAAIj6D,SAAJ,CAAc,eAAd,EAA+B,YAAY;IAAE,OAAOg6D,cAAP;EAAwB,CAArE,EAAuE;EAAU;EAAjF,CAA1B;EACA,OAAO;IACHE,QAAQ,EAAE,IAAIrD,QAAJ,CAAahB,0BAA0B,CAACC,GAAD,EAAMC,YAAN;IACjD;IAAwBhqC,SADyB,EACd7S,GADc,EACThK,SADS,CAAvC,EAC0C4mD,GAD1C,CADP;IAGH9mD,SAAS,EAAEA;EAHR,CAAP;AAKH;;AAED,IAAIqqD,QAAQ,GAAG,aAAa3pD,MAAM,CAACyqD,MAAP,CAAc;EACxCC,SAAS,EAAE,IAD6B;EAExCX,gBAAgB,EAAEA,gBAFsB;EAGxCC,eAAe,EAAEA,eAHuB;EAIxCt8C,qBAAqB,EAAEA,qBAJiB;EAKxCu8C,wBAAwB,EAAEA,wBALc;EAMxCh2C,KAAK,EAAEA,KANiC;EAOxCk2C,qBAAqB,EAAEA,qBAPiB;EAQxChT,eAAe,EAAEA,eARuB;EASxCiT,mBAAmB,EAAEA,mBATmB;EAUxCC,cAAc,EAAEA;AAVwB,CAAd,CAA5B;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIM,cAAc,GAAGlxC,oBAArB,C,CACA;;AACAA,oBAAoB,CAACvmB,SAArB,CAA+B03D,YAA/B,GAA8C,UAAUt3C,UAAV,EAAsBC,UAAtB,EAAkC;EAC5E,KAAKjC,WAAL,CAAiB,GAAjB,EAAsB;IAAE0K,CAAC,EAAE1I;EAAL,CAAtB,EAAyCC,UAAzC;AACH,CAFD,C,CAGA;;;AACAkG,oBAAoB,CAACvmB,SAArB,CAA+B23D,IAA/B,GAAsC,UAAU5zD,IAAV,EAAgB6zD,MAAhB,EAAwB;EAC1D,KAAKx5C,WAAL,CAAiB,MAAjB,EAAyB;IAAEtI,CAAC,EAAE/R;EAAL,CAAzB,EAAsC6zD,MAAtC;AACH,CAFD,C,CAGA;;;AACA,IAAIC,kBAAkB,GAAGx7C,UAAzB;;AACA,IAAIy7C,UAAU,GAAG,UAAUC,OAAV,EAAmB;EAChC,IAAIC,MAAM,GAAGzxC,oBAAoB,CAACvmB,SAArB,CAA+BmgB,GAA5C;;EACAoG,oBAAoB,CAACvmB,SAArB,CAA+BmgB,GAA/B,GAAqC,UAAUC,UAAV,EAAsBrc,IAAtB,EAA4Bsc,UAA5B,EAAwCC,IAAxC,EAA8C;IAC/E,IAAIA,IAAI,KAAK6I,SAAb,EAAwB;MACpB7I,IAAI,GAAGy3C,OAAO,EAAd;IACH;;IACDC,MAAM,CAAC58C,IAAP,CAAY,IAAZ,EAAkBgF,UAAlB,EAA8Brc,IAA9B,EAAoCsc,UAApC,EAAgDC,IAAhD;EACH,CALD;;EAMA,OAAO,YAAY;IACfiG,oBAAoB,CAACvmB,SAArB,CAA+BmgB,GAA/B,GAAqC63C,MAArC;EACH,CAFD;AAGH,CAXD;;AAYA,IAAIC,gBAAgB,GAAGhsD,QAAvB;;AACA,IAAIisD,eAAe,GAAG,UAAU7vD,KAAV,EAAiB;EACnC,OAAOA,KAAK,CAAC8sD,SAAN,CAAgBzrC,gBAAvB;AACH,CAFD;AAGA;AACA;AACA;;;AACA,IAAIsqC,eAAe,GAAG,UAAUA,eAAV,EAA2B;EAC7CD,0BAA0B,CAACC,eAAD,CAA1B;AACH,CAFD;;AAIA,IAAImE,WAAW,GAAG,aAAarrD,MAAM,CAACyqD,MAAP,CAAc;EAC3CC,SAAS,EAAE,IADgC;EAE3CC,cAAc,EAAEA,cAF2B;EAG3CI,kBAAkB,EAAEA,kBAHuB;EAI3CC,UAAU,EAAEA,UAJ+B;EAK3CG,gBAAgB,EAAEA,gBALyB;EAM3CC,eAAe,EAAEA,eAN0B;EAO3ClE,eAAe,EAAEA;AAP0B,CAAd,CAA/B;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAI2C,WAAW,GAAG1C,QAAQ,CAAC0C,WAA3B;;AACA,SAASyB,gBAAT,CAA0Bd,QAA1B,EAAoC;EAChC;EACA13D,aAAa,CAAC03D,QAAQ,CAAC33D,WAAV,CAAb,CAFgC,CAGhC;;EACA,IAAIyM,SAAS,GAAGkrD,QAAQ,CAACb,QAAT,CAAkB4B,iBAAlB,CAAoC,IAAIj7D,SAAJ,CAAc,UAAd,EAA0B,UAAUizD,SAAV,EAAqBhmD,EAArB,EAAyB;IACnG,IAAIiM,GAAG,GAAGjM,EAAE,CAACiuD,kBAAb;IACA;IACA;;IACA,IAAIpF,GAAG,GAAG7C,SAAS,CAACkI,WAAV,CAAsB,KAAtB,EAA6B5uD,YAA7B,EAAV;IACA,IAAIwpD,YAAY,GAAG9C,SAAS,CAACkI,WAAV,CAAsB,eAAtB,CAAnB;IACA,IAAI/uD,gBAAgB,GAAG6mD,SAAS,CAACkI,WAAV,CAAsB,oBAAtB,CAAvB;IACA,OAAO,IAAItE,QAAJ,CAAahB,0BAA0B,CAACC,GAAD,EAAMC,YAAN,EAAoB3pD,gBAApB,EAAsC8M,GAAtC,CAAvC,EAAmF48C,GAAnF,CAAP;EACH,CARmD,EAQjD;EAAS;EARwC,EAS/CsF,eAT+C,EAUpD;EACA;IACIhD,SAAS,EAAEA,SADf;IAEIC,KAAK,EAAEA,KAFX;IAGIxB,QAAQ,EAAEA,QAHd;IAIInF,YAAY,EAAEA,YAJlB;IAKIjsD,aAAa,EAAEA,aALnB;IAMI4zD,QAAQ,EAAEA,QANd;IAOIE,WAAW,EAAEA,WAPjB;IAQIwB,WAAW,EAAEA;EARjB,CAXoD,EAqB/CM,oBArB+C,CAqB1B,IArB0B,CAApC,CAAhB;EAsBAnB,QAAQ,CAACoB,eAAT,CAAyBj5D,IAAzB,EAA+BC,OAA/B;;EACA,IAAIjC,SAAS,EAAb,EAAiB;IACbk7D,MAAM,CAACC,OAAP,GAAiBxsD,SAAjB;EACH;AACJ;;AACDgsD,gBAAgB,CAACn7D,QAAD,CAAhB;AAEA,SAAS6xD,YAAT,EAAuBmF,QAAvB,EAAiCxG,YAAjC,EAA+CgI,KAA/C,EAAsDD,SAAtD,EAAiEmB,WAAjE,EAA8E9zD,aAA9E,EAA6Fu1D,gBAA7F"},"metadata":{},"sourceType":"module"}