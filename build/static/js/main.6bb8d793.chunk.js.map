{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","props","rooms","setRooms","user","unsubscribe","photoURL","IconButton","SearchOutlined","type","placeholder","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","onChange","e","target","preventDefault","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bb8d793.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n//GET Below Settings from Firebase > Project Overview > Settings > General > Your apps > Firebase SDK snippet > Config\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBYty3qBGKF8PCxw3vY1OUtke08FmVUlh4\",\r\n  authDomain: \"whats-app-clone-4169d.firebaseapp.com\",\r\n  projectId: \"whats-app-clone-4169d\",\r\n  storageBucket: \"whats-app-clone-4169d.appspot.com\",\r\n  messagingSenderId: \"475593444824\",\r\n  appId: \"1:475593444824:web:346f71134049900968b6ad\",\r\n  measurementId: \"G-VWLX1FZ8BJ\"\r\n};\r\n\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore(); \r\n  const auth = firebaseApp.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {auth,provider};\r\n  export default db;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport './SidebarChat.css';\r\nimport db from './firebase';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction SidebarChat({id,name,addNewChat}) {\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [messages, setMessages] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        if(id){\r\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            })\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));        \r\n    }, []);\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please Enter Name for Chat\");\r\n\r\n        if(roomName){\r\n            db.collection(\"rooms\").add({\r\n                name: roomName\r\n            })\r\n        }\r\n    };\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`} key={id}>\r\n            <div className=\"sidebarChat\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className=\"sidebarChat_info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{messages[0]?.message}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n        \r\n    ) : (\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n            <h3 className=\"add-new-chat-title\">Add New Chat</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, {createContext,useContext,useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, {useState,useEffect} from 'react';\r\nimport './Sidebar.css';\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport {SearchOutlined} from \"@material-ui/icons\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar(props) {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{user},dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('rooms').onSnapshot(snapshot => (\r\n            setRooms(snapshot.docs.map(doc => (\r\n                {\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                }\r\n            )\r\n\r\n            ))\r\n        ));\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    },[]); \r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <Avatar src={user?.photoURL}/>\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input type=\"text\" placeholder=\"Search or start new chat\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_chats\">\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map(room=> (\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React, {useState,useEffect} from 'react';\r\nimport {Avatar, IconButton} from '@material-ui/core';\r\nimport {AttachFile, MoreVert, SearchOutlined} from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport './Chat.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport firebase from 'firebase';\r\nimport {useStateValue} from \"./StateProvider\";\r\n\r\nfunction Chat() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const {roomId} = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    useEffect(()=>{\r\n        if(roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\r\n                setRoomName(snapshot.data().name);\r\n            });\r\n\r\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\",\"asc\").onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map(doc => doc.data()))\r\n            });\r\n\r\n        }\r\n    },[roomId])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));        \r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n\r\n        setInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className='chat'>\r\n            <div className='chat_header'>\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className='chat_headerInfo'>\r\n                    <h3 className='chat-room-name'>{roomName}</h3>\r\n                    <p className='chat-room-last-seen'>\r\n                        Last seen {\" \"}\r\n                        {new Date(\r\n                            messages[messages.length - 1]?.\r\n                            timestamp?.toDate()\r\n                        ).toUTCString()}\r\n                    </p>\r\n                </div>\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className='chat_body'>\r\n                {messages.map(message => (\r\n                    <p className={`chat_message ${ message.name == user.displayName && 'chat_receiver'}`}>\r\n                        <span className=\"chat_name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat_timestemp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n                    </p>\r\n                ))}\r\n            </div>\r\n            <div className='chat_footer'>\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\"/>\r\n                    <button type=\"submit\" onClick={sendMessage}> Send a Message</button>\r\n                </form>\r\n                <MicIcon/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","export const initialState = {\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER : \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './Login.css';\r\nimport {auth,provider} from './firebase';\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Login() {\r\n    const [{},dispatch] = useStateValue();\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                })\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n           <div className=\"login\">\r\n           <div className=\"login_container\">\r\n               <img src=\"https://static.vecteezy.com/system/resources/previews/007/802/398/non_2x/realistic-smartphone-chatting-3d-icon-illustrations-vector.jpg\" alt=\"\"/> \r\n                <div className=\"login_text\">\r\n                    <h1>Sign Into Private Talk</h1>\r\n                </div>\r\n                <Button type=\"submit\" onClick={signIn}>Sign in With Google</Button>\r\n           </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","import './App.css';\r\nimport React, {useState} from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport Chat from './Chat';\r\nimport Login from './Login';\r\nimport { BrowserRouter as Router,Switch, Route} from 'react-router-dom';\r\nimport {useStateValue} from './StateProvider';\r\n\r\nfunction App() {\r\n  const [{user}, dispatch] = useStateValue();\r\n  return (\r\n    <div className=\"app\">\r\n        {!user ? (\r\n          <Login/>\r\n        ):(\r\n          <div className=\"app_body\">\r\n            <Router>\r\n              <Sidebar/>\r\n              <Switch>\r\n                <Route path=\"/rooms/:roomId\">\r\n                  <Chat/>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Chat/>\r\n                </Route>              \r\n              </Switch>            \r\n            </Router>\r\n          </div>\r\n        )}\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport reducer,{initialState} from './reducer';\r\nimport {StateProvider} from './StateProvider';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StateProvider initialState={initialState} reducer={reducer}>\r\n    <App />\r\n    </StateProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}